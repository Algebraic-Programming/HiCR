!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/terra/code/hicr/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
#MSearchBox	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only-darkmode-toggle.css	/^    #MSearchBox {$/;"	i
#MSearchBox	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #MSearchBox {$/;"	i
#MSearchBox	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #MSearchBox {$/;"	i
#MSearchBox	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchBox {$/;"	i
#MSearchBox span.left	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchBox span.left, #MSearchBox span.right {$/;"	c
#MSearchBox span.right	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchBox span.left, #MSearchBox span.right {$/;"	c
#MSearchBox span.right	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchBox span.right {$/;"	c
#MSearchBox.MSearchBoxActive	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchBox.MSearchBoxActive {$/;"	c
#MSearchField	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only-darkmode-toggle.css	/^    #MSearchField {$/;"	i
#MSearchField	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #MSearchField {$/;"	i
#MSearchField	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #MSearchField {$/;"	i
#MSearchField	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchField {$/;"	i
#MSearchField	extern/doxygen-awesome-css/doxygen-awesome.css	/^.SelectItem, #MSearchField, .navpath li.navelem a,$/;"	i
#MSearchResults .SRPage	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchResults .SRPage {$/;"	c
#MSearchResults .SRPage .SREntry	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchResults .SRPage .SREntry {$/;"	c
#MSearchResultsWindow	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #MSearchResultsWindow {$/;"	i
#MSearchResultsWindow	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #MSearchResultsWindow {$/;"	i
#MSearchResultsWindow	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchResultsWindow {$/;"	i
#MSearchResultsWindow	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchSelectWindow, #MSearchResultsWindow {$/;"	i
#MSearchSelect	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchSelect {$/;"	i
#MSearchSelectWindow	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchSelectWindow {$/;"	i
#MSearchSelectWindow	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchSelectWindow, #MSearchResultsWindow {$/;"	i
#MSearchSelectWindow a.SelectItem	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchSelectWindow a.SelectItem {$/;"	c
#MSearchSelectWindow a.SelectItem:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^#MSearchSelectWindow a.SelectItem:hover {$/;"	c
#doc-content	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #doc-content {$/;"	i
#doc-content	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #doc-content {$/;"	i
#doc-content > div > div.contents	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #doc-content > div > div.contents,$/;"	c
#main-menu > li:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #main-menu > li:last-child {$/;"	s
#main-menu > li:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^#main-menu > li:last-child {$/;"	s
#main-menu a.has-submenu span.sub-arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #main-menu a.has-submenu span.sub-arrow {$/;"	c
#main-menu a.has-submenu:hover span.sub-arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #main-menu a.has-submenu:hover span.sub-arrow {$/;"	c
#main-nav	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #main-nav {$/;"	i
#main-nav	extern/doxygen-awesome-css/doxygen-awesome.css	/^#main-nav {$/;"	i
#nav-path	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #nav-path {$/;"	i
#nav-path	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-path {$/;"	i
#nav-path li.navelem	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-path li.navelem {$/;"	c
#nav-path li.navelem:after	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-path li.navelem:after {$/;"	c
#nav-path li.navelem:before	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-path li.navelem:before {$/;"	c
#nav-path ul	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-path ul {$/;"	s
#nav-sync	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-sync {$/;"	i
#nav-tree	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #nav-tree {$/;"	i
#nav-tree	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #nav-tree, #side-nav {$/;"	i
#nav-tree	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree {$/;"	i
#nav-tree	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree,$/;"	i
#nav-tree .arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree .arrow {$/;"	c
#nav-tree .item	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree .item {$/;"	c
#nav-tree .label	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree .label {$/;"	c
#nav-tree .label	extern/doxygen-awesome-css/doxygen-awesome.css	/^body, table, div, p, dl, #nav-tree .label, .title,$/;"	c
#nav-tree .selected	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree .selected {$/;"	c
#nav-tree .selected a	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree .selected a {$/;"	s
#nav-tree .selected::after	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree .selected::after {$/;"	c
#nav-tree a	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree a {$/;"	s
#nav-tree a:focus	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree a:focus {$/;"	s
#nav-tree a:focus .arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree div.item:hover .arrow, #nav-tree a:focus .arrow {$/;"	c
#nav-tree div.item:hover .arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree div.item:hover .arrow, #nav-tree a:focus .arrow {$/;"	c
#nav-tree::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree::-webkit-scrollbar,$/;"	i
#nav-tree::-webkit-scrollbar-corner	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree::-webkit-scrollbar-corner {$/;"	i
#nav-tree::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree::-webkit-scrollbar-thumb,$/;"	i
#nav-tree::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree::-webkit-scrollbar-track,$/;"	i
#nav-tree:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^#nav-tree:hover::-webkit-scrollbar-thumb,$/;"	i
#projectbrief	extern/doxygen-awesome-css/doxygen-awesome.css	/^#projectbrief {$/;"	i
#projectlogo	extern/doxygen-awesome-css/doxygen-awesome.css	/^#projectlogo {$/;"	i
#projectlogo img	extern/doxygen-awesome-css/doxygen-awesome.css	/^#projectlogo img {$/;"	s
#projectname	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^#projectname {$/;"	i
#projectname	extern/doxygen-awesome-css/doxygen-awesome.css	/^#projectname {$/;"	i
#projectname	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a, .sm-dox a:hover, .sm-dox a:focus, #projectname,$/;"	i
#projectnumber	extern/doxygen-awesome-css/doxygen-awesome.css	/^#projectnumber {$/;"	i
#projectnumber	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^    #projectnumber {$/;"	i
#side-nav	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #nav-tree, #side-nav {$/;"	i
#side-nav	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #side-nav {$/;"	i
#side-nav	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #side-nav {$/;"	i
#side-nav	extern/doxygen-awesome-css/doxygen-awesome.css	/^#side-nav {$/;"	i
#titlearea	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #titlearea {$/;"	i
#titlearea	extern/doxygen-awesome-css/doxygen-awesome.css	/^#titlearea {$/;"	i
#titlearea table tbody tr	extern/doxygen-awesome-css/doxygen-awesome.css	/^#titlearea table tbody tr {$/;"	s
#top	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    #top {$/;"	i
#top	extern/doxygen-awesome-css/doxygen-awesome.css	/^    #top {$/;"	i
#top	extern/doxygen-awesome-css/doxygen-awesome.css	/^#top {$/;"	i
*.tcc	.vscode/settings.json	/^        "*.tcc": "cpp",$/;"	s	object:files.associations
.MSearchBoxActive #MSearchField	extern/doxygen-awesome-css/doxygen-awesome.css	/^.MSearchBoxActive #MSearchField {$/;"	i
.PageDoc > div.contents	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .PageDoc > div.contents {$/;"	c
.SelectItem	extern/doxygen-awesome-css/doxygen-awesome.css	/^.SelectItem, #MSearchField, .navpath li.navelem a,$/;"	c
.SelectionMark	extern/doxygen-awesome-css/doxygen-awesome.css	/^.SelectionMark {$/;"	c
.alphachar a	extern/doxygen-awesome-css/doxygen-awesome.css	/^.alphachar a {$/;"	s
.alter-theme-button	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.alter-theme-button {$/;"	c
.alter-theme-button:hover	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.alter-theme-button:hover {$/;"	c
.arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^.arrow {$/;"	c
.bordered_image	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.bordered_image {$/;"	c
.classindex dl.even	extern/doxygen-awesome-css/doxygen-awesome.css	/^.classindex dl.even {$/;"	c
.classindex dl.odd	extern/doxygen-awesome-css/doxygen-awesome.css	/^.classindex dl.odd {$/;"	c
.compoundTemplParams	extern/doxygen-awesome-css/doxygen-awesome.css	/^.compoundTemplParams {$/;"	c
.contents .center	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .center,$/;"	c
.contents .center	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents img, .contents .center, .contents center, .contents div.image object {$/;"	c
.contents .center::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .center::-webkit-scrollbar,$/;"	c
.contents .center::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .center::-webkit-scrollbar-thumb,$/;"	c
.contents .center::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .center::-webkit-scrollbar-track,$/;"	c
.contents .center:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .center:hover::-webkit-scrollbar-thumb,$/;"	c
.contents .dotgraph	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .dotgraph,$/;"	c
.contents .dotgraph::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .dotgraph::-webkit-scrollbar,$/;"	c
.contents .dotgraph::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .dotgraph::-webkit-scrollbar-thumb,$/;"	c
.contents .dotgraph::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .dotgraph::-webkit-scrollbar-track,$/;"	c
.contents .dotgraph:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .dotgraph:hover::-webkit-scrollbar-thumb,$/;"	c
.contents .dyncontent > .center	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .contents .dyncontent > .center, .contents > center {$/;"	c
.contents .tabs-overview-container	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .tabs-overview-container {$/;"	c
.contents .tabs-overview-container::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .tabs-overview-container::-webkit-scrollbar {$/;"	c
.contents .tabs-overview-container::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .tabs-overview-container::-webkit-scrollbar-thumb {$/;"	c
.contents .tabs-overview-container::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .tabs-overview-container::-webkit-scrollbar-track {$/;"	c
.contents .tabs-overview-container:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents .tabs-overview-container:hover::-webkit-scrollbar-thumb {$/;"	c
.contents > .doxygen-awesome-fragment-wrapper > div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .contents > .doxygen-awesome-fragment-wrapper > div.fragment,$/;"	c
.contents > center	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .contents .dyncontent > .center, .contents > center {$/;"	s
.contents > div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .contents > div.fragment,$/;"	c
.contents > table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname):not(.classindex)	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents > table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname):not(.classindex/;"	c
.contents center	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents center,$/;"	s
.contents center	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents img, .contents .center, .contents center, .contents div.image object {$/;"	s
.contents center::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents center::-webkit-scrollbar,$/;"	s
.contents center::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents center::-webkit-scrollbar-thumb,$/;"	s
.contents center::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents center::-webkit-scrollbar-track,$/;"	s
.contents center:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents center:hover::-webkit-scrollbar-thumb,$/;"	s
.contents div.image object	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents img, .contents .center, .contents center, .contents div.image object {$/;"	s
.contents hr	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents hr {$/;"	s
.contents img	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents img, .contents .center, .contents center, .contents div.image object {$/;"	s
.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname)	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname),$/;"	c
.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody {$/;"	s
.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody,$/;"	s
.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody::-webkit-sc/;"	s
.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody::-webkit-sc/;"	s
.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody::-webkit-sc/;"	s
.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^.contents table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody:hover::-web/;"	s
.dotgraph	extern/doxygen-awesome-css/doxygen-awesome.css	/^.dotgraph {$/;"	c
.dotgraph .caption	extern/doxygen-awesome-css/doxygen-awesome.css	/^.dotgraph .caption {$/;"	c
.doxygen-awesome-fragment-wrapper	extern/doxygen-awesome-css/doxygen-awesome.css	/^.doxygen-awesome-fragment-wrapper {$/;"	c
.doxygen-awesome-fragment-wrapper:hover doxygen-awesome-fragment-copy-button	extern/doxygen-awesome-css/doxygen-awesome.css	/^.doxygen-awesome-fragment-wrapper:hover doxygen-awesome-fragment-copy-button, doxygen-awesome-fr/;"	s
.fieldtable td.fielddoc	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable td.fieldtype, .fieldtable td.fieldname, .fieldtable td.fielddoc, .fieldtable th/;"	c
.fieldtable td.fieldname	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable td.fieldtype, .fieldtable td.fieldname, .fieldtable td.fielddoc, .fieldtable th/;"	c
.fieldtable th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable td.fieldtype, .fieldtable td.fieldname, .fieldtable td.fielddoc, .fieldtable th/;"	s
.fieldtable tr.glow	extern/doxygen-awesome-css/doxygen-awesome.css	/^.memberdecls td.glow, .fieldtable tr.glow {$/;"	c
.full_width_table table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname)	extern/doxygen-awesome-css/doxygen-awesome.css	/^.full_width_table table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) {$/;"	c
.full_width_table table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody	extern/doxygen-awesome-css/doxygen-awesome.css	/^.full_width_table table:not(.memberdecls):not(.mlabels):not(.fieldtable):not(.memname) tbody {$/;"	s
.github-corner svg	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^    .github-corner svg {$/;"	s
.github-corner svg	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.github-corner svg {$/;"	s
.icon	extern/doxygen-awesome-css/doxygen-awesome.css	/^.icon {$/;"	c
.icona	extern/doxygen-awesome-css/doxygen-awesome.css	/^.icona {$/;"	c
.icondoc	extern/doxygen-awesome-css/doxygen-awesome.css	/^.icondoc {$/;"	c
.icondoc	extern/doxygen-awesome-css/doxygen-awesome.css	/^.iconfopen, .icondoc, .iconfclosed {$/;"	c
.iconfclosed	extern/doxygen-awesome-css/doxygen-awesome.css	/^.iconfopen, .icondoc, .iconfclosed {$/;"	c
.iconfopen	extern/doxygen-awesome-css/doxygen-awesome.css	/^.iconfopen, .icondoc, .iconfclosed {$/;"	c
.interactive_dotgraph .dotgraph iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^.interactive_dotgraph .dotgraph iframe {$/;"	s
.left #MSearchSelect[src$=".png"]	extern/doxygen-awesome-css/doxygen-awesome.css	/^.left #MSearchSelect[src$=".png"] {$/;"	i
.left img#MSearchSelect	extern/doxygen-awesome-css/doxygen-awesome.css	/^.left img#MSearchSelect {$/;"	i
.left span#MSearchSelect	extern/doxygen-awesome-css/doxygen-awesome.css	/^.left span#MSearchSelect {$/;"	i
.main-menu-btn-icon	extern/doxygen-awesome-css/doxygen-awesome.css	/^.main-menu-btn-icon, .main-menu-btn-icon:before, .main-menu-btn-icon:after {$/;"	c
.main-menu-btn-icon:after	extern/doxygen-awesome-css/doxygen-awesome.css	/^.main-menu-btn-icon, .main-menu-btn-icon:before, .main-menu-btn-icon:after {$/;"	c
.main-menu-btn-icon:before	extern/doxygen-awesome-css/doxygen-awesome.css	/^.main-menu-btn-icon, .main-menu-btn-icon:before, .main-menu-btn-icon:after {$/;"	c
.memberdecls td.glow	extern/doxygen-awesome-css/doxygen-awesome.css	/^.memberdecls td.glow, .fieldtable tr.glow {$/;"	c
.memdoc > .doxygen-awesome-fragment-wrapper > div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .memdoc > .doxygen-awesome-fragment-wrapper > div.fragment,$/;"	c
.memdoc > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .memdoc > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button,$/;"	s
.memdoc > .doxygen-awesome-fragment-wrapper > pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .memdoc > .doxygen-awesome-fragment-wrapper > pre.fragment,$/;"	c
.memdoc > div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .memdoc > div.fragment,$/;"	c
.memdoc > pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .memdoc > pre.fragment,$/;"	c
.memdoc li > .doxygen-awesome-fragment-wrapper > .fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .memdoc li > .doxygen-awesome-fragment-wrapper > .fragment {$/;"	c
.memdoc li > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .memdoc li > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button,$/;"	s
.memdoc li > .fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .memdoc li > .fragment,$/;"	c
.memdoc ul	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock ul, .memdoc ul {$/;"	s
.memitem span.mlabels	extern/doxygen-awesome-css/doxygen-awesome.css	/^.memname, .memitem span.mlabels {$/;"	c
.memname	extern/doxygen-awesome-css/doxygen-awesome.css	/^.memname, .memitem span.mlabels {$/;"	c
.navpath li.footer	extern/doxygen-awesome-css/doxygen-awesome.css	/^.navpath li.footer {$/;"	c
.navpath li.navelem a	extern/doxygen-awesome-css/doxygen-awesome.css	/^.SelectItem, #MSearchField, .navpath li.navelem a,$/;"	s
.navpath li.navelem a	extern/doxygen-awesome-css/doxygen-awesome.css	/^.navpath li.navelem a {$/;"	s
.navpath li.navelem a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^.navpath li.navelem a:hover {$/;"	s
.navpath li.navelem a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^.navpath li.navelem a:hover, p.reference, p.definition {$/;"	s
.navpath li.navelem b	extern/doxygen-awesome-css/doxygen-awesome.css	/^.navpath li.navelem b {$/;"	s
.next_section_button	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.next_section_button {$/;"	c
.next_section_button a	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.next_section_button a {$/;"	s
.next_section_button a::after	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.next_section_button a::after {$/;"	s
.next_section_button a:hover	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.next_section_button a:hover {$/;"	s
.next_section_button a:hover::after	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.next_section_button a:hover::after {$/;"	s
.next_section_button::after	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.next_section_button::after {$/;"	c
.paramname	extern/doxygen-awesome-css/doxygen-awesome.css	/^.paramname {$/;"	c
.paramname > code	extern/doxygen-awesome-css/doxygen-awesome.css	/^.paramname > code {$/;"	s
.sm-dox	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox, .tabs, .tabs2, .tabs3 {$/;"	c
.sm-dox a	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a, .sm-dox a:focus, .tablist li, .tablist li a, .tablist li.current a {$/;"	s
.sm-dox a	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a, .sm-dox a:hover, .sm-dox a:focus, #projectname,$/;"	s
.sm-dox a span.sub-arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .sm-dox a span.sub-arrow {$/;"	c
.sm-dox a:active	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a:hover, .sm-dox a:active, .tablist li a:hover {$/;"	s
.sm-dox a:focus	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a, .sm-dox a:focus, .tablist li, .tablist li a, .tablist li.current a {$/;"	s
.sm-dox a:focus	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a, .sm-dox a:hover, .sm-dox a:focus, #projectname,$/;"	s
.sm-dox a:focus	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a:focus {$/;"	s
.sm-dox a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a, .sm-dox a:hover, .sm-dox a:focus, #projectname,$/;"	s
.sm-dox a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a:hover, .sm-dox a:active, .tablist li a:hover {$/;"	s
.sm-dox a:hover span.sub-arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .sm-dox a:hover span.sub-arrow {$/;"	c
.sm-dox li	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .sm-dox li, .tablist li {$/;"	s
.sm-dox ul	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox ul {$/;"	s
.sm-dox ul a	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox ul a {$/;"	s
.sm-dox ul a span.sub-arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .sm-dox ul a span.sub-arrow {$/;"	c
.sm-dox ul a:active	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox ul a:hover, .sm-dox ul a:active, .sm-dox ul a:focus {$/;"	s
.sm-dox ul a:focus	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox ul a:hover, .sm-dox ul a:active, .sm-dox ul a:focus {$/;"	s
.sm-dox ul a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox ul a:hover, .sm-dox ul a:active, .sm-dox ul a:focus {$/;"	s
.sm-dox ul a:hover span.sub-arrow	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .sm-dox ul a:hover span.sub-arrow {$/;"	c
.sm-dox>li>ul:after	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox>li>ul:after {$/;"	c
.sm-dox>li>ul:before	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox>li>ul:before {$/;"	c
.tabbed	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabbed {$/;"	c
.tabbed li	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabbed li {$/;"	s
.tabbed li.selected	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabbed li.selected {$/;"	c
.tabbed ul	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabbed ul {$/;"	s
.tablist a	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tablist a {$/;"	s
.tablist li	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .sm-dox li, .tablist li {$/;"	s
.tablist li	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a, .sm-dox a:focus, .tablist li, .tablist li a, .tablist li.current a {$/;"	s
.tablist li	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tablist li {$/;"	s
.tablist li a	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a, .sm-dox a:focus, .tablist li, .tablist li a, .tablist li.current a {$/;"	s
.tablist li a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a:hover, .sm-dox a:active, .tablist li a:hover {$/;"	s
.tablist li.current	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tablist li.current {$/;"	c
.tablist li.current a	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox a, .sm-dox a:focus, .tablist li, .tablist li a, .tablist li.current a {$/;"	s
.tabs	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox, .tabs, .tabs2, .tabs3 {$/;"	c
.tabs	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs, .tabs2, .tabs3 {$/;"	c
.tabs #MSearchBox	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .tabs #MSearchBox {$/;"	i
.tabs #MSearchBox	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs #MSearchBox {$/;"	i
.tabs #MSearchBox span.right	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs #MSearchBox span.right {$/;"	c
.tabs .left #MSearchSelect	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs .left #MSearchSelect {$/;"	i
.tabs-overview	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs-overview {$/;"	c
.tabs-overview button.tab-button	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs-overview button.tab-button {$/;"	c
.tabs-overview button.tab-button .tab-title	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs-overview button.tab-button .tab-title {$/;"	c
.tabs-overview button.tab-button.active	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs-overview button.tab-button.active {$/;"	c
.tabs-overview button.tab-button.active::after	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs-overview button.tab-button.active::after {$/;"	c
.tabs-overview button.tab-button:hover .tab-title	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs-overview button.tab-button:hover .tab-title {$/;"	c
.tabs-overview button.tab-button:not(:last-child) .tab-title	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs-overview button.tab-button:not(:last-child) .tab-title {$/;"	c
.tabs-overview-container	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs-overview-container {$/;"	c
.tabs2	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox, .tabs, .tabs2, .tabs3 {$/;"	c
.tabs2	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs, .tabs2, .tabs3 {$/;"	c
.tabs3	extern/doxygen-awesome-css/doxygen-awesome.css	/^.sm-dox, .tabs, .tabs2, .tabs3 {$/;"	c
.tabs3	extern/doxygen-awesome-css/doxygen-awesome.css	/^.tabs, .tabs2, .tabs3 {$/;"	c
.textblock > .doxygen-awesome-fragment-wrapper > div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock > .doxygen-awesome-fragment-wrapper > div.fragment,$/;"	c
.textblock > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button,$/;"	s
.textblock > .doxygen-awesome-fragment-wrapper > pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock > .doxygen-awesome-fragment-wrapper > pre.fragment {$/;"	c
.textblock > div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock > div.fragment,$/;"	c
.textblock > pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock > pre.fragment,$/;"	c
.textblock li > .doxygen-awesome-fragment-wrapper > .fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock li > .doxygen-awesome-fragment-wrapper > .fragment {$/;"	c
.textblock li > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock li > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button,$/;"	s
.textblock li > .fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock li > .fragment,$/;"	c
.textblock ul	extern/doxygen-awesome-css/doxygen-awesome.css	/^    .textblock ul, .memdoc ul {$/;"	s
.title	extern/doxygen-awesome-css/doxygen-awesome.css	/^body, table, div, p, dl, #nav-tree .label, .title,$/;"	c
.title_screenshot	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.title_screenshot {$/;"	c
.title_screenshot .caption	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^.title_screenshot .caption {$/;"	c
.ui-resizable-e	extern/doxygen-awesome-css/doxygen-awesome.css	/^.ui-resizable-e {$/;"	c
.ui-resizable-handle	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    .ui-resizable-handle {$/;"	c
0	.vscode/c_cpp_properties.json	/^                "${workspaceFolder}\/**",$/;"	s	array:configurations.0.includePath
0	.vscode/c_cpp_properties.json	/^        {$/;"	o	array:configurations
0	examples/machineModel/machineModel.json	/^    {$/;"	o	array:Instances
0	examples/runtime/machineModel.json	/^    {$/;"	o	array:Instances
0	extern/doxygen-awesome-css/package.json	/^    "doxygen",$/;"	s	array:keywords
1	.vscode/c_cpp_properties.json	/^                "\/usr\/lib\/x86_64-linux-gnu\/openmpi\/include"$/;"	s	array:configurations.0.includePath
1	examples/machineModel/machineModel.json	/^    {$/;"	o	array:Instances
1	examples/runtime/machineModel.json	/^    {$/;"	o	array:Instances
1	extern/doxygen-awesome-css/package.json	/^    "css",$/;"	s	array:keywords
2	examples/machineModel/machineModel.json	/^    {$/;"	o	array:Instances
2	examples/runtime/machineModel.json	/^    {$/;"	o	array:Instances
2	extern/doxygen-awesome-css/package.json	/^    "theme",$/;"	s	array:keywords
3	extern/doxygen-awesome-css/package.json	/^    "awesome"$/;"	s	array:keywords
=====================	extern/run-clang-format/README.rst	/^=====================$/;"	c
A	extern/atomic_queue/defs.h	/^auto constexpr A = std::memory_order_acquire;$/;"	v	namespace:atomic_queue	typeref:typename:auto 
A	extern/parallel_hashmap/phmap_base.h	/^  using A = typename phmap::allocator_traits<Alloc>::template rebind_alloc<M>;$/;"	t	function:phmap::priv::Allocate	typeref:typename:phmap::allocator_traits<Alloc>::template rebind_alloc<M>
A	extern/parallel_hashmap/phmap_base.h	/^  using A = typename phmap::allocator_traits<Alloc>::template rebind_alloc<M>;$/;"	t	function:phmap::priv::Deallocate	typeref:typename:phmap::allocator_traits<Alloc>::template rebind_alloc<M>
ABC Tasks	examples/tasking/abcTasks/README.md	/^ABC Tasks$/;"	c
AT	extern/parallel_hashmap/phmap_base.h	/^  using AT = typename phmap::allocator_traits<Alloc>::template rebind_traits<M>;$/;"	t	function:phmap::priv::Allocate	typeref:typename:phmap::allocator_traits<Alloc>::template rebind_traits<M>
AT	extern/parallel_hashmap/phmap_base.h	/^  using AT = typename phmap::allocator_traits<Alloc>::template rebind_traits<M>;$/;"	t	function:phmap::priv::Deallocate	typeref:typename:phmap::allocator_traits<Alloc>::template rebind_traits<M>
ATOMIC_QUEUE_ATOMIC_QUEUE_H_INCLUDED	extern/atomic_queue/atomic_queue.h	/^#define ATOMIC_QUEUE_ATOMIC_QUEUE_H_INCLUDED$/;"	d
ATOMIC_QUEUE_DEFS_H_INCLUDED	extern/atomic_queue/defs.h	/^#define ATOMIC_QUEUE_DEFS_H_INCLUDED$/;"	d
ATOMIC_QUEUE_LIKELY	extern/atomic_queue/defs.h	/^#define ATOMIC_QUEUE_LIKELY(/;"	d
ATOMIC_QUEUE_NOINLINE	extern/atomic_queue/defs.h	/^#define ATOMIC_QUEUE_NOINLINE /;"	d
ATOMIC_QUEUE_UNLIKELY	extern/atomic_queue/defs.h	/^#define ATOMIC_QUEUE_UNLIKELY(/;"	d
AbslHashValue	extern/parallel_hashmap/btree.h	/^        friend State AbslHashValue(State h, const btree_container &b) {$/;"	f	namespace:phmap::priv	typeref:typename:State
AbslHashValue	extern/parallel_hashmap/phmap_base.h	/^    friend H AbslHashValue(H h, Span v) {$/;"	f	namespace:phmap	typeref:typename:H
AbslMutex	extern/parallel_hashmap/phmap_base.h	/^    struct AbslMutex : protected absl::Mutex$/;"	s	namespace:phmap
Accept	extern/parallel_hashmap/phmap_base.h	/^    struct Accept : Derived::template AcceptImpl<typename std::remove_cv<$/;"	s	struct:phmap::base_internal::StrippedAccept
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl : std::false_type {};$/;"	s	struct:phmap::base_internal::DataMemAndPtr
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl : std::false_type {};$/;"	s	struct:phmap::base_internal::DataMemAndRef
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl : std::false_type {};$/;"	s	struct:phmap::base_internal::MemFunAndPtr
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl : std::false_type {};$/;"	s	struct:phmap::base_internal::MemFunAndRef
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl<R (C::*)(Params...) const, Obj, Args...>$/;"	s	struct:phmap::base_internal::MemFunAndRef
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl<R (C::*)(Params...) const, Ptr, Args...>$/;"	s	struct:phmap::base_internal::MemFunAndPtr
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl<R (C::*)(Params...), Obj, Args...>$/;"	s	struct:phmap::base_internal::MemFunAndRef
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl<R (C::*)(Params...), Ptr, Args...>$/;"	s	struct:phmap::base_internal::MemFunAndPtr
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl<R C::*, Obj> : std::is_base_of<C, Obj> {};$/;"	s	struct:phmap::base_internal::DataMemAndRef
AcceptImpl	extern/parallel_hashmap/phmap_base.h	/^    struct AcceptImpl<R C::*, Ptr>$/;"	s	struct:phmap::base_internal::DataMemAndPtr
Align	extern/parallel_hashmap/phmap_base.h	/^constexpr size_t Align(size_t n, size_t m) { return (n + m - 1) & ~(m - 1); }$/;"	f	namespace:phmap::priv::internal_layout::adl_barrier	typeref:typename:size_t
AlignOf	extern/parallel_hashmap/phmap_base.h	/^struct AlignOf : NotAligned<T> {$/;"	s	namespace:phmap::priv::internal_layout
AlignOf	extern/parallel_hashmap/phmap_base.h	/^struct AlignOf<Aligned<T, N>> {$/;"	s	namespace:phmap::priv::internal_layout
Alignment	extern/parallel_hashmap/btree.h	/^        constexpr static size_type Alignment() {$/;"	f	class:phmap::priv::btree_node	typeref:typename:size_type
Alignment	extern/parallel_hashmap/phmap_base.h	/^    static constexpr size_t Alignment() {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:size_t
AllocSize	extern/parallel_hashmap/phmap_base.h	/^    constexpr size_t AllocSize() const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:size_t
AllocTraits	extern/parallel_hashmap/phmap.h	/^    using AllocTraits     = phmap::allocator_traits<allocator_type>;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:phmap::allocator_traits<allocator_type>
AllocTraits	extern/parallel_hashmap/phmap.h	/^    using AllocTraits = phmap::allocator_traits<allocator_type>;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:phmap::allocator_traits<allocator_type>
Allocate	extern/parallel_hashmap/phmap_base.h	/^void* Allocate(Alloc* alloc, size_t n) {$/;"	f	namespace:phmap::priv	typeref:typename:void *
AllocatedByteSize	extern/parallel_hashmap/phmap.h	/^    static size_t AllocatedByteSize(const Set& c) {$/;"	f	struct:phmap::priv::hashtable_debug_internal::HashtableDebugAccess	typeref:typename:size_t
Allocator	extern/parallel_hashmap/phmap_base.h	/^template <class T> using Allocator = typename std::allocator<T>;$/;"	t	namespace:phmap	typeref:typename:std::allocator<T>
Allocator	extern/parallel_hashmap/phmap_fwd_decl.h	/^        using Allocator = typename phmap::Allocator<T>;$/;"	t	namespace:phmap::priv	typeref:typename:phmap::Allocator<T>
Allocator	extern/parallel_hashmap/phmap_fwd_decl.h	/^    template <class T> using Allocator      = typename std::allocator<T>;$/;"	t	namespace:phmap	typeref:typename:std::allocator<T>
AllocatorElements	extern/atomic_queue/atomic_queue.h	/^    using AllocatorElements = A;$/;"	t	class:atomic_queue::AtomicQueueB2	typeref:typename:A
AllocatorElements	extern/atomic_queue/atomic_queue.h	/^    using AllocatorElements = typename std::allocator_traits<A>::template rebind_alloc<std::atom/;"	t	class:atomic_queue::AtomicQueueB	typeref:typename:std::allocator_traits<A>::template rebind_alloc<std::atomic<T>>
AllocatorStates	extern/atomic_queue/atomic_queue.h	/^    using AllocatorStates = typename std::allocator_traits<A>::template rebind_alloc<std::atomic/;"	t	class:atomic_queue::AtomicQueueB2	typeref:typename:std::allocator_traits<A>::template rebind_alloc<std::atomic<uint8_t>>
AllocatorTraits	extern/nlohmann_json/json.hpp	/^        using AllocatorTraits = std::allocator_traits<AllocatorType<T>>;$/;"	t	function:basic_json::create	typeref:typename:std::allocator_traits<AllocatorType<T>>
AnonymousFunction4162cd900100	extern/doxygen-awesome-css/doxygen-awesome-paragraph-link.js	/^        $(function() {$/;"	f	function:DoxygenAwesomeParagraphLink.init
AnonymousFunction4162cd900200	extern/doxygen-awesome-css/doxygen-awesome-paragraph-link.js	/^            $(document).ready(function() {$/;"	f
AnonymousFunction6d7fc9f50100	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^        $(function() {$/;"	f	function:DoxygenAwesomeDarkModeToggle.init
AnonymousFunction6d7fc9f50200	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^            $(document).ready(function() {$/;"	f
AnonymousFunction6d7fc9f50300	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^                $(document).ready(function(){$/;"	f
AnonymousFunction6d7fc9f50400	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^                $(window).resize(function(){$/;"	f
AnonymousFunctionef9e57440100	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^        $(function() {$/;"	f	function:DoxygenAwesomeFragmentCopyButton.init
AnonymousFunctionef9e57440200	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^            $(document).ready(function() {$/;"	f
Ascend Devices	examples/machineModel/machineModel.json	/^	      "Ascend Devices": 0$/;"	n	object:Instances.0.Topology
Ascend Devices	examples/machineModel/machineModel.json	/^	      "Ascend Devices": 0$/;"	n	object:Instances.1.Topology
Ascend Devices	examples/machineModel/machineModel.json	/^	      "Ascend Devices": 0$/;"	n	object:Instances.2.Topology
Ascend Devices	examples/runtime/machineModel.json	/^	      "Ascend Devices": 0$/;"	n	object:Instances.0.Topology
Ascend Devices	examples/runtime/machineModel.json	/^	      "Ascend Devices": 0$/;"	n	object:Instances.1.Topology
Ascend Devices	examples/runtime/machineModel.json	/^	      "Ascend Devices": 0$/;"	n	object:Instances.2.Topology
AssertHashEnabled	extern/parallel_hashmap/phmap_base.h	/^inline void AssertHashEnabled$/;"	f	namespace:phmap::type_traits_internal	typeref:typename:void
AssertHashEnabledHelper	extern/parallel_hashmap/phmap_base.h	/^struct AssertHashEnabledHelper $/;"	s	namespace:phmap::type_traits_internal
AtomicQueue	extern/atomic_queue/atomic_queue.h	/^    AtomicQueue() noexcept {$/;"	f	class:atomic_queue::AtomicQueue
AtomicQueue	extern/atomic_queue/atomic_queue.h	/^class AtomicQueue : public AtomicQueueCommon<AtomicQueue<T, SIZE, NIL, MINIMIZE_CONTENTION, MAXI/;"	c	namespace:atomic_queue
AtomicQueue2	extern/atomic_queue/atomic_queue.h	/^class AtomicQueue2 : public AtomicQueueCommon<AtomicQueue2<T, SIZE, MINIMIZE_CONTENTION, MAXIMIZ/;"	c	namespace:atomic_queue
AtomicQueueB	extern/atomic_queue/atomic_queue.h	/^    AtomicQueueB(AtomicQueueB&& b) noexcept$/;"	f	class:atomic_queue::AtomicQueueB
AtomicQueueB	extern/atomic_queue/atomic_queue.h	/^    AtomicQueueB(unsigned size)$/;"	f	class:atomic_queue::AtomicQueueB
AtomicQueueB	extern/atomic_queue/atomic_queue.h	/^class AtomicQueueB : public AtomicQueueCommon<AtomicQueueB<T, A, NIL, MAXIMIZE_THROUGHPUT, TOTAL/;"	c	namespace:atomic_queue
AtomicQueueB2	extern/atomic_queue/atomic_queue.h	/^    AtomicQueueB2(AtomicQueueB2&& b) noexcept$/;"	f	class:atomic_queue::AtomicQueueB2
AtomicQueueB2	extern/atomic_queue/atomic_queue.h	/^    AtomicQueueB2(unsigned size)$/;"	f	class:atomic_queue::AtomicQueueB2
AtomicQueueB2	extern/atomic_queue/atomic_queue.h	/^class AtomicQueueB2 : public AtomicQueueCommon<AtomicQueueB2<T, A, MAXIMIZE_THROUGHPUT, TOTAL_OR/;"	c	namespace:atomic_queue
AtomicQueueCommon	extern/atomic_queue/atomic_queue.h	/^    AtomicQueueCommon(AtomicQueueCommon const& b) noexcept$/;"	f	class:atomic_queue::AtomicQueueCommon
AtomicQueueCommon	extern/atomic_queue/atomic_queue.h	/^class AtomicQueueCommon {$/;"	c	namespace:atomic_queue
Available variables	extern/doxygen-awesome-css/docs/customization.md	/^### Available variables$/;"	S	section:Customization""CSS-Variables
BAD_CONSUMER_COORDINATION_BUFFER_KEY	tests/frontends/channel/fixedSize/spsc/consumer.cpp	/^#define BAD_CONSUMER_COORDINATION_BUFFER_KEY /;"	d	file:
BAD_PRODUCER_COORDINATION_BUFFER_KEY	tests/frontends/channel/fixedSize/spsc/producer.cpp	/^#define BAD_PRODUCER_COORDINATION_BUFFER_KEY /;"	d	file:
BAD_TOKEN_BUFFER_KEY	tests/frontends/channel/fixedSize/spsc/consumer.cpp	/^#define BAD_TOKEN_BUFFER_KEY /;"	d	file:
BUFFER_SIZE	examples/hicr/memcpy/source/include/telephoneGame.hpp	/^#define BUFFER_SIZE /;"	d
BUFFER_SIZE	examples/hicr/memcpy/source/lpf.cpp	/^#define BUFFER_SIZE /;"	d	file:
BUFFER_SIZE	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^#define BUFFER_SIZE /;"	d	file:
BUFF_SIZE	examples/hicr/kernel/source/ascend.cpp	/^#define BUFF_SIZE /;"	d	file:
Base	extern/atomic_queue/atomic_queue.h	/^    using Base = AtomicQueueCommon<AtomicQueue2<T, SIZE, MINIMIZE_CONTENTION, MAXIMIZE_THROUGHPU/;"	t	class:atomic_queue::AtomicQueue2	typeref:typename:AtomicQueueCommon<AtomicQueue2<T,SIZE,MINIMIZE_CONTENTION,MAXIMIZE_THROUGHPUT,TOTAL_ORDER,SPSC>>
Base	extern/atomic_queue/atomic_queue.h	/^    using Base = AtomicQueueCommon<AtomicQueue<T, SIZE, NIL, MINIMIZE_CONTENTION, MAXIMIZE_THROU/;"	t	class:atomic_queue::AtomicQueue	typeref:typename:AtomicQueueCommon<AtomicQueue<T,SIZE,NIL,MINIMIZE_CONTENTION,MAXIMIZE_THROUGHPUT,TOTAL_ORDER,SPSC>>
Base	extern/atomic_queue/atomic_queue.h	/^    using Base = AtomicQueueCommon<AtomicQueueB2<T, A, MAXIMIZE_THROUGHPUT, TOTAL_ORDER, SPSC>>;$/;"	t	class:atomic_queue::AtomicQueueB2	typeref:typename:AtomicQueueCommon<AtomicQueueB2<T,A,MAXIMIZE_THROUGHPUT,TOTAL_ORDER,SPSC>>
Base	extern/atomic_queue/atomic_queue.h	/^    using Base = AtomicQueueCommon<AtomicQueueB<T, A, NIL, MAXIMIZE_THROUGHPUT, TOTAL_ORDER, SPS/;"	t	class:atomic_queue::AtomicQueueB	typeref:typename:AtomicQueueCommon<AtomicQueueB<T,A,NIL,MAXIMIZE_THROUGHPUT,TOTAL_ORDER,SPSC>>
Base	extern/parallel_hashmap/btree.h	/^        using Base = typename btree_map::btree_map_container;$/;"	t	class:phmap::btree_map	typeref:typename:btree_map::btree_map_container
Base	extern/parallel_hashmap/btree.h	/^        using Base = typename btree_multimap::btree_multimap_container;$/;"	t	class:phmap::btree_multimap	typeref:typename:btree_multimap::btree_multimap_container
Base	extern/parallel_hashmap/btree.h	/^        using Base = typename btree_multiset::btree_multiset_container;$/;"	t	class:phmap::btree_multiset	typeref:typename:btree_multiset::btree_multiset_container
Base	extern/parallel_hashmap/btree.h	/^        using Base = typename btree_set::btree_set_container;$/;"	t	class:phmap::btree_set	typeref:typename:btree_set::btree_set_container
Base	extern/parallel_hashmap/phmap.h	/^    using Base = raw_hash_set<Policy, Hash, Eq, Alloc>;$/;"	t	class:phmap::priv::raw_hash_map	typeref:typename:raw_hash_set<Policy,Hash,Eq,Alloc>
Base	extern/parallel_hashmap/phmap.h	/^    using Base = typename flat_hash_map::raw_hash_map;$/;"	t	class:phmap::flat_hash_map	typeref:typename:flat_hash_map::raw_hash_map
Base	extern/parallel_hashmap/phmap.h	/^    using Base = typename flat_hash_set::raw_hash_set;$/;"	t	class:phmap::flat_hash_set	typeref:typename:flat_hash_set::raw_hash_set
Base	extern/parallel_hashmap/phmap.h	/^    using Base = typename node_hash_map::raw_hash_map;$/;"	t	class:phmap::node_hash_map	typeref:typename:node_hash_map::raw_hash_map
Base	extern/parallel_hashmap/phmap.h	/^    using Base = typename node_hash_set::raw_hash_set;$/;"	t	class:phmap::node_hash_set	typeref:typename:node_hash_set::raw_hash_set
Base	extern/parallel_hashmap/phmap.h	/^    using Base = typename parallel_flat_hash_map::parallel_hash_map;$/;"	t	class:phmap::parallel_flat_hash_map	typeref:typename:parallel_flat_hash_map::parallel_hash_map
Base	extern/parallel_hashmap/phmap.h	/^    using Base = typename parallel_flat_hash_set::parallel_hash_set;$/;"	t	class:phmap::parallel_flat_hash_set	typeref:typename:parallel_flat_hash_set::parallel_hash_set
Base	extern/parallel_hashmap/phmap.h	/^    using Base = typename parallel_hash_map::parallel_hash_set;$/;"	t	class:phmap::priv::parallel_hash_map	typeref:typename:parallel_hash_map::parallel_hash_set
Base	extern/parallel_hashmap/phmap.h	/^    using Base = typename parallel_node_hash_map::parallel_hash_map;$/;"	t	class:phmap::parallel_node_hash_map	typeref:typename:parallel_node_hash_map::parallel_hash_map
Base	extern/parallel_hashmap/phmap.h	/^    using Base = typename parallel_node_hash_set::parallel_hash_set;$/;"	t	class:phmap::parallel_node_hash_set	typeref:typename:parallel_node_hash_set::parallel_hash_set
Base	extern/parallel_hashmap/phmap_base.h	/^        using Base            = LockableBaseImpl<boost::shared_mutex>;$/;"	t	class:phmap::LockableImpl	typeref:typename:LockableBaseImpl<boost::shared_mutex>
Base	extern/parallel_hashmap/phmap_base.h	/^        using Base            = LockableBaseImpl<phmap::AbslMutex>;$/;"	t	class:phmap::LockableImpl	typeref:typename:LockableBaseImpl<phmap::AbslMutex>
Base	extern/parallel_hashmap/phmap_base.h	/^        using Base            = LockableBaseImpl<std::shared_mutex>;$/;"	t	class:phmap::LockableImpl	typeref:typename:LockableBaseImpl<std::shared_mutex>
Base	extern/parallel_hashmap/phmap_base.h	/^    using Base            = LockableBaseImpl<Mtx_>;$/;"	t	class:phmap::LockableImpl	typeref:typename:LockableBaseImpl<Mtx_>
Base	extern/parallel_hashmap/phmap_base.h	/^    using Base            = LockableBaseImpl<phmap::NullMutex>;$/;"	t	class:phmap::LockableImpl	typeref:typename:LockableBaseImpl<phmap::NullMutex>
Base	extern/parallel_hashmap/phmap_base.h	/^    using Base = node_handle_base<PolicyTraits, Alloc>;$/;"	t	class:phmap::priv::node_handle	typeref:typename:node_handle_base<PolicyTraits,Alloc>
Base	include/frontends/channel/base.hpp	/^  Base(L1::CommunicationManager &communicationManager,$/;"	f	class:HiCR::channel::Base
Base	include/frontends/channel/base.hpp	/^class Base$/;"	c	namespace:HiCR::channel
Base	include/frontends/channel/fixedSize/base.hpp	/^  Base(L1::CommunicationManager &communicationManager,$/;"	f	class:HiCR::channel::fixedSize::Base
Base	include/frontends/channel/fixedSize/base.hpp	/^class Base : public channel::Base$/;"	c	namespace:HiCR::channel::fixedSize
Base	include/frontends/channel/variableSize/base.hpp	/^  Base(L1::CommunicationManager &communicationManager,$/;"	f	class:HiCR::channel::variableSize::Base
Base	include/frontends/channel/variableSize/base.hpp	/^class Base : public channel::Base$/;"	c	namespace:HiCR::channel::variableSize
BinaryInputArchive	extern/parallel_hashmap/phmap_dump.h	/^    BinaryInputArchive(const char * file_path) {$/;"	f	class:phmap::BinaryInputArchive
BinaryInputArchive	extern/parallel_hashmap/phmap_dump.h	/^class BinaryInputArchive {$/;"	c	namespace:phmap
BinaryOutputArchive	extern/parallel_hashmap/phmap_dump.h	/^    BinaryOutputArchive(const char *file_path) {$/;"	f	class:phmap::BinaryOutputArchive
BinaryOutputArchive	extern/parallel_hashmap/phmap_dump.h	/^class BinaryOutputArchive {$/;"	c	namespace:phmap
BitMask	extern/parallel_hashmap/phmap.h	/^    explicit BitMask(T mask) : mask_(mask) {}$/;"	f	class:phmap::priv::BitMask
BitMask	extern/parallel_hashmap/phmap.h	/^class BitMask $/;"	c	namespace:phmap::priv
Browser support	extern/doxygen-awesome-css/README.md	/^## Browser support$/;"	s	chapter:Doxygen Awesome
C	extern/atomic_queue/defs.h	/^auto constexpr C = std::memory_order_seq_cst;$/;"	v	namespace:atomic_queue	typeref:typename:auto 
C	extern/parallel_hashmap/phmap_base.h	/^        using C = typename std::remove_const<Char>::type;$/;"	t	function:phmap::priv::internal_layout::LayoutImpl::Pointer	typeref:typename:std::remove_const<Char>::type
CACHE_LINE_SIZE	extern/atomic_queue/defs.h	/^constexpr int CACHE_LINE_SIZE = 128; \/\/ TODO: Review that this is the correct value.$/;"	v	namespace:atomic_queue	typeref:typename:int
CACHE_LINE_SIZE	extern/atomic_queue/defs.h	/^constexpr int CACHE_LINE_SIZE = 256; \/\/ TODO: Review that this is the correct value.$/;"	v	namespace:atomic_queue	typeref:typename:int
CACHE_LINE_SIZE	extern/atomic_queue/defs.h	/^constexpr int CACHE_LINE_SIZE = 64; \/\/ TODO: Review that this is the correct value.$/;"	v	namespace:atomic_queue	typeref:typename:int
CACHE_LINE_SIZE	extern/atomic_queue/defs.h	/^constexpr int CACHE_LINE_SIZE = 64;$/;"	v	namespace:atomic_queue	typeref:typename:int
CHANNEL_TAG	examples/channels/fixedSize/mpsc/include/common.hpp	/^#define CHANNEL_TAG /;"	d
CHANNEL_TAG	examples/channels/fixedSize/spsc/include/common.hpp	/^#define CHANNEL_TAG /;"	d
CHANNEL_TAG	examples/channels/variableSize/spsc/include/common.hpp	/^#define CHANNEL_TAG /;"	d
CHANNEL_TAG	examples/hicr/memcpy/source/lpf.cpp	/^#define CHANNEL_TAG /;"	d	file:
CHANNEL_TAG	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^#define CHANNEL_TAG /;"	d	file:
CHANNEL_TAG	tests/frontends/channel/fixedSize/spsc/consumer.cpp	/^#define CHANNEL_TAG /;"	d	file:
CHANNEL_TAG	tests/frontends/channel/fixedSize/spsc/producer.cpp	/^#define CHANNEL_TAG /;"	d	file:
CHECK	include/backends/lpf/L0/localMemorySlot.hpp	/^#define CHECK(/;"	d
CONCURRENT_THREADS	examples/channels/fixedSize/spsc/source/sharedMemory.cpp	/^#define CONCURRENT_THREADS /;"	d	file:
CONCURRENT_THREADS	examples/channels/variableSize/spsc/source/sequential.cpp	/^#define CONCURRENT_THREADS /;"	d	file:
CONCURRENT_THREADS	examples/channels/variableSize/spsc/source/sharedMemory.cpp	/^#define CONCURRENT_THREADS /;"	d	file:
CONSUMER_COORDINATION_BUFFER_FOR_PAYLOADS_KEY	examples/channels/variableSize/spsc/include/common.hpp	/^#define CONSUMER_COORDINATION_BUFFER_FOR_PAYLOADS_KEY /;"	d
CONSUMER_COORDINATION_BUFFER_FOR_SIZES_KEY	examples/channels/variableSize/spsc/include/common.hpp	/^#define CONSUMER_COORDINATION_BUFFER_FOR_SIZES_KEY /;"	d
CONSUMER_COORDINATION_BUFFER_KEY	examples/channels/fixedSize/mpsc/include/common.hpp	/^#define CONSUMER_COORDINATION_BUFFER_KEY /;"	d
CONSUMER_COORDINATION_BUFFER_KEY	examples/channels/fixedSize/spsc/include/common.hpp	/^#define CONSUMER_COORDINATION_BUFFER_KEY /;"	d
CONSUMER_PAYLOAD_KEY	examples/channels/variableSize/spsc/include/common.hpp	/^#define CONSUMER_PAYLOAD_KEY /;"	d
COROUTINE_COUNT	tests/backends/host/coroutine.cpp	/^#define COROUTINE_COUNT /;"	d	file:
CPU Cores	examples/machineModel/machineModel.json	/^	      "CPU Cores": 1,$/;"	n	object:Instances.0.Topology
CPU Cores	examples/machineModel/machineModel.json	/^	      "CPU Cores": 1,$/;"	n	object:Instances.1.Topology
CPU Cores	examples/machineModel/machineModel.json	/^	      "CPU Cores": 1,$/;"	n	object:Instances.2.Topology
CPU Cores	examples/runtime/machineModel.json	/^	      "CPU Cores": 1,$/;"	n	object:Instances.0.Topology
CPU Cores	examples/runtime/machineModel.json	/^	      "CPU Cores": 1,$/;"	n	object:Instances.1.Topology
CPU Cores	examples/runtime/machineModel.json	/^	      "CPU Cores": 1,$/;"	n	object:Instances.2.Topology
CREATE_HICR_TASKING_HOOK	include/frontends/tasking/tasking.hpp	/^#define CREATE_HICR_TASKING_HOOK /;"	d
CSS-Variables	extern/doxygen-awesome-css/docs/customization.md	/^## CSS-Variables$/;"	s	chapter:Customization
Cache	include/backends/host/cache.hpp	/^  Cache(const cacheLevel_t level, const std::string &type, const size_t size, const size_t lineS/;"	f	class:HiCR::backend::host::Cache
Cache	include/backends/host/cache.hpp	/^  Cache(const nlohmann::json &input)$/;"	f	class:HiCR::backend::host::Cache
Cache	include/backends/host/cache.hpp	/^class Cache$/;"	c	namespace:HiCR::backend::host
Callable	extern/parallel_hashmap/phmap_base.h	/^struct Callable$/;"	s	namespace:phmap::base_internal
Can I check only changed files?	extern/run-clang-format/README.rst	/^Can I check only changed files?$/;"	c
CapacityToGrowth	extern/parallel_hashmap/phmap.h	/^inline size_t CapacityToGrowth(size_t capacity) $/;"	f	namespace:phmap::priv	typeref:typename:size_t
Centering	extern/doxygen-awesome-css/docs/tricks.md	/^### Centering$/;"	S	section:Tips & Tricks""Formatting Tables {#tricks-tables}
Choosing Sidebar Width {#tricks-sidebar}	extern/doxygen-awesome-css/docs/tricks.md	/^## Choosing Sidebar Width {#tricks-sidebar}$/;"	s	chapter:Tips & Tricks
Choosing a layout	extern/doxygen-awesome-css/README.md	/^### Choosing a layout$/;"	S	section:Doxygen Awesome""Installation
CircularBuffer	include/frontends/channel/circularBuffer.hpp	/^  CircularBuffer(size_t capacity, __volatile__ size_t *headAdvanceCounter, __volatile__ size_t */;"	f	class:HiCR::channel::CircularBuffer
CircularBuffer	include/frontends/channel/circularBuffer.hpp	/^class CircularBuffer$/;"	c	namespace:HiCR::channel
Color	extern/doxygen-awesome-css/include/MyLibrary/example.hpp	/^enum Color$/;"	g	namespace:MyLibrary
Combiner	extern/parallel_hashmap/phmap_utils.h	/^template <class H, int sz> struct Combiner$/;"	s	namespace:phmap
Combiner	extern/parallel_hashmap/phmap_utils.h	/^template <class H> struct Combiner<H, 4>$/;"	s	namespace:phmap
Combiner	extern/parallel_hashmap/phmap_utils.h	/^template <class H> struct Combiner<H, 8>$/;"	s	namespace:phmap
CommonAccess	extern/parallel_hashmap/phmap_base.h	/^struct CommonAccess $/;"	s	namespace:phmap::priv
CommonType	extern/nlohmann_json/json.hpp	/^        using CommonType = typename std::common_type<OfType, T>::type;$/;"	t	function:detail::value_in_range_of_impl2::test	typeref:typename:std::common_type<OfType,T>::type
CommunicationManager	include/backends/ascend/L1/communicationManager.hpp	/^  CommunicationManager() : HiCR::L1::CommunicationManager(){};$/;"	f	class:HiCR::backend::ascend::L1::CommunicationManager
CommunicationManager	include/backends/ascend/L1/communicationManager.hpp	/^class CommunicationManager final : public HiCR::L1::CommunicationManager$/;"	c	namespace:HiCR::backend::ascend::L1
CommunicationManager	include/backends/host/pthreads/L1/communicationManager.hpp	/^  CommunicationManager(const size_t fenceCount = 1) : HiCR::L1::CommunicationManager()$/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager
CommunicationManager	include/backends/host/pthreads/L1/communicationManager.hpp	/^class CommunicationManager final : public HiCR::L1::CommunicationManager$/;"	c	namespace:HiCR::backend::host::pthreads::L1
CommunicationManager	include/backends/lpf/L1/communicationManager.hpp	/^  CommunicationManager(size_t size, size_t rank, lpf_t lpf) : HiCR::L1::CommunicationManager(), /;"	f	class:HiCR::backend::lpf::L1::CommunicationManager
CommunicationManager	include/backends/lpf/L1/communicationManager.hpp	/^class CommunicationManager final : public HiCR::L1::CommunicationManager$/;"	c	namespace:HiCR::backend::lpf::L1
CommunicationManager	include/backends/mpi/L1/communicationManager.hpp	/^  CommunicationManager(MPI_Comm comm = MPI_COMM_WORLD) : HiCR::L1::CommunicationManager(), _comm/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager
CommunicationManager	include/backends/mpi/L1/communicationManager.hpp	/^class CommunicationManager final : public HiCR::L1::CommunicationManager$/;"	c	namespace:HiCR::backend::mpi::L1
CommunicationManager	include/hicr/L1/communicationManager.hpp	/^class CommunicationManager$/;"	c	namespace:HiCR::L1
CompatibleLimits	extern/nlohmann_json/json.hpp	/^    using CompatibleLimits = std::numeric_limits<CompatibleNumberIntegerType>;$/;"	t	struct:detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<CompatibleNumberIntegerType>
CompressedTuple	extern/parallel_hashmap/phmap_base.h	/^    explicit constexpr CompressedTuple(Ts... base)$/;"	f	class:phmap::priv::CompressedTuple
CompressedTuple	extern/parallel_hashmap/phmap_base.h	/^class PHMAP_INTERNAL_COMPRESSED_TUPLE_DECLSPEC CompressedTuple$/;"	c	namespace:phmap::priv
CompressedTuple	extern/parallel_hashmap/phmap_base.h	/^class PHMAP_INTERNAL_COMPRESSED_TUPLE_DECLSPEC CompressedTuple<> {};$/;"	c	namespace:phmap::priv
CompressedTupleImpl	extern/parallel_hashmap/phmap_base.h	/^    CompressedTupleImpl<CompressedTuple<Ts...>, phmap::index_sequence<I...>>$/;"	s	namespace:phmap::priv::internal_compressed_tuple
CompressedTupleImpl	extern/parallel_hashmap/phmap_base.h	/^    explicit constexpr CompressedTupleImpl(Ts&&... args)$/;"	f	struct:phmap::priv::internal_compressed_tuple::CompressedTupleImpl
CompressedTupleImpl	extern/parallel_hashmap/phmap_base.h	/^struct PHMAP_INTERNAL_COMPRESSED_TUPLE_DECLSPEC CompressedTupleImpl;$/;"	v	namespace:phmap::priv::internal_compressed_tuple	typeref:struct:PHMAP_INTERNAL_COMPRESSED_TUPLE_DECLSPEC
ComputationKernel	include/backends/ascend/computationKernel.hpp	/^  ComputationKernel($/;"	f	class:HiCR::backend::ascend::ComputationKernel
ComputationKernel	include/backends/ascend/computationKernel.hpp	/^class ComputationKernel final : public Kernel$/;"	c	namespace:HiCR::backend::ascend
ComputeManager	include/backends/ascend/L1/computeManager.hpp	/^  ComputeManager() : HiCR::L1::ComputeManager(){};$/;"	f	class:HiCR::backend::ascend::L1::ComputeManager
ComputeManager	include/backends/ascend/L1/computeManager.hpp	/^class ComputeManager final : public HiCR::L1::ComputeManager$/;"	c	namespace:HiCR::backend::ascend::L1
ComputeManager	include/backends/host/L1/computeManager.hpp	/^  ComputeManager() : HiCR::L1::ComputeManager() {}$/;"	f	class:HiCR::backend::host::L1::ComputeManager
ComputeManager	include/backends/host/L1/computeManager.hpp	/^class ComputeManager : public HiCR::L1::ComputeManager$/;"	c	namespace:HiCR::backend::host::L1
ComputeManager	include/backends/host/pthreads/L1/computeManager.hpp	/^  ComputeManager() : HiCR::backend::host::L1::ComputeManager() {}$/;"	f	class:HiCR::backend::host::pthreads::L1::ComputeManager
ComputeManager	include/backends/host/pthreads/L1/computeManager.hpp	/^class ComputeManager : public HiCR::backend::host::L1::ComputeManager$/;"	c	namespace:HiCR::backend::host::pthreads::L1
ComputeManager	include/hicr/L1/computeManager.hpp	/^class ComputeManager$/;"	c	namespace:HiCR::L1
ComputeResource	include/backends/ascend/L0/computeResource.hpp	/^  ComputeResource(const nlohmann::json &input) : HiCR::L0::ComputeResource()$/;"	f	class:HiCR::backend::ascend::L0::ComputeResource
ComputeResource	include/backends/ascend/L0/computeResource.hpp	/^  ComputeResource(const std::shared_ptr<ascend::L0::Device> device) : HiCR::L0::ComputeResource(/;"	f	class:HiCR::backend::ascend::L0::ComputeResource
ComputeResource	include/backends/ascend/L0/computeResource.hpp	/^class ComputeResource final : public HiCR::L0::ComputeResource$/;"	c	namespace:HiCR::backend::ascend::L0
ComputeResource	include/backends/host/L0/computeResource.hpp	/^  ComputeResource(const logicalProcessorId_t logicalProcessorId,$/;"	f	class:HiCR::backend::host::L0::ComputeResource
ComputeResource	include/backends/host/L0/computeResource.hpp	/^class ComputeResource : public HiCR::L0::ComputeResource$/;"	c	namespace:HiCR::backend::host::L0
ComputeResource	include/backends/host/hwloc/L0/computeResource.hpp	/^  ComputeResource(const nlohmann::json &input)$/;"	f	class:HiCR::backend::host::hwloc::L0::ComputeResource
ComputeResource	include/backends/host/hwloc/L0/computeResource.hpp	/^  ComputeResource(hwloc_topology_t topology, const logicalProcessorId_t logicalProcessorId)$/;"	f	class:HiCR::backend::host::hwloc::L0::ComputeResource
ComputeResource	include/backends/host/hwloc/L0/computeResource.hpp	/^class ComputeResource final : public HiCR::backend::host::L0::ComputeResource$/;"	c	namespace:HiCR::backend::host::hwloc::L0
ComputeResource	include/hicr/L0/computeResource.hpp	/^class ComputeResource$/;"	c	namespace:HiCR::L0
ConcurrentQueue	include/hicr/common/concurrentQueue.hpp	/^class ConcurrentQueue$/;"	c	namespace:HiCR::common
ConstantIteratorsImpl	extern/parallel_hashmap/phmap_base.h	/^    struct ConstantIteratorsImpl : std::false_type {};$/;"	s	struct:phmap::priv::hash_policy_traits
ConstantIteratorsImpl	extern/parallel_hashmap/phmap_base.h	/^    struct ConstantIteratorsImpl<P, phmap::void_t<typename P::constant_iterators>>$/;"	s	struct:phmap::priv::hash_policy_traits
ConstructFromTuple	extern/parallel_hashmap/phmap.h	/^void ConstructFromTuple(Alloc* alloc, T* ptr, Tuple&& t) {$/;"	f	namespace:phmap::priv	typeref:typename:void
ConstructFromTupleImpl	extern/parallel_hashmap/phmap.h	/^void ConstructFromTupleImpl(Alloc* alloc, T* ptr, Tuple&& t,$/;"	f	namespace:phmap::priv::memory_internal	typeref:typename:void
ConstructRange	extern/parallel_hashmap/phmap_base.h	/^void ConstructRange(Allocator& alloc, Iterator first, Iterator last,$/;"	f	namespace:phmap::memory_internal	typeref:typename:void
Consumer	include/frontends/channel/fixedSize/mpsc/consumer.hpp	/^  Consumer(L1::CommunicationManager &communicationManager,$/;"	f	class:HiCR::channel::fixedSize::MPSC::Consumer
Consumer	include/frontends/channel/fixedSize/mpsc/consumer.hpp	/^class Consumer final : public channel::fixedSize::Base$/;"	c	namespace:HiCR::channel::fixedSize::MPSC
Consumer	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^  Consumer(L1::CommunicationManager &communicationManager,$/;"	f	class:HiCR::channel::fixedSize::SPSC::Consumer
Consumer	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^class Consumer final : public channel::fixedSize::Base$/;"	c	namespace:HiCR::channel::fixedSize::SPSC
Consumer	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  Consumer($/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer
Consumer	include/frontends/channel/variableSize/spsc/consumer.hpp	/^class Consumer final : public variableSize::Base$/;"	c	namespace:HiCR::channel::variableSize::SPSC
ConsumerChannel	include/frontends/runtime/channel/hicr/consumerChannel.hpp	/^typedef HiCR::channel::variableSize::SPSC::Consumer ConsumerChannel;$/;"	t	namespace:HiCR::runtime	typeref:typename:HiCR::channel::variableSize::SPSC::Consumer
Container	extern/nlohmann_json/json.hpp	/^    using Container = std::vector<std::pair<const Key, T>, Allocator>;$/;"	t	struct:ordered_map	typeref:typename:std::vector<std::pair<const Key,T>,Allocator>
Contains	extern/parallel_hashmap/phmap_base.h	/^using Contains = phmap::disjunction<std::is_same<T, Ts>...>;$/;"	t	namespace:phmap::priv::internal_layout	typeref:typename:phmap::disjunction<std::is_same<T,Ts>...>
Continuous integration	extern/run-clang-format/README.rst	/^Continuous integration$/;"	s	chapter:=====================
ConvertDeletedToEmptyAndFullToDeleted	extern/parallel_hashmap/phmap.h	/^inline void ConvertDeletedToEmptyAndFullToDeleted($/;"	f	namespace:phmap::priv	typeref:typename:void
ConvertSpecialToEmptyAndFullToDeleted	extern/parallel_hashmap/phmap.h	/^    void ConvertSpecialToEmptyAndFullToDeleted(ctrl_t* dst) const {$/;"	f	struct:phmap::priv::GroupPortableImpl	typeref:typename:void
ConvertSpecialToEmptyAndFullToDeleted	extern/parallel_hashmap/phmap.h	/^    void ConvertSpecialToEmptyAndFullToDeleted(ctrl_t* dst) const {$/;"	f	struct:phmap::priv::GroupSse2Impl	typeref:typename:void
Coordinator	include/frontends/runtime/coordinator.hpp	/^  Coordinator(HiCR::L1::InstanceManager &instanceManager,$/;"	f	class:HiCR::runtime::Coordinator
Coordinator	include/frontends/runtime/coordinator.hpp	/^class Coordinator final : public runtime::Instance$/;"	c	namespace:HiCR::runtime
CopyConst	extern/parallel_hashmap/phmap_base.h	/^using CopyConst =$/;"	t	namespace:phmap::priv::internal_layout	typeref:typename:std::conditional<std::is_const<From>::value,const To,To>::type
CopyRange	extern/parallel_hashmap/phmap_base.h	/^void CopyRange(Allocator& alloc, Iterator destination, InputIterator first,$/;"	f	namespace:phmap::memory_internal	typeref:typename:void
Core	include/backends/ascend/core.hpp	/^  Core(const char *configPath = NULL) : _configPath(configPath){};$/;"	f	class:HiCR::backend::ascend::Core
Core	include/backends/ascend/core.hpp	/^class Core final$/;"	c	namespace:HiCR::backend::ascend
Coroutine	include/backends/host/coroutine.hpp	/^class Coroutine$/;"	c	namespace:HiCR::backend::host
CountLeadingEmptyOrDeleted	extern/parallel_hashmap/phmap.h	/^    uint32_t CountLeadingEmptyOrDeleted() const {$/;"	f	struct:phmap::priv::GroupPortableImpl	typeref:typename:uint32_t
CountLeadingEmptyOrDeleted	extern/parallel_hashmap/phmap.h	/^    uint32_t CountLeadingEmptyOrDeleted() const {$/;"	f	struct:phmap::priv::GroupSse2Impl	typeref:typename:uint32_t
CountLeadingZeros32	extern/parallel_hashmap/phmap_bits.h	/^PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t CountLeadingZeros32(uint32_t n) {$/;"	f	namespace:phmap::base_internal	typeref:typename:PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t
CountLeadingZeros32Slow	extern/parallel_hashmap/phmap_bits.h	/^PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t CountLeadingZeros32Slow(uint64_t n) {$/;"	f	namespace:phmap::base_internal	typeref:typename:PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t
CountLeadingZeros64	extern/parallel_hashmap/phmap_bits.h	/^PHMAP_BASE_INTERNAL_FORCEINLINE int CountLeadingZeros64(uint64_t n) {$/;"	f	namespace:phmap::base_internal	typeref:typename:PHMAP_BASE_INTERNAL_FORCEINLINE int
CountLeadingZeros64Slow	extern/parallel_hashmap/phmap_bits.h	/^PHMAP_BASE_INTERNAL_FORCEINLINE int CountLeadingZeros64Slow(uint64_t n) {$/;"	f	namespace:phmap::base_internal	typeref:typename:PHMAP_BASE_INTERNAL_FORCEINLINE int
CountTrailingZerosNonZero32	extern/parallel_hashmap/phmap_bits.h	/^PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t CountTrailingZerosNonZero32(uint32_t n) {$/;"	f	namespace:phmap::base_internal	typeref:typename:PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t
CountTrailingZerosNonZero32Slow	extern/parallel_hashmap/phmap_bits.h	/^PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t CountTrailingZerosNonZero32Slow(uint32_t n) {$/;"	f	namespace:phmap::base_internal	typeref:typename:PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t
CountTrailingZerosNonZero64	extern/parallel_hashmap/phmap_bits.h	/^PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t CountTrailingZerosNonZero64(uint64_t n) {$/;"	f	namespace:phmap::base_internal	typeref:typename:PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t
CountTrailingZerosNonZero64Slow	extern/parallel_hashmap/phmap_bits.h	/^PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t CountTrailingZerosNonZero64Slow(uint64_t n) {$/;"	f	namespace:phmap::base_internal	typeref:typename:PHMAP_BASE_INTERNAL_FORCEINLINE uint32_t
Credits	extern/doxygen-awesome-css/README.md	/^## Credits$/;"	s	chapter:Doxygen Awesome
Ctrl	extern/parallel_hashmap/phmap.h	/^enum Ctrl : ctrl_t $/;"	g	namespace:phmap::priv	typeref:typename:ctrl_t
Customization	extern/doxygen-awesome-css/docs/customization.md	/^# Customization$/;"	c
Customizing	extern/doxygen-awesome-css/docs/extensions.md	/^### Customizing$/;"	S	section:Extensions""Dark Mode Toggle {#extension-dark-mode-toggle}
Customizing	extern/doxygen-awesome-css/docs/extensions.md	/^### Customizing$/;"	S	section:Extensions""Fragment Copy Button {#extension-copy-button}
Customizing	extern/doxygen-awesome-css/docs/extensions.md	/^### Customizing$/;"	S	section:Extensions""Interactive TOC {#extension-toc}
Customizing	extern/doxygen-awesome-css/docs/extensions.md	/^### Customizing$/;"	S	section:Extensions""Paragraph Linking {#extension-para}
DATADIR	extern/doxygen-awesome-css/Makefile	/^DATADIR = share$/;"	m
DEFAULT_CLANG_FORMAT_IGNORE	extern/run-clang-format/run-clang-format.py	/^DEFAULT_CLANG_FORMAT_IGNORE = '.clang-format-ignore'$/;"	v
DEFAULT_EXTENSIONS	extern/run-clang-format/run-clang-format.py	/^DEFAULT_EXTENSIONS = 'c,h,C,H,cpp,hpp,cc,hh,c++,h++,cxx,hxx'$/;"	v
DEFAULT_MEMSLOTS	examples/channels/fixedSize/spsc/source/lpf.cpp	/^#define DEFAULT_MEMSLOTS /;"	d	file:
DEFAULT_MEMSLOTS	examples/channels/variableSize/spsc/source/lpf.cpp	/^#define DEFAULT_MEMSLOTS /;"	d	file:
DEFAULT_MEMSLOTS	examples/hicr/memcpy/source/lpf.cpp	/^#define DEFAULT_MEMSLOTS /;"	d	file:
DEFAULT_MEMSLOTS	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^#define DEFAULT_MEMSLOTS /;"	d	file:
DEFAULT_MSGSLOTS	examples/channels/fixedSize/spsc/source/lpf.cpp	/^#define DEFAULT_MSGSLOTS /;"	d	file:
DEFAULT_MSGSLOTS	examples/channels/variableSize/spsc/source/lpf.cpp	/^#define DEFAULT_MSGSLOTS /;"	d	file:
DEFAULT_MSGSLOTS	examples/hicr/memcpy/source/lpf.cpp	/^#define DEFAULT_MSGSLOTS /;"	d	file:
DEFAULT_MSGSLOTS	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^#define DEFAULT_MSGSLOTS /;"	d	file:
DEVNULL	extern/run-clang-format/run-clang-format.py	/^    DEVNULL = open(os.devnull, "wb")$/;"	v
DIFF	extern/run-clang-format/run-clang-format.py	/^    DIFF = 1$/;"	v	class:ExitStatus
DST_OFFSET	examples/hicr/memcpy/source/include/telephoneGame.hpp	/^#define DST_OFFSET /;"	d
DST_OFFSET	examples/hicr/memcpy/source/lpf.cpp	/^#define DST_OFFSET /;"	d	file:
DST_OFFSET	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^#define DST_OFFSET /;"	d	file:
Dark Mode Toggle {#extension-dark-mode-toggle}	extern/doxygen-awesome-css/docs/extensions.md	/^## Dark Mode Toggle {#extension-dark-mode-toggle}$/;"	s	chapter:Extensions
DataMemAndPtr	extern/parallel_hashmap/phmap_base.h	/^struct DataMemAndPtr : StrippedAccept<DataMemAndPtr> $/;"	s	namespace:phmap::base_internal
DataMemAndRef	extern/parallel_hashmap/phmap_base.h	/^struct DataMemAndRef : StrippedAccept<DataMemAndRef> $/;"	s	namespace:phmap::base_internal
DataObject	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  DataObject(void *buffer, const size_t size, const dataObjectId_t id, const HiCR::L0::Instance:/;"	f	class:HiCR::runtime::DataObject
DataObject	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^class DataObject final$/;"	c	namespace:HiCR::runtime
Deallocate	extern/parallel_hashmap/phmap_base.h	/^void Deallocate(Alloc* alloc, void* p, size_t n) {$/;"	f	namespace:phmap::priv	typeref:typename:void
DecomposePair	extern/parallel_hashmap/phmap.h	/^auto DecomposePair(F&& f, Args&&... args)$/;"	f	namespace:phmap::priv	typeref:typename:decltype(memory_internal::DecomposePairImpl (std::forward<F> (f),PairArgs (std::forward<Args> (args)...)))
DecomposePairImpl	extern/parallel_hashmap/phmap.h	/^DecomposePairImpl(F&& f, std::pair<std::tuple<K>, V> p) {$/;"	f	namespace:phmap::priv::memory_internal	typeref:typename:decltype(std::declval<F> ()(std::declval<const K &> (),std::piecewise_construct,std::declval<std::tuple<K>> (),std::declval<V> ()))
DecomposeValue	extern/parallel_hashmap/phmap.h	/^DecomposeValue(F&& f, Arg&& arg) {$/;"	f	namespace:phmap::priv	typeref:typename:decltype(std::declval<F> ()(std::declval<const Arg &> (),std::declval<Arg> ()))
Destroy	extern/parallel_hashmap/phmap_base.h	/^    static void Destroy(Node* node) {$/;"	f	struct:phmap::priv::CommonAccess	typeref:typename:void
Device	include/backends/ascend/L0/device.hpp	/^  Device($/;"	f	class:HiCR::backend::ascend::L0::Device
Device	include/backends/ascend/L0/device.hpp	/^  Device() : HiCR::L0::Device() {}$/;"	f	class:HiCR::backend::ascend::L0::Device
Device	include/backends/ascend/L0/device.hpp	/^  Device(const nlohmann::json &input) : HiCR::L0::Device()$/;"	f	class:HiCR::backend::ascend::L0::Device
Device	include/backends/ascend/L0/device.hpp	/^class Device final : public HiCR::L0::Device$/;"	c	namespace:HiCR::backend::ascend::L0
Device	include/backends/host/L0/device.hpp	/^  Device() : HiCR::L0::Device(){};$/;"	f	class:HiCR::backend::host::L0::Device
Device	include/backends/host/L0/device.hpp	/^  Device(const NUMADomainID_t NUMADomainId, const computeResourceList_t &computeResources, const/;"	f	class:HiCR::backend::host::L0::Device
Device	include/backends/host/L0/device.hpp	/^class Device : public HiCR::L0::Device$/;"	c	namespace:HiCR::backend::host::L0
Device	include/backends/host/hwloc/L0/device.hpp	/^  Device(const NUMADomainID_t NUMADomainId, const computeResourceList_t &computeResources, const/;"	f	class:HiCR::backend::host::hwloc::L0::Device
Device	include/backends/host/hwloc/L0/device.hpp	/^  Device(const nlohmann::json &input) : HiCR::backend::host::L0::Device()$/;"	f	class:HiCR::backend::host::hwloc::L0::Device
Device	include/backends/host/hwloc/L0/device.hpp	/^class Device final : public HiCR::backend::host::L0::Device$/;"	c	namespace:HiCR::backend::host::hwloc::L0
Device	include/hicr/L0/device.hpp	/^  Device(const computeResourceList_t &computeResources, const memorySpaceList_t &memorySpaces)$/;"	f	class:HiCR::L0::Device
Device	include/hicr/L0/device.hpp	/^class Device$/;"	c	namespace:HiCR::L0
Diagrams with Graphviz {#tricks-graphviz}	extern/doxygen-awesome-css/docs/tricks.md	/^## Diagrams with Graphviz {#tricks-graphviz}$/;"	s	chapter:Tips & Tricks
DiffError	extern/run-clang-format/run-clang-format.py	/^class DiffError(Exception):$/;"	c
Disable Dark Mode {#tricks-darkmode}	extern/doxygen-awesome-css/docs/tricks.md	/^## Disable Dark Mode {#tricks-darkmode}$/;"	s	chapter:Tips & Tricks
Dispatcher	include/frontends/tasking/dispatcher.hpp	/^  __USED__ Dispatcher(const pullFunction_t pullFc) : _pullFc(pullFc){};$/;"	f	class:HiCR::tasking::Dispatcher	typeref:typename:__USED__
Dispatcher	include/frontends/tasking/dispatcher.hpp	/^class Dispatcher$/;"	c	namespace:HiCR::tasking
DisposeCallback	extern/parallel_hashmap/phmap.h	/^    using DisposeCallback = void (*)(const HashtablezInfo&);$/;"	t	class:phmap::priv::HashtablezSampler
DoIt	extern/parallel_hashmap/phmap_base.h	/^    static std::nullptr_t DoIt() {$/;"	f	struct:phmap::type_traits_internal::AssertHashEnabledHelper	typeref:typename:std::nullptr_t
DoNothing	extern/parallel_hashmap/phmap_base.h	/^        DoNothing() noexcept {}$/;"	f	struct:phmap::LockableBaseImpl::DoNothing
DoNothing	extern/parallel_hashmap/phmap_base.h	/^        DoNothing(mutex_type&, phmap::adopt_lock_t) noexcept {}$/;"	f	struct:phmap::LockableBaseImpl::DoNothing
DoNothing	extern/parallel_hashmap/phmap_base.h	/^        DoNothing(mutex_type&, phmap::defer_lock_t) noexcept {}$/;"	f	struct:phmap::LockableBaseImpl::DoNothing
DoNothing	extern/parallel_hashmap/phmap_base.h	/^        DoNothing(mutex_type&, phmap::try_to_lock_t) {}$/;"	f	struct:phmap::LockableBaseImpl::DoNothing
DoNothing	extern/parallel_hashmap/phmap_base.h	/^        explicit DoNothing(mutex_type& ) noexcept {}$/;"	f	struct:phmap::LockableBaseImpl::DoNothing
DoNothing	extern/parallel_hashmap/phmap_base.h	/^        explicit DoNothing(mutex_type& , mutex_type&) noexcept {}$/;"	f	struct:phmap::LockableBaseImpl::DoNothing
DoNothing	extern/parallel_hashmap/phmap_base.h	/^        template<class T> explicit DoNothing(T&&) {}$/;"	f	struct:phmap::LockableBaseImpl::DoNothing
DoNothing	extern/parallel_hashmap/phmap_base.h	/^    struct DoNothing$/;"	s	class:phmap::LockableBaseImpl
Doxygen Awesome	extern/doxygen-awesome-css/README.md	/^#  Doxygen Awesome$/;"	c
Doxygen generator	extern/doxygen-awesome-css/docs/customization.md	/^## Doxygen generator$/;"	s	chapter:Customization
DoxygenAwesomeDarkModeToggle	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^class DoxygenAwesomeDarkModeToggle extends HTMLElement {$/;"	c
DoxygenAwesomeFragmentCopyButton	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^class DoxygenAwesomeFragmentCopyButton extends HTMLElement {$/;"	c
DoxygenAwesomeInteractiveToc	extern/doxygen-awesome-css/doxygen-awesome-interactive-toc.js	/^class DoxygenAwesomeInteractiveToc {$/;"	c
DoxygenAwesomeParagraphLink	extern/doxygen-awesome-css/doxygen-awesome-paragraph-link.js	/^class DoxygenAwesomeParagraphLink {$/;"	c
DoxygenAwesomeTabs	extern/doxygen-awesome-css/doxygen-awesome-tabs.js	/^class DoxygenAwesomeTabs {$/;"	c
ELEMENTS_PER_CACHE_LINE	extern/atomic_queue/atomic_queue.h	/^    static constexpr auto ELEMENTS_PER_CACHE_LINE = CACHE_LINE_SIZE \/ sizeof(std::atomic<T>);$/;"	m	class:atomic_queue::AtomicQueueB	typeref:typename:auto
ELEMENT_TYPE	examples/channels/fixedSize/mpsc/include/common.hpp	/^#define ELEMENT_TYPE /;"	d
ELEMENT_TYPE	examples/channels/fixedSize/spsc/include/common.hpp	/^#define ELEMENT_TYPE /;"	d
ELEMENT_TYPE	examples/channels/variableSize/spsc/include/common.hpp	/^#define ELEMENT_TYPE /;"	d
EMPTY	extern/atomic_queue/atomic_queue.h	/^    enum State : unsigned char { EMPTY, STORING, STORED, LOADING };$/;"	e	enum:atomic_queue::AtomicQueueCommon::State
Elem	extern/parallel_hashmap/phmap_base.h	/^struct Elem<CompressedTuple<B...>, I>$/;"	s	namespace:phmap::priv::internal_compressed_tuple
ElemT	extern/parallel_hashmap/phmap_base.h	/^        using ElemT = internal_compressed_tuple::ElemT<CompressedTuple, I>;$/;"	t	class:phmap::priv::CompressedTuple	typeref:typename:internal_compressed_tuple::ElemT<CompressedTuple,I>
ElemT	extern/parallel_hashmap/phmap_base.h	/^using ElemT = typename Elem<D, I>::type;$/;"	t	namespace:phmap::priv::internal_compressed_tuple	typeref:typename:Elem<D,I>::type
ElementAlignment	extern/parallel_hashmap/phmap_base.h	/^        using ElementAlignment =$/;"	t	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:AlignOf<typename std::tuple_element<N,std::tuple<Elements...>>::type>
ElementIndex	extern/parallel_hashmap/phmap_base.h	/^        static constexpr size_t ElementIndex() {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:size_t
ElementT	extern/parallel_hashmap/phmap_base.h	/^using ElementT = typename ElementType<C>::type;$/;"	t	namespace:phmap::span_internal	typeref:typename:ElementType<C>::type
ElementType	extern/parallel_hashmap/phmap_base.h	/^        using ElementType = typename std::tuple_element<N, ElementTypes>::type;$/;"	t	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:std::tuple_element<N,ElementTypes>::type
ElementType	extern/parallel_hashmap/phmap_base.h	/^struct ElementType {$/;"	s	namespace:phmap::memory_internal
ElementType	extern/parallel_hashmap/phmap_base.h	/^struct ElementType {$/;"	s	namespace:phmap::span_internal
ElementType	extern/parallel_hashmap/phmap_base.h	/^struct ElementType<T (&)[N]> {$/;"	s	namespace:phmap::span_internal
ElementType	extern/parallel_hashmap/phmap_base.h	/^struct ElementType<T, void_t<typename T::element_type>> {$/;"	s	namespace:phmap::memory_internal
ElementTypes	extern/parallel_hashmap/phmap_base.h	/^    using ElementTypes = std::tuple<typename Type<Elements>::type...>;$/;"	t	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:std::tuple<typename Type<Elements>::type...>
EmbeddedConstIterator	extern/parallel_hashmap/phmap.h	/^    using EmbeddedConstIterator= typename EmbeddedSet::const_iterator;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:EmbeddedSet::const_iterator
EmbeddedIterator	extern/parallel_hashmap/phmap.h	/^        using EmbeddedIterator  = typename EmbeddedSet::iterator;$/;"	t	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:EmbeddedSet::iterator
EmbeddedIterator	extern/parallel_hashmap/phmap.h	/^    using EmbeddedIterator= typename EmbeddedSet::iterator;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:EmbeddedSet::iterator
EmbeddedSet	extern/parallel_hashmap/phmap.h	/^        using EmbeddedSet       = typename parallel_hash_set::EmbeddedSet;$/;"	t	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:parallel_hash_set::EmbeddedSet
EmbeddedSet	extern/parallel_hashmap/phmap.h	/^    using EmbeddedSet     = RefSet<Policy, Hash, Eq, Alloc>;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:RefSet<Policy,Hash,Eq,Alloc>
EmbeddedSet	extern/parallel_hashmap/phmap.h	/^    using EmbeddedSet = typename Set::EmbeddedSet;$/;"	t	struct:phmap::priv::hashtable_debug_internal::HashtableDebugAccess	typeref:typename:Set::EmbeddedSet
EmplaceDecomposable	extern/parallel_hashmap/phmap.h	/^    struct EmplaceDecomposable $/;"	s	class:phmap::priv::parallel_hash_set
EmplaceDecomposable	extern/parallel_hashmap/phmap.h	/^    struct EmplaceDecomposable $/;"	s	class:phmap::priv::raw_hash_set
EmplaceDecomposableHashval	extern/parallel_hashmap/phmap.h	/^    struct EmplaceDecomposableHashval $/;"	s	class:phmap::priv::parallel_hash_set
EmplaceDecomposableHashval	extern/parallel_hashmap/phmap.h	/^    struct EmplaceDecomposableHashval {$/;"	s	class:phmap::priv::raw_hash_set
EmptyGroup	extern/parallel_hashmap/phmap.h	/^inline ctrl_t* EmptyGroup() {$/;"	f	namespace:phmap::priv	typeref:typename:ctrl_t *
EmptyNode	extern/parallel_hashmap/btree.h	/^        static node_type *EmptyNode() {$/;"	f	class:phmap::priv::btree	typeref:typename:node_type *
EmptyNodeType	extern/parallel_hashmap/btree.h	/^            EmptyNodeType() : parent(this) {}$/;"	f	struct:phmap::priv::btree::EmptyNodeType
EmptyNodeType	extern/parallel_hashmap/btree.h	/^            constexpr EmptyNodeType(node_type *p) : parent(p) {}$/;"	f	struct:phmap::priv::btree::EmptyNodeType
EmptyNodeType	extern/parallel_hashmap/btree.h	/^        struct alignas(node_type::Alignment()) EmptyNodeType : node_type {$/;"	s	class:phmap::priv::btree
EnableIf	extern/parallel_hashmap/phmap_base.h	/^using EnableIf = typename std::enable_if<C, int>::type;$/;"	t	namespace:phmap::priv::internal_layout	typeref:typename:std::enable_if<C,int>::type
EnableIfConstView	extern/parallel_hashmap/phmap_base.h	/^    using EnableIfConstView =$/;"	t	class:phmap::Span	typeref:typename:std::enable_if<std::is_const<T>::value,U>::type
EnableIfConvertibleFrom	extern/parallel_hashmap/phmap_base.h	/^    using EnableIfConvertibleFrom =$/;"	t	class:phmap::Span	typeref:typename:std::enable_if<span_internal::HasData<T,C>::value && span_internal::HasSize<C>::value>::type
EnableIfConvertibleToSpanConst	extern/parallel_hashmap/phmap_base.h	/^using EnableIfConvertibleToSpanConst =$/;"	t	namespace:phmap::span_internal	typeref:typename:std::enable_if<IsConvertible<From,Span<const To>>::value>::type
EnableIfMutable	extern/parallel_hashmap/phmap_base.h	/^using EnableIfMutable =$/;"	t	namespace:phmap::span_internal	typeref:typename:std::enable_if<!std::is_const<T>::value,int>::type
EnableIfMutableView	extern/parallel_hashmap/phmap_base.h	/^    using EnableIfMutableView =$/;"	t	class:phmap::Span	typeref:typename:std::enable_if<!std::is_const<T>::value,U>::type
Energy Saver	examples/tasking/energySaver/README.md	/^Energy Saver$/;"	c
Entry Point	examples/machineModel/machineModel.json	/^      "Entry Point": "Task A",$/;"	s	object:Instances.0
Entry Point	examples/machineModel/machineModel.json	/^      "Entry Point": "Task B",$/;"	s	object:Instances.1
Entry Point	examples/machineModel/machineModel.json	/^      "Entry Point": "Task C",$/;"	s	object:Instances.2
Entry Point	examples/runtime/machineModel.json	/^      "Entry Point": "A",$/;"	s	object:Instances.0
Entry Point	examples/runtime/machineModel.json	/^      "Entry Point": "B",$/;"	s	object:Instances.1
Entry Point	examples/runtime/machineModel.json	/^      "Entry Point": "C",$/;"	s	object:Instances.2
Eq	extern/parallel_hashmap/phmap.h	/^    struct Eq {$/;"	s	struct:phmap::priv::HashEq
Eq	extern/parallel_hashmap/phmap.h	/^    struct Eq {$/;"	s	struct:phmap::priv::StringHashEqT
Eq	extern/parallel_hashmap/phmap_fwd_decl.h	/^            using Eq   = phmap::EqualTo<T>;$/;"	t	struct:phmap::priv::HashEq	typeref:typename:phmap::EqualTo<T>
EqualElement	extern/parallel_hashmap/phmap.h	/^    struct EqualElement $/;"	s	class:phmap::priv::parallel_hash_set
EqualElement	extern/parallel_hashmap/phmap.h	/^    struct EqualElement $/;"	s	class:phmap::priv::raw_hash_set
EqualImpl	extern/parallel_hashmap/phmap_base.h	/^bool EqualImpl(Span<T> a, Span<T> b) {$/;"	f	namespace:phmap::span_internal	typeref:typename:bool
EqualTo	extern/parallel_hashmap/phmap_base.h	/^struct EqualTo$/;"	s	namespace:phmap
EventMap	include/frontends/tasking/eventMap.hpp	/^class EventMap$/;"	c	namespace:HiCR::tasking
Example	extern/doxygen-awesome-css/include/MyLibrary/example.hpp	/^class Example$/;"	c	namespace:MyLibrary
Examples	extern/doxygen-awesome-css/README.md	/^## Examples$/;"	s	chapter:Doxygen Awesome
ExecutionState	include/backends/ascend/L0/executionState.hpp	/^  ExecutionState(const std::shared_ptr<HiCR::L0::ExecutionUnit> executionUnit) : HiCR::L0::Execu/;"	f	class:HiCR::backend::ascend::L0::ExecutionState
ExecutionState	include/backends/ascend/L0/executionState.hpp	/^class ExecutionState final : public HiCR::L0::ExecutionState$/;"	c	namespace:HiCR::backend::ascend::L0
ExecutionState	include/backends/host/L0/executionState.hpp	/^  __USED__ inline ExecutionState(const std::shared_ptr<HiCR::L0::ExecutionUnit> executionUnit) :/;"	f	class:HiCR::backend::host::L0::ExecutionState	typeref:typename:__USED__
ExecutionState	include/backends/host/L0/executionState.hpp	/^class ExecutionState final : public HiCR::L0::ExecutionState$/;"	c	namespace:HiCR::backend::host::L0
ExecutionState	include/hicr/L0/executionState.hpp	/^  ExecutionState(const std::shared_ptr<HiCR::L0::ExecutionUnit> executionUnit){};$/;"	f	class:HiCR::L0::ExecutionState
ExecutionState	include/hicr/L0/executionState.hpp	/^class ExecutionState$/;"	c	namespace:HiCR::L0
ExecutionUnit	include/backends/ascend/L0/executionUnit.hpp	/^  ExecutionUnit(const std::vector<ascend::Kernel *> &kernelOperations) : HiCR::L0::ExecutionUnit/;"	f	class:HiCR::backend::ascend::L0::ExecutionUnit
ExecutionUnit	include/backends/ascend/L0/executionUnit.hpp	/^class ExecutionUnit final : public HiCR::L0::ExecutionUnit$/;"	c	namespace:HiCR::backend::ascend::L0
ExecutionUnit	include/backends/host/L0/executionUnit.hpp	/^  ExecutionUnit(Coroutine::coroutineFc_t fc) : HiCR::L0::ExecutionUnit(), _fc(fc){};$/;"	f	class:HiCR::backend::host::L0::ExecutionUnit
ExecutionUnit	include/backends/host/L0/executionUnit.hpp	/^class ExecutionUnit final : public HiCR::L0::ExecutionUnit$/;"	c	namespace:HiCR::backend::host::L0
ExecutionUnit	include/hicr/L0/executionUnit.hpp	/^class ExecutionUnit$/;"	c	namespace:HiCR::L0
ExitStatus	extern/run-clang-format/run-clang-format.py	/^class ExitStatus:$/;"	c
Extend	extern/nlohmann_json/json.hpp	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 0>$/;"	s	namespace:detail::utility_internal
Extend	extern/nlohmann_json/json.hpp	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 1>$/;"	s	namespace:detail::utility_internal
Extend	extern/parallel_hashmap/phmap_base.h	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 0> {$/;"	s	namespace:phmap::utility_internal
Extend	extern/parallel_hashmap/phmap_base.h	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 1> {$/;"	s	namespace:phmap::utility_internal
Extensions	extern/doxygen-awesome-css/docs/extensions.md	/^# Extensions$/;"	c
ExtentsRemoved	extern/parallel_hashmap/btree.h	/^            using ExtentsRemoved = typename std::remove_all_extents<T>::type;$/;"	t	class:phmap::type_traits_internal::is_trivially_copyable_impl	typeref:typename:std::remove_all_extents<T>::type
ExtractOr	extern/parallel_hashmap/phmap_base.h	/^struct ExtractOr {$/;"	s	namespace:phmap::memory_internal
ExtractOr	extern/parallel_hashmap/phmap_base.h	/^struct ExtractOr<Extract, Obj, Default, void_t<Extract<Obj>>> {$/;"	s	namespace:phmap::memory_internal
ExtractOrT	extern/parallel_hashmap/phmap_base.h	/^using ExtractOrT = typename ExtractOr<Extract, Obj, Default, void>::type;$/;"	t	namespace:phmap::memory_internal	typeref:typename:ExtractOr<Extract,Obj,Default,void>::type
FAQ	extern/run-clang-format/README.rst	/^FAQ$/;"	s	chapter:=====================
FILES	extern/doxygen-awesome-css/Makefile	/^FILES = doxygen-awesome-darkmode-toggle.js \\$/;"	m
Fail	extern/parallel_hashmap/btree.h	/^        struct Fail {$/;"	s	namespace:phmap::compare_internal
FatalException	include/hicr/exceptions.hpp	/^  __USED__ FatalException(const char *const message) : runtime_error(message) {}$/;"	f	class:HiCR::FatalException	typeref:typename:__USED__
FatalException	include/hicr/exceptions.hpp	/^class FatalException : public std::runtime_error$/;"	c	namespace:HiCR
Features	extern/doxygen-awesome-css/README.md	/^## Features$/;"	s	chapter:Doxygen Awesome
Find	extern/parallel_hashmap/phmap_base.h	/^constexpr size_t Find(Needle, Needle, Ts...) {$/;"	f	namespace:phmap::priv::internal_layout::adl_barrier	typeref:typename:size_t
Find	extern/parallel_hashmap/phmap_base.h	/^constexpr size_t Find(Needle, T, Ts...) {$/;"	f	namespace:phmap::priv::internal_layout::adl_barrier	typeref:typename:size_t
FindElement	extern/parallel_hashmap/phmap.h	/^    struct FindElement $/;"	s	class:phmap::priv::parallel_hash_set
FindElement	extern/parallel_hashmap/phmap.h	/^    struct FindElement $/;"	s	class:phmap::priv::raw_hash_set
FindInfo	extern/parallel_hashmap/phmap.h	/^    struct FindInfo $/;"	s	class:phmap::priv::raw_hash_set
FlatHashMapPolicy	extern/parallel_hashmap/phmap.h	/^struct FlatHashMapPolicy $/;"	s	namespace:phmap::priv
FlatHashSetPolicy	extern/parallel_hashmap/phmap.h	/^struct FlatHashSetPolicy $/;"	s	namespace:phmap::priv
Formatting Tables {#tricks-tables}	extern/doxygen-awesome-css/docs/tricks.md	/^## Formatting Tables {#tricks-tables}$/;"	s	chapter:Tips & Tricks
Fragment Copy Button {#extension-copy-button}	extern/doxygen-awesome-css/docs/extensions.md	/^## Fragment Copy Button {#extension-copy-button}$/;"	s	chapter:Extensions
FromHost16	extern/parallel_hashmap/phmap_bits.h	/^    inline uint16_t FromHost16(uint16_t x) { return gbswap_16(x); }$/;"	f	namespace:phmap::big_endian	typeref:typename:uint16_t
FromHost16	extern/parallel_hashmap/phmap_bits.h	/^    inline uint16_t FromHost16(uint16_t x) { return x; }$/;"	f	namespace:phmap::little_endian	typeref:typename:uint16_t
FromHost32	extern/parallel_hashmap/phmap_bits.h	/^    inline uint32_t FromHost32(uint32_t x) { return gbswap_32(x); }$/;"	f	namespace:phmap::big_endian	typeref:typename:uint32_t
FromHost32	extern/parallel_hashmap/phmap_bits.h	/^    inline uint32_t FromHost32(uint32_t x) { return x; }$/;"	f	namespace:phmap::little_endian	typeref:typename:uint32_t
FromHost64	extern/parallel_hashmap/phmap_bits.h	/^    inline uint64_t FromHost64(uint64_t x) { return gbswap_64(x); }$/;"	f	namespace:phmap::big_endian	typeref:typename:uint64_t
FromHost64	extern/parallel_hashmap/phmap_bits.h	/^    inline uint64_t FromHost64(uint64_t x) { return x; }$/;"	f	namespace:phmap::little_endian	typeref:typename:uint64_t
Full Width	extern/doxygen-awesome-css/docs/tricks.md	/^### Full Width$/;"	S	section:Tips & Tricks""Formatting Tables {#tricks-tables}
Further installation instructions:	extern/doxygen-awesome-css/README.md	/^### Further installation instructions:$/;"	S	section:Doxygen Awesome""Installation
Gen	extern/nlohmann_json/json.hpp	/^struct Gen$/;"	s	namespace:detail::utility_internal
Gen	extern/nlohmann_json/json.hpp	/^struct Gen<T, 0>$/;"	s	namespace:detail::utility_internal
Gen	extern/parallel_hashmap/phmap_base.h	/^struct Gen {$/;"	s	namespace:phmap::utility_internal
Gen	extern/parallel_hashmap/phmap_base.h	/^struct Gen<T, 0> {$/;"	s	namespace:phmap::utility_internal
Get Current Task	examples/tasking/getCurrentTask/README.md	/^Get Current Task$/;"	c
GetCacheLineIndexBits	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<  2> { static int constexpr value = 1; };$/;"	s	namespace:atomic_queue::details
GetCacheLineIndexBits	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<  4> { static int constexpr value = 2; };$/;"	s	namespace:atomic_queue::details
GetCacheLineIndexBits	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<  8> { static int constexpr value = 3; };$/;"	s	namespace:atomic_queue::details
GetCacheLineIndexBits	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits< 16> { static int constexpr value = 4; };$/;"	s	namespace:atomic_queue::details
GetCacheLineIndexBits	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits< 32> { static int constexpr value = 5; };$/;"	s	namespace:atomic_queue::details
GetCacheLineIndexBits	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits< 64> { static int constexpr value = 6; };$/;"	s	namespace:atomic_queue::details
GetCacheLineIndexBits	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<128> { static int constexpr value = 7; };$/;"	s	namespace:atomic_queue::details
GetCacheLineIndexBits	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<256> { static int constexpr value = 8; };$/;"	s	namespace:atomic_queue::details
GetCacheLineIndexBits	extern/atomic_queue/atomic_queue.h	/^template<size_t elements_per_cache_line> struct GetCacheLineIndexBits { static int constexpr val/;"	s	namespace:atomic_queue::details
GetConstPointer	extern/parallel_hashmap/phmap_base.h	/^using GetConstPointer = typename T::const_pointer;$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::const_pointer
GetConstVoidPointer	extern/parallel_hashmap/phmap_base.h	/^using GetConstVoidPointer = typename T::const_void_pointer;$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::const_void_pointer
GetData	extern/parallel_hashmap/phmap_base.h	/^constexpr auto GetData(C& c) noexcept  \/\/ NOLINT(runtime\/references)$/;"	f	namespace:phmap::span_internal	typeref:typename:auto
GetDataImpl	extern/parallel_hashmap/phmap_base.h	/^constexpr auto GetDataImpl(C& c, char) noexcept  \/\/ NOLINT(runtime\/references)$/;"	f	namespace:phmap::span_internal	typeref:typename:auto
GetDataImpl	extern/parallel_hashmap/phmap_base.h	/^inline char* GetDataImpl(std::string& s,  \/\/ NOLINT(runtime\/references)$/;"	f	namespace:phmap::span_internal	typeref:typename:char *
GetDifferenceType	extern/parallel_hashmap/phmap_base.h	/^using GetDifferenceType = typename T::difference_type;$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::difference_type
GetField	extern/parallel_hashmap/btree.h	/^        inline const typename layout_type::template ElementType<N> *GetField() const {$/;"	f	class:phmap::priv::btree_node	typeref:typename:const typename layout_type::ElementType *
GetField	extern/parallel_hashmap/btree.h	/^        inline typename layout_type::template ElementType<N> *GetField() {$/;"	f	class:phmap::priv::btree_node	typeref:typename:layout_type::ElementType *
GetFirstArg	extern/parallel_hashmap/phmap_base.h	/^struct GetFirstArg<Class<T, Args...>> {$/;"	s	namespace:phmap::memory_internal
GetIndexShuffleBits	extern/atomic_queue/atomic_queue.h	/^struct GetIndexShuffleBits {$/;"	s	namespace:atomic_queue::details
GetIndexShuffleBits	extern/atomic_queue/atomic_queue.h	/^struct GetIndexShuffleBits<false, array_size, elements_per_cache_line> {$/;"	s	namespace:atomic_queue::details
GetIsAlwaysEqual	extern/parallel_hashmap/phmap_base.h	/^using GetIsAlwaysEqual = typename T::is_always_equal;$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::is_always_equal
GetIsNothrow	extern/parallel_hashmap/phmap_base.h	/^using GetIsNothrow = typename Alloc::is_nothrow;$/;"	t	namespace:phmap::memory_internal	typeref:typename:Alloc::is_nothrow
GetKey	extern/parallel_hashmap/phmap.h	/^auto GetKey(const typename T::value_type& pair, int) -> decltype(get<0>(pair)) {$/;"	f	namespace:phmap::priv::hashtable_debug_internal	typeref:typename:decltype(get<0> (pair))
GetKey	extern/parallel_hashmap/phmap.h	/^const typename T::key_type& GetKey(const typename T::key_type& key, char) {$/;"	f	namespace:phmap::priv::hashtable_debug_internal	typeref:typename:const typename T::key_type &
GetNumProbes	extern/parallel_hashmap/phmap.h	/^    static size_t GetNumProbes(const Container& c,$/;"	f	struct:phmap::priv::hashtable_debug_internal::HashtableDebugAccess	typeref:typename:size_t
GetNumProbes	extern/parallel_hashmap/phmap.h	/^    static size_t GetNumProbes(const Set& set, const typename Set::key_type& key) {$/;"	f	struct:phmap::priv::hashtable_debug_internal::HashtableDebugAccess	typeref:typename:size_t
GetNumProbes	extern/parallel_hashmap/phmap.h	/^    static size_t GetNumProbes(const Set& set,$/;"	f	struct:phmap::priv::hashtable_debug_internal::HashtableDebugAccess	typeref:typename:size_t
GetPhysicalMemory	extern/parallel_hashmap/meminfo.h	/^    uint64_t GetPhysicalMemory()$/;"	f	namespace:spp	typeref:typename:uint64_t
GetPointer	extern/parallel_hashmap/phmap_base.h	/^using GetPointer = typename T::pointer;$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::pointer
GetProcessMemoryUsed	extern/parallel_hashmap/meminfo.h	/^    uint64_t GetProcessMemoryUsed()$/;"	f	namespace:spp	typeref:typename:uint64_t
GetPropagateOnContainerCopyAssignment	extern/parallel_hashmap/phmap_base.h	/^using GetPropagateOnContainerCopyAssignment =$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::propagate_on_container_copy_assignment
GetPropagateOnContainerMoveAssignment	extern/parallel_hashmap/phmap_base.h	/^using GetPropagateOnContainerMoveAssignment =$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::propagate_on_container_move_assignment
GetPropagateOnContainerSwap	extern/parallel_hashmap/phmap_base.h	/^using GetPropagateOnContainerSwap = typename T::propagate_on_container_swap;$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::propagate_on_container_swap
GetSizeType	extern/parallel_hashmap/phmap_base.h	/^using GetSizeType = typename T::size_type;$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::size_type
GetSlot	extern/parallel_hashmap/phmap_base.h	/^    static auto GetSlot(const Node& node) -> decltype(node.slot()) {$/;"	f	struct:phmap::priv::CommonAccess	typeref:typename:decltype(node.slot ())
GetSystemMemory	extern/parallel_hashmap/meminfo.h	/^    uint64_t GetSystemMemory()$/;"	f	namespace:spp	typeref:typename:uint64_t
GetTotalMemoryUsed	extern/parallel_hashmap/meminfo.h	/^    uint64_t GetTotalMemoryUsed()$/;"	f	namespace:spp	typeref:typename:uint64_t
GetVoidPointer	extern/parallel_hashmap/phmap_base.h	/^using GetVoidPointer = typename T::void_pointer;$/;"	t	namespace:phmap::memory_internal	typeref:typename:T::void_pointer
Git submodule	extern/doxygen-awesome-css/README.md	/^### Git submodule$/;"	S	section:Doxygen Awesome""Installation
Global	extern/parallel_hashmap/phmap.h	/^    static HashtablezSampler& Global() {  static HashtablezSampler hzs; return hzs; }$/;"	f	class:phmap::priv::HashtablezSampler	typeref:typename:HashtablezSampler &
GlobalMemorySlot	include/backends/host/L0/globalMemorySlot.hpp	/^  GlobalMemorySlot($/;"	f	class:HiCR::backend::host::L0::GlobalMemorySlot
GlobalMemorySlot	include/backends/host/L0/globalMemorySlot.hpp	/^class GlobalMemorySlot final : public HiCR::L0::GlobalMemorySlot$/;"	c	namespace:HiCR::backend::host::L0
GlobalMemorySlot	include/backends/lpf/L0/globalMemorySlot.hpp	/^  GlobalMemorySlot($/;"	f	class:HiCR::backend::lpf::L0::GlobalMemorySlot
GlobalMemorySlot	include/backends/lpf/L0/globalMemorySlot.hpp	/^class GlobalMemorySlot final : public HiCR::L0::GlobalMemorySlot$/;"	c	namespace:HiCR::backend::lpf::L0
GlobalMemorySlot	include/backends/mpi/L0/globalMemorySlot.hpp	/^  GlobalMemorySlot($/;"	f	class:HiCR::backend::mpi::L0::GlobalMemorySlot
GlobalMemorySlot	include/backends/mpi/L0/globalMemorySlot.hpp	/^class GlobalMemorySlot final : public HiCR::L0::GlobalMemorySlot$/;"	c	namespace:HiCR::backend::mpi::L0
GlobalMemorySlot	include/hicr/L0/globalMemorySlot.hpp	/^  GlobalMemorySlot($/;"	f	class:HiCR::L0::GlobalMemorySlot
GlobalMemorySlot	include/hicr/L0/globalMemorySlot.hpp	/^class GlobalMemorySlot : public MemorySlot$/;"	c	namespace:HiCR::L0
Group	extern/parallel_hashmap/phmap.h	/^    using Group = GroupPortableImpl;$/;"	t	namespace:phmap::priv	typeref:typename:GroupPortableImpl
Group	extern/parallel_hashmap/phmap.h	/^    using Group = GroupSse2Impl;$/;"	t	namespace:phmap::priv	typeref:typename:GroupSse2Impl
GroupPortableImpl	extern/parallel_hashmap/phmap.h	/^    explicit GroupPortableImpl(const ctrl_t* pos)$/;"	f	struct:phmap::priv::GroupPortableImpl
GroupPortableImpl	extern/parallel_hashmap/phmap.h	/^struct GroupPortableImpl $/;"	s	namespace:phmap::priv
GroupSse2Impl	extern/parallel_hashmap/phmap.h	/^    explicit GroupSse2Impl(const ctrl_t* pos) {$/;"	f	struct:phmap::priv::GroupSse2Impl
GroupSse2Impl	extern/parallel_hashmap/phmap.h	/^struct GroupSse2Impl $/;"	s	namespace:phmap::priv
GrowthToLowerboundCapacity	extern/parallel_hashmap/phmap.h	/^inline size_t GrowthToLowerboundCapacity(size_t growth) $/;"	f	namespace:phmap::priv	typeref:typename:size_t
H1	extern/parallel_hashmap/phmap.h	/^inline size_t H1(size_t hashval, const ctrl_t* ) {$/;"	f	namespace:phmap::priv	typeref:typename:size_t
H1	extern/parallel_hashmap/phmap.h	/^inline size_t H1(size_t hashval, const ctrl_t* ctrl) {$/;"	f	namespace:phmap::priv	typeref:typename:size_t
H2	extern/parallel_hashmap/phmap.h	/^inline h2_t H2(size_t hashval)       { return (ctrl_t)(hashval & 0x7F); }$/;"	f	namespace:phmap::priv	typeref:typename:h2_t
HICR_SUSPEND_RESUME_SIGNAL	include/backends/host/pthreads/L0/processingUnit.hpp	/^#define HICR_SUSPEND_RESUME_SIGNAL /;"	d
HICR_THROW_FATAL	include/hicr/exceptions.hpp	/^#define HICR_THROW_FATAL(/;"	d
HICR_THROW_LOGIC	include/hicr/exceptions.hpp	/^#define HICR_THROW_LOGIC(/;"	d
HICR_THROW_RUNTIME	include/hicr/exceptions.hpp	/^#define HICR_THROW_RUNTIME(/;"	d
HasData	extern/parallel_hashmap/phmap_base.h	/^using HasData =$/;"	t	namespace:phmap::span_internal
HasMatch	extern/parallel_hashmap/btree.h	/^        static constexpr bool HasMatch() { return false; }$/;"	f	struct:phmap::priv::SearchResult	typeref:typename:bool
HasMatch	extern/parallel_hashmap/btree.h	/^        static constexpr bool HasMatch() { return true; }$/;"	f	struct:phmap::priv::SearchResult	typeref:typename:bool
HasRebindAlloc	extern/parallel_hashmap/phmap_base.h	/^constexpr bool HasRebindAlloc(...) {$/;"	f	namespace:phmap::memory_internal	typeref:typename:bool
HasRebindAlloc	extern/parallel_hashmap/phmap_base.h	/^constexpr bool HasRebindAlloc(typename std::allocator_traits<T>::template rebind_alloc<U>*) {$/;"	f	namespace:phmap::memory_internal	typeref:typename:bool
HasSize	extern/parallel_hashmap/phmap_base.h	/^using HasSize =$/;"	t	namespace:phmap::span_internal
Hash	extern/parallel_hashmap/phmap.h	/^    struct Hash $/;"	s	struct:phmap::priv::StringHashEqT
Hash	extern/parallel_hashmap/phmap.h	/^    struct Hash {$/;"	s	struct:phmap::priv::HashEq
Hash	extern/parallel_hashmap/phmap_fwd_decl.h	/^            using Hash = phmap::Hash<T>;$/;"	t	struct:phmap::priv::HashEq	typeref:typename:phmap::Hash<T>
Hash	extern/parallel_hashmap/phmap_fwd_decl.h	/^    template <class T> using Hash = ::absl::Hash<T>;$/;"	t	namespace:phmap	typeref:typename:::absl::Hash<T>
Hash	extern/parallel_hashmap/phmap_utils.h	/^    template <class T> using Hash = ::absl::Hash<T>;$/;"	t	namespace:phmap	typeref:typename:::absl::Hash<T>
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<bool> : public phmap_unary_function<bool, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<char> : public phmap_unary_function<char, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<double> : public phmap_unary_function<double, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<float> : public phmap_unary_function<float, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<int16_t> : public phmap_unary_function<int16_t, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<int32_t> : public phmap_unary_function<int32_t, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<int64_t> : public phmap_unary_function<int64_t, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<signed char> : public phmap_unary_function<signed char, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<std::pair<T1, T2>> {$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<std::tuple<T...>> {$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<uint16_t> : public phmap_unary_function<uint16_t, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<uint32_t> : public phmap_unary_function<uint32_t, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<uint64_t> : public phmap_unary_function<uint64_t, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<unsigned char> : public phmap_unary_function<unsigned char, size_t>$/;"	s	namespace:phmap
Hash	extern/parallel_hashmap/phmap_utils.h	/^struct Hash<wchar_t> : public phmap_unary_function<wchar_t, size_t>$/;"	s	namespace:phmap
HashElement	extern/parallel_hashmap/phmap.h	/^    struct HashElement $/;"	s	class:phmap::priv::parallel_hash_set
HashElement	extern/parallel_hashmap/phmap.h	/^    struct HashElement $/;"	s	class:phmap::priv::raw_hash_set
HashEq	extern/parallel_hashmap/phmap.h	/^struct HashEq<T*> $/;"	s	namespace:phmap::priv
HashEq	extern/parallel_hashmap/phmap.h	/^struct HashEq<std::shared_ptr<T>> : HashEq<T*> {};$/;"	s	namespace:phmap::priv
HashEq	extern/parallel_hashmap/phmap.h	/^struct HashEq<std::string> : StringHashEqT<char> {};$/;"	s	namespace:phmap::priv
HashEq	extern/parallel_hashmap/phmap.h	/^struct HashEq<std::string_view> : StringHashEqT<char> {};$/;"	s	namespace:phmap::priv
HashEq	extern/parallel_hashmap/phmap.h	/^struct HashEq<std::u16string> : StringHashEqT<char16_t> {};$/;"	s	namespace:phmap::priv
HashEq	extern/parallel_hashmap/phmap.h	/^struct HashEq<std::u16string_view> : StringHashEqT<char16_t> {};$/;"	s	namespace:phmap::priv
HashEq	extern/parallel_hashmap/phmap.h	/^struct HashEq<std::unique_ptr<T, D>> : HashEq<T*> {};$/;"	s	namespace:phmap::priv
HashEq	extern/parallel_hashmap/phmap.h	/^struct HashEq<std::wstring> : StringHashEqT<wchar_t> {};$/;"	s	namespace:phmap::priv
HashEq	extern/parallel_hashmap/phmap.h	/^struct HashEq<std::wstring_view> : StringHashEqT<wchar_t> {};$/;"	s	namespace:phmap::priv
HashEq	extern/parallel_hashmap/phmap_fwd_decl.h	/^        struct HashEq $/;"	s	namespace:phmap::priv
HashSeed	extern/parallel_hashmap/phmap.h	/^inline size_t HashSeed(const ctrl_t* ctrl) {$/;"	f	namespace:phmap::priv	typeref:typename:size_t
HashState	extern/parallel_hashmap/phmap_utils.h	/^using HashState = HashStateBase<size_t>;$/;"	t	namespace:phmap	typeref:typename:HashStateBase<size_t>
HashStateBase	extern/parallel_hashmap/phmap_utils.h	/^class HashStateBase {$/;"	c	namespace:phmap
HashtableDebugAccess	extern/parallel_hashmap/phmap.h	/^struct HashtableDebugAccess$/;"	s	namespace:phmap::priv::hashtable_debug_internal
HashtableDebugAccess	extern/parallel_hashmap/phmap.h	/^struct HashtableDebugAccess<Set, typename std::enable_if<has_member_type_EmbeddedSet<Set>::value/;"	s	namespace:phmap::priv::hashtable_debug_internal
HashtableDebugAccess	extern/parallel_hashmap/phmap.h	/^struct HashtableDebugAccess<Set, typename std::enable_if<has_member_type_raw_hash_set<Set>::valu/;"	s	namespace:phmap::priv::hashtable_debug_internal
HashtablezInfo	extern/parallel_hashmap/phmap.h	/^struct HashtablezInfo $/;"	s	namespace:phmap::priv
HashtablezInfoHandle	extern/parallel_hashmap/phmap.h	/^class HashtablezInfoHandle $/;"	c	namespace:phmap::priv
HashtablezSampler	extern/parallel_hashmap/phmap.h	/^class HashtablezSampler $/;"	c	namespace:phmap::priv
Helper	extern/parallel_hashmap/phmap_base.h	/^    using Helper = AssertHashEnabledHelper;$/;"	t	function:phmap::type_traits_internal::AssertHashEnabled	typeref:typename:AssertHashEnabledHelper
HiCR	include/backends/ascend/L0/computeResource.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L0/device.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L0/executionState.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L0/executionUnit.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L0/localMemorySlot.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L0/memorySpace.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L0/processingUnit.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L1/communicationManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L1/computeManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L1/memoryManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/L1/topologyManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/common.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/computationKernel.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/core.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/kernel.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/ascend/memoryKernel.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/L0/computeResource.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/L0/device.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/L0/executionState.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/L0/executionUnit.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/L0/globalMemorySlot.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/L0/memorySpace.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/L1/computeManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/cache.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/coroutine.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/hwloc/L0/computeResource.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/hwloc/L0/device.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/hwloc/L0/memorySpace.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/hwloc/L1/memoryManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/hwloc/L1/topologyManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/pthreads/L0/processingUnit.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/pthreads/L1/communicationManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/host/pthreads/L1/computeManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/lpf/L0/globalMemorySlot.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/lpf/L0/localMemorySlot.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/lpf/L1/communicationManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/lpf/L1/memoryManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/mpi/L0/globalMemorySlot.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/mpi/L0/instance.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/mpi/L1/communicationManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/mpi/L1/instanceManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/backends/mpi/L1/memoryManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/base.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/circularBuffer.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/fixedSize/base.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/fixedSize/mpsc/consumer.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/fixedSize/mpsc/producer.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/fixedSize/spsc/producer.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/variableSize/base.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/variableSize/spsc/consumer.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/channel/variableSize/spsc/producer.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/machineModel/machineModel.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/runtime/channel/hicr/consumerChannel.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/runtime/channel/hicr/producerChannel.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/runtime/coordinator.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/runtime/instance.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/runtime/runtime.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/runtime/worker.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/tasking/common.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/tasking/dispatcher.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/tasking/eventMap.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/tasking/task.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/tasking/tasking.hpp	/^namespace HiCR$/;"	n
HiCR	include/frontends/tasking/worker.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/computeResource.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/device.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/executionState.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/executionUnit.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/globalMemorySlot.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/instance.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/localMemorySlot.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/memorySlot.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/memorySpace.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/processingUnit.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L0/topology.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L1/communicationManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L1/computeManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L1/instanceManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L1/memoryManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/L1/topologyManager.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/common/concurrentQueue.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/common/parallelHashMap.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/common/parallelHashSet.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/definitions.hpp	/^namespace HiCR$/;"	n
HiCR	include/hicr/exceptions.hpp	/^namespace HiCR$/;"	n
HiCR	meson.build	/^project('HiCR', [ 'cpp', 'c'],$/;"	P
HiCR (HiSilicon Common Runtime)	README.md	/^# HiCR (HiSilicon Common Runtime)$/;"	c
HiCR Basics	docs/source/using/basics.rst	/^HiCR Basics$/;"	c
HiCR Channel Examples	examples/channels/README.md	/^HiCR Channel Examples$/;"	c
HiCR Channel Examples	examples/channels/fixedSize/mpsc/README.md	/^HiCR Channel Examples$/;"	c
HiCR Kernel Examples	examples/hicr/kernel/README.md	/^HiCR Kernel Examples$/;"	c
HiCR Machine Model	examples/machineModel/README.md	/^HiCR Machine Model$/;"	c
HiCR Memcpy Examples	examples/hicr/memcpy/README.md	/^HiCR Memcpy Examples$/;"	c
HiCR RPC Examples	examples/hicr/topology/README.md	/^HiCR RPC Examples$/;"	c
HiCR RPC Examples	examples/hicr/topologyRPC/README.md	/^HiCR RPC Examples$/;"	c
HiCRBackendDependencies	meson.build	/^HiCRBackendDependencies = [ ]$/;"	V
HiCRTestBuildDependencies	tests/meson.build	/^HiCRTestBuildDependencies = [ hicrBuildDep, hicrTestDep ]$/;"	V
HiSilicon Common Runtime (HiCR) User Manual	docs/source/index.rst	/^HiSilicon Common Runtime (HiCR) User Manual$/;"	c
HighestBitSet	extern/parallel_hashmap/phmap.h	/^    uint32_t HighestBitSet() const {$/;"	f	class:phmap::priv::BitMask	typeref:typename:uint32_t
Host RAM Size (Gb)	examples/machineModel/machineModel.json	/^        "Host RAM Size (Gb)": 1,$/;"	n	object:Instances.0.Topology
Host RAM Size (Gb)	examples/machineModel/machineModel.json	/^        "Host RAM Size (Gb)": 1,$/;"	n	object:Instances.1.Topology
Host RAM Size (Gb)	examples/machineModel/machineModel.json	/^        "Host RAM Size (Gb)": 1,$/;"	n	object:Instances.2.Topology
Host RAM Size (Gb)	examples/runtime/machineModel.json	/^        "Host RAM Size (Gb)": 1,$/;"	n	object:Instances.0.Topology
Host RAM Size (Gb)	examples/runtime/machineModel.json	/^        "Host RAM Size (Gb)": 1,$/;"	n	object:Instances.1.Topology
Host RAM Size (Gb)	examples/runtime/machineModel.json	/^        "Host RAM Size (Gb)": 1,$/;"	n	object:Instances.2.Topology
How to use?	extern/run-clang-format/README.rst	/^How to use?$/;"	s	chapter:=====================
INCLUDE_NLOHMANN_JSON_FWD_HPP_	extern/nlohmann_json/json.hpp	/^    #define INCLUDE_NLOHMANN_JSON_FWD_HPP_$/;"	d
INCLUDE_NLOHMANN_JSON_HPP_	extern/nlohmann_json/json.hpp	/^#define INCLUDE_NLOHMANN_JSON_HPP_$/;"	d
INSTALL	extern/doxygen-awesome-css/Makefile	/^INSTALL = install -m 644$/;"	m
INSTALLDIR	extern/doxygen-awesome-css/Makefile	/^INSTALLDIR = $(DESTDIR)$(PREFIX)\/$(DATADIR)\/$(PROJECT)$/;"	m
ITERATIONS	examples/hicr/memcpy/source/include/telephoneGame.hpp	/^#define ITERATIONS /;"	d
ITERATIONS	examples/tasking/abcTasks/source/include/abcTasks.hpp	/^#define ITERATIONS /;"	d
Inner	extern/parallel_hashmap/phmap.h	/^        Inner() {}$/;"	f	struct:phmap::priv::parallel_hash_set::Inner
Inner	extern/parallel_hashmap/phmap.h	/^        Inner(Params const &p) : set_(p.bucket_cnt, p.hashfn, p.eq, p.alloc)$/;"	f	struct:phmap::priv::parallel_hash_set::Inner
Inner	extern/parallel_hashmap/phmap.h	/^        using Inner             = typename parallel_hash_set::Inner;$/;"	t	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:parallel_hash_set::Inner
Inner	extern/parallel_hashmap/phmap.h	/^        using Inner             = typename parallel_hash_set::Inner;$/;"	t	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:parallel_hash_set::Inner
Inner	extern/parallel_hashmap/phmap.h	/^    struct Inner : public Lockable$/;"	s	class:phmap::priv::parallel_hash_set
InsertReturnType	extern/parallel_hashmap/phmap_base.h	/^struct InsertReturnType $/;"	s	namespace:phmap::priv
InsertSlot	extern/parallel_hashmap/phmap.h	/^    struct InsertSlot $/;"	s	class:phmap::priv::raw_hash_set
InsertSlotWithHash	extern/parallel_hashmap/phmap.h	/^    struct InsertSlotWithHash $/;"	s	class:phmap::priv::raw_hash_set
Installation	docs/source/using/install.rst	/^Installation$/;"	c
Installation	extern/doxygen-awesome-css/README.md	/^## Installation$/;"	s	chapter:Doxygen Awesome
Installation	extern/doxygen-awesome-css/docs/extensions.md	/^### Installation$/;"	S	section:Extensions""Dark Mode Toggle {#extension-dark-mode-toggle}
Installation	extern/doxygen-awesome-css/docs/extensions.md	/^### Installation$/;"	S	section:Extensions""Fragment Copy Button {#extension-copy-button}
Installation	extern/doxygen-awesome-css/docs/extensions.md	/^### Installation$/;"	S	section:Extensions""Interactive TOC {#extension-toc}
Installation	extern/doxygen-awesome-css/docs/extensions.md	/^### Installation$/;"	S	section:Extensions""Paragraph Linking {#extension-para}
Installation	extern/doxygen-awesome-css/docs/extensions.md	/^### Installation$/;"	S	section:Extensions""Tabs {#extension-tabs}
Instance	include/backends/mpi/L0/instance.hpp	/^  Instance(const int rank) : HiCR::L0::Instance((instanceId_t)rank), _rank(rank)$/;"	f	class:HiCR::backend::mpi::L0::Instance
Instance	include/backends/mpi/L0/instance.hpp	/^class Instance final : public HiCR::L0::Instance$/;"	c	namespace:HiCR::backend::mpi::L0
Instance	include/frontends/runtime/instance.hpp	/^  Instance($/;"	f	class:HiCR::runtime::Instance
Instance	include/frontends/runtime/instance.hpp	/^class Instance$/;"	c	namespace:HiCR::runtime
Instance	include/hicr/L0/instance.hpp	/^  __USED__ Instance(instanceId_t id) : _id(id){};$/;"	f	class:HiCR::L0::Instance	typeref:typename:__USED__
Instance	include/hicr/L0/instance.hpp	/^class Instance$/;"	c	namespace:HiCR::L0
InstanceManager	include/backends/mpi/L1/instanceManager.hpp	/^  InstanceManager(MPI_Comm comm) : HiCR::L1::InstanceManager(), _comm(comm)$/;"	f	class:HiCR::backend::mpi::L1::InstanceManager
InstanceManager	include/backends/mpi/L1/instanceManager.hpp	/^class InstanceManager final : public HiCR::L1::InstanceManager$/;"	c	namespace:HiCR::backend::mpi::L1
InstanceManager	include/hicr/L1/instanceManager.hpp	/^class InstanceManager$/;"	c	namespace:HiCR::L1
Instances	examples/machineModel/machineModel.json	/^  "Instances":$/;"	a
Instances	examples/runtime/machineModel.json	/^  "Instances":$/;"	a
IntToSize	extern/parallel_hashmap/phmap_base.h	/^using IntToSize = size_t;$/;"	t	namespace:phmap::priv::internal_layout	typeref:typename:size_t
Interactive TOC {#extension-toc}	extern/doxygen-awesome-css/docs/extensions.md	/^## Interactive TOC {#extension-toc}$/;"	s	chapter:Extensions
InternalLayout	extern/parallel_hashmap/btree.h	/^        constexpr static layout_type InternalLayout() {$/;"	f	class:phmap::priv::btree_node	typeref:typename:layout_type
InternalSize	extern/parallel_hashmap/btree.h	/^        constexpr static size_type InternalSize() {$/;"	f	class:phmap::priv::btree_node	typeref:typename:size_type
Introduction	extern/run-clang-format/README.rst	/^Introduction$/;"	s	chapter:=====================
Invoke	extern/parallel_hashmap/phmap_base.h	/^    Invoke(MemFun&& mem_fun, Obj&& obj, Args&&... args) {$/;"	f	struct:phmap::base_internal::MemFunAndRef	typeref:typename:decltype((std::declval<Obj> ().* std::declval<MemFun> ())(std::declval<Args> ()...))
Invoke	extern/parallel_hashmap/phmap_base.h	/^    Invoke(MemFun&& mem_fun, Ptr&& ptr, Args&&... args) {$/;"	f	struct:phmap::base_internal::MemFunAndPtr	typeref:typename:decltype(((* std::declval<Ptr> ()).* std::declval<MemFun> ())(std::declval<Args> ()...))
Invoke	extern/parallel_hashmap/phmap_base.h	/^    static decltype((*std::declval<Ptr>()).*std::declval<DataMem>()) Invoke($/;"	f	struct:phmap::base_internal::DataMemAndPtr	typeref:typename:decltype((* std::declval<Ptr> ()).* std::declval<DataMem> ())
Invoke	extern/parallel_hashmap/phmap_base.h	/^    static decltype(std::declval<F>()(std::declval<Args>()...)) Invoke($/;"	f	struct:phmap::base_internal::Callable	typeref:typename:decltype(std::declval<F> ()(std::declval<Args> ()...))
Invoke	extern/parallel_hashmap/phmap_base.h	/^    static decltype(std::declval<Ref>().*std::declval<DataMem>()) Invoke($/;"	f	struct:phmap::base_internal::DataMemAndRef	typeref:typename:decltype(std::declval<Ref> ().* std::declval<DataMem> ())
Invoke	extern/parallel_hashmap/phmap_base.h	/^InvokeT<F, Args...> Invoke(F&& f, Args&&... args) {$/;"	f	namespace:phmap::base_internal	typeref:typename:InvokeT<F,Args...>
InvokeT	extern/parallel_hashmap/phmap_base.h	/^using InvokeT = decltype(Invoker<F, Args...>::type::Invoke($/;"	t	namespace:phmap::base_internal
Invoker	extern/parallel_hashmap/phmap_base.h	/^struct Invoker $/;"	s	namespace:phmap::base_internal
IsConvertible	extern/parallel_hashmap/phmap_base.h	/^struct IsConvertible : IsConvertibleHelper<From, To>::type {};$/;"	s	namespace:phmap::span_internal
IsConvertibleHelper	extern/parallel_hashmap/phmap_base.h	/^struct IsConvertibleHelper {$/;"	s	namespace:phmap::span_internal
IsCopyAssignableImpl	extern/parallel_hashmap/phmap_base.h	/^using IsCopyAssignableImpl =$/;"	t	namespace:phmap::type_traits_internal
IsDecomposable	extern/parallel_hashmap/phmap.h	/^    using IsDecomposable = IsDecomposable<void, PolicyTraits, Hash, Eq, Ts...>;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:IsDecomposable<void,PolicyTraits,Hash,Eq,Ts...>
IsDecomposable	extern/parallel_hashmap/phmap.h	/^    using IsDecomposable = IsDecomposable<void, PolicyTraits, Hash, Eq, Ts...>;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:IsDecomposable<void,PolicyTraits,Hash,Eq,Ts...>
IsDecomposable	extern/parallel_hashmap/phmap.h	/^struct IsDecomposable : std::false_type {};$/;"	s	namespace:phmap::priv
IsDecomposable	extern/parallel_hashmap/phmap.h	/^struct IsDecomposable<$/;"	s	namespace:phmap::priv
IsDeleted	extern/parallel_hashmap/phmap.h	/^inline bool IsDeleted(ctrl_t c)        { return c == kDeleted; }$/;"	f	namespace:phmap::priv	typeref:typename:bool
IsEmpty	extern/parallel_hashmap/phmap.h	/^inline bool IsEmpty(ctrl_t c)          { return c == kEmpty; }$/;"	f	namespace:phmap::priv	typeref:typename:bool
IsEmptyOrDeleted	extern/parallel_hashmap/phmap.h	/^inline bool IsEmptyOrDeleted(ctrl_t c) { return c < kSentinel; }$/;"	f	namespace:phmap::priv	typeref:typename:bool
IsEq	extern/parallel_hashmap/btree.h	/^        bool IsEq() const { return match == MatchKind::kEq; }$/;"	f	struct:phmap::priv::SearchResult	typeref:typename:bool
IsEq	extern/parallel_hashmap/btree.h	/^        static constexpr bool IsEq() { return false; }$/;"	f	struct:phmap::priv::SearchResult	typeref:typename:bool
IsFinal	extern/parallel_hashmap/phmap_base.h	/^constexpr bool IsFinal() {$/;"	f	namespace:phmap::priv::internal_compressed_tuple	typeref:typename:bool
IsFull	extern/parallel_hashmap/phmap.h	/^inline bool IsFull(ctrl_t c)           { return c >= static_cast<ctrl_t>(0); }$/;"	f	namespace:phmap::priv	typeref:typename:bool
IsHashable	extern/parallel_hashmap/phmap_base.h	/^    struct IsHashable : std::true_type {};$/;"	s	namespace:phmap::type_traits_internal
IsLayoutCompatible	extern/parallel_hashmap/phmap_base.h	/^struct IsLayoutCompatible $/;"	s	namespace:phmap::priv::memory_internal
IsLegalElementType	extern/parallel_hashmap/phmap_base.h	/^using IsLegalElementType = std::integral_constant<$/;"	t	namespace:phmap::priv::internal_layout
IsLittleEndian	extern/parallel_hashmap/phmap_bits.h	/^    inline constexpr bool IsLittleEndian() { return true; }$/;"	f	namespace:phmap::big_endian	typeref:typename:bool
IsLittleEndian	extern/parallel_hashmap/phmap_bits.h	/^    inline constexpr bool IsLittleEndian() { return true; }$/;"	f	namespace:phmap::little_endian	typeref:typename:bool
IsMoveAssignableImpl	extern/parallel_hashmap/phmap_base.h	/^using IsMoveAssignableImpl = decltype(std::declval<T&>() = std::declval<T&&>());$/;"	t	namespace:phmap::type_traits_internal
IsNoThrowSwappable	extern/parallel_hashmap/phmap.h	/^constexpr bool IsNoThrowSwappable() {$/;"	f	namespace:phmap::priv	typeref:typename:bool
IsNothrowSwappable	extern/parallel_hashmap/btree.h	/^        struct IsNothrowSwappable$/;"	s	namespace:phmap::swap_internal
IsNothrowSwappableImpl	extern/parallel_hashmap/btree.h	/^            using IsNothrowSwappableImpl = typename std::enable_if<IsNoexcept::value>::type;$/;"	t	namespace:phmap::swap_internal	typeref:typename:std::enable_if<IsNoexcept::value>::type
IsPow2	extern/parallel_hashmap/phmap_base.h	/^constexpr bool IsPow2(size_t n) { return !(n & (n - 1)); }$/;"	f	namespace:phmap::priv::internal_layout::adl_barrier	typeref:typename:bool
IsRandomAccess	extern/parallel_hashmap/phmap.h	/^    using IsRandomAccess = std::is_same<typename std::iterator_traits<It>::iterator_category,$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:std::is_same<typename std::iterator_traits<It>::iterator_category,std::random_access_iterator_tag>
IsSwappable	extern/parallel_hashmap/btree.h	/^        struct IsSwappable$/;"	s	namespace:phmap::swap_internal
IsSwappableImpl	extern/parallel_hashmap/btree.h	/^        using IsSwappableImpl = decltype(swap(std::declval<T&>(), std::declval<T&>()));$/;"	t	namespace:phmap::swap_internal
IsTransparent	extern/parallel_hashmap/phmap_base.h	/^struct IsTransparent : std::false_type {};$/;"	s	namespace:phmap::priv
IsTransparent	extern/parallel_hashmap/phmap_base.h	/^struct IsTransparent<T, phmap::void_t<typename T::is_transparent>>$/;"	s	namespace:phmap::priv
IsTriviallyCopyConstructibleObject	extern/parallel_hashmap/btree.h	/^        struct IsTriviallyCopyConstructibleObject$/;"	s	namespace:phmap::type_traits_internal
IsTriviallyCopyable	extern/parallel_hashmap/phmap_dump.h	/^    template<typename T> struct IsTriviallyCopyable : public std::integral_constant<bool, __has_/;"	s	namespace:phmap::type_traits_internal
IsTriviallyCopyable	extern/parallel_hashmap/phmap_dump.h	/^struct IsTriviallyCopyable<std::pair<T1, T2>> {$/;"	s	namespace:phmap::type_traits_internal
IsTriviallyMoveAssignableReference	extern/parallel_hashmap/btree.h	/^        struct IsTriviallyMoveAssignableReference : std::false_type {};$/;"	s	namespace:phmap::type_traits_internal
IsTriviallyMoveAssignableReference	extern/parallel_hashmap/btree.h	/^        struct IsTriviallyMoveAssignableReference<T&&>$/;"	s	namespace:phmap::type_traits_internal
IsTriviallyMoveAssignableReference	extern/parallel_hashmap/btree.h	/^        struct IsTriviallyMoveAssignableReference<T&>$/;"	s	namespace:phmap::type_traits_internal
IsTriviallyMoveConstructibleObject	extern/parallel_hashmap/btree.h	/^        struct IsTriviallyMoveConstructibleObject$/;"	s	namespace:phmap::type_traits_internal
IsValidCapacity	extern/parallel_hashmap/phmap.h	/^inline bool IsValidCapacity(size_t n) { return ((n + 1) & n) == 0 && n > 0; }$/;"	f	namespace:phmap::priv	typeref:typename:bool
Iterate	extern/parallel_hashmap/phmap.h	/^    int64_t Iterate(const std::function<void(const HashtablezInfo& stack)>& ) { return 0; }$/;"	f	class:phmap::priv::HashtablezSampler	typeref:typename:int64_t
JSON_ASSERT	extern/nlohmann_json/json.hpp	/^    #define JSON_ASSERT(/;"	d
JSON_BINARY_READER_MAKE_BJD_OPTIMIZED_TYPE_MARKERS_	extern/nlohmann_json/json.hpp	/^#define JSON_BINARY_READER_MAKE_BJD_OPTIMIZED_TYPE_MARKERS_ /;"	d
JSON_BINARY_READER_MAKE_BJD_TYPES_MAP_	extern/nlohmann_json/json.hpp	/^#define JSON_BINARY_READER_MAKE_BJD_TYPES_MAP_ /;"	d
JSON_CATCH	extern/nlohmann_json/json.hpp	/^    #define JSON_CATCH /;"	d
JSON_CATCH	extern/nlohmann_json/json.hpp	/^    #define JSON_CATCH(/;"	d
JSON_DIAGNOSTICS	extern/nlohmann_json/json.hpp	/^    #define JSON_DIAGNOSTICS /;"	d
JSON_DISABLE_ENUM_SERIALIZATION	extern/nlohmann_json/json.hpp	/^    #define JSON_DISABLE_ENUM_SERIALIZATION /;"	d
JSON_EXPLICIT	extern/nlohmann_json/json.hpp	/^    #define JSON_EXPLICIT$/;"	d
JSON_HAS_CPP_11	extern/nlohmann_json/json.hpp	/^    #define JSON_HAS_CPP_11$/;"	d
JSON_HAS_CPP_14	extern/nlohmann_json/json.hpp	/^        #define JSON_HAS_CPP_14$/;"	d
JSON_HAS_CPP_17	extern/nlohmann_json/json.hpp	/^        #define JSON_HAS_CPP_17$/;"	d
JSON_HAS_CPP_20	extern/nlohmann_json/json.hpp	/^        #define JSON_HAS_CPP_20$/;"	d
JSON_HAS_EXPERIMENTAL_FILESYSTEM	extern/nlohmann_json/json.hpp	/^    #define JSON_HAS_EXPERIMENTAL_FILESYSTEM /;"	d
JSON_HAS_FILESYSTEM	extern/nlohmann_json/json.hpp	/^            #define JSON_HAS_FILESYSTEM /;"	d
JSON_HAS_FILESYSTEM	extern/nlohmann_json/json.hpp	/^    #define JSON_HAS_FILESYSTEM /;"	d
JSON_HAS_RANGES	extern/nlohmann_json/json.hpp	/^        #define JSON_HAS_RANGES /;"	d
JSON_HAS_THREE_WAY_COMPARISON	extern/nlohmann_json/json.hpp	/^        #define JSON_HAS_THREE_WAY_COMPARISON /;"	d
JSON_HEDLEY_ALWAYS_INLINE	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_ALWAYS_INLINE /;"	d
JSON_HEDLEY_ARM_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_ARM_VERSION /;"	d
JSON_HEDLEY_ARM_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_ARM_VERSION_CHECK(/;"	d
JSON_HEDLEY_ARRAY_PARAM	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_ARRAY_PARAM(/;"	d
JSON_HEDLEY_ASSUME	extern/nlohmann_json/json.hpp	/^        #define JSON_HEDLEY_ASSUME(/;"	d
JSON_HEDLEY_ASSUME	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_ASSUME(/;"	d
JSON_HEDLEY_BEGIN_C_DECLS	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_BEGIN_C_DECLS /;"	d
JSON_HEDLEY_CLANG_HAS_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_BUILTIN	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_BUILTIN(/;"	d
JSON_HEDLEY_CLANG_HAS_CPP_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_DECLSPEC_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_EXTENSION	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_EXTENSION(/;"	d
JSON_HEDLEY_CLANG_HAS_FEATURE	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_FEATURE(/;"	d
JSON_HEDLEY_CLANG_HAS_WARNING	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_WARNING(/;"	d
JSON_HEDLEY_COMPCERT_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_COMPCERT_VERSION /;"	d
JSON_HEDLEY_COMPCERT_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_COMPCERT_VERSION_CHECK(/;"	d
JSON_HEDLEY_CONCAT	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CONCAT(/;"	d
JSON_HEDLEY_CONCAT3	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CONCAT3(/;"	d
JSON_HEDLEY_CONCAT3_EX	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CONCAT3_EX(/;"	d
JSON_HEDLEY_CONCAT_EX	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_CONCAT_EX(/;"	d
JSON_HEDLEY_CONST	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_CONST /;"	d
JSON_HEDLEY_CONSTEXPR	extern/nlohmann_json/json.hpp	/^        #define JSON_HEDLEY_CONSTEXPR /;"	d
JSON_HEDLEY_CONSTEXPR	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_CONSTEXPR$/;"	d
JSON_HEDLEY_CONST_CAST	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_CONST_CAST(/;"	d
JSON_HEDLEY_CPP_CAST	extern/nlohmann_json/json.hpp	/^#    define JSON_HEDLEY_CPP_CAST(/;"	d
JSON_HEDLEY_CRAY_VERSION	extern/nlohmann_json/json.hpp	/^        #define JSON_HEDLEY_CRAY_VERSION /;"	d
JSON_HEDLEY_CRAY_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_CRAY_VERSION_CHECK(/;"	d
JSON_HEDLEY_C_DECL	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_C_DECL /;"	d
JSON_HEDLEY_DEPRECATED	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DEPRECATED(/;"	d
JSON_HEDLEY_DEPRECATED_FOR	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DEPRECATED_FOR(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/nlohmann_json/json.hpp	/^#        define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION /;"	d
JSON_HEDLEY_DIAGNOSTIC_POP	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_POP /;"	d
JSON_HEDLEY_DIAGNOSTIC_PUSH	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_PUSH /;"	d
JSON_HEDLEY_DMC_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DMC_VERSION /;"	d
JSON_HEDLEY_DMC_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_DMC_VERSION_CHECK(/;"	d
JSON_HEDLEY_EMPTY_BASES	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_EMPTY_BASES /;"	d
JSON_HEDLEY_EMSCRIPTEN_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_EMSCRIPTEN_VERSION /;"	d
JSON_HEDLEY_EMSCRIPTEN_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_EMSCRIPTEN_VERSION_CHECK(/;"	d
JSON_HEDLEY_END_C_DECLS	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_END_C_DECLS /;"	d
JSON_HEDLEY_FALL_THROUGH	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_FALL_THROUGH /;"	d
JSON_HEDLEY_FLAGS	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_FLAGS /;"	d
JSON_HEDLEY_FLAGS_CAST	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_FLAGS_CAST(/;"	d
JSON_HEDLEY_GCC_HAS_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_BUILTIN	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_BUILTIN(/;"	d
JSON_HEDLEY_GCC_HAS_CPP_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_DECLSPEC_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_EXTENSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_EXTENSION(/;"	d
JSON_HEDLEY_GCC_HAS_FEATURE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_FEATURE(/;"	d
JSON_HEDLEY_GCC_HAS_WARNING	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_WARNING(/;"	d
JSON_HEDLEY_GCC_NOT_CLANG_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_NOT_CLANG_VERSION_CHECK(/;"	d
JSON_HEDLEY_GCC_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_VERSION /;"	d
JSON_HEDLEY_GCC_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GCC_VERSION_CHECK(/;"	d
JSON_HEDLEY_GNUC_HAS_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_BUILTIN	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_BUILTIN(/;"	d
JSON_HEDLEY_GNUC_HAS_CPP_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_DECLSPEC_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_EXTENSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_EXTENSION(/;"	d
JSON_HEDLEY_GNUC_HAS_FEATURE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_FEATURE(/;"	d
JSON_HEDLEY_GNUC_HAS_WARNING	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_WARNING(/;"	d
JSON_HEDLEY_GNUC_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GNUC_VERSION /;"	d
JSON_HEDLEY_GNUC_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_GNUC_VERSION_CHECK(/;"	d
JSON_HEDLEY_HAS_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_BUILTIN	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_HAS_BUILTIN(/;"	d
JSON_HEDLEY_HAS_CPP_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_CPP_ATTRIBUTE_NS	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_HAS_CPP_ATTRIBUTE_NS(/;"	d
JSON_HEDLEY_HAS_DECLSPEC_ATTRIBUTE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_EXTENSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_HAS_EXTENSION(/;"	d
JSON_HEDLEY_HAS_FEATURE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_HAS_FEATURE(/;"	d
JSON_HEDLEY_HAS_WARNING	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_HAS_WARNING(/;"	d
JSON_HEDLEY_IAR_VERSION	extern/nlohmann_json/json.hpp	/^        #define JSON_HEDLEY_IAR_VERSION /;"	d
JSON_HEDLEY_IAR_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_IAR_VERSION_CHECK(/;"	d
JSON_HEDLEY_IBM_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_IBM_VERSION /;"	d
JSON_HEDLEY_IBM_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_IBM_VERSION_CHECK(/;"	d
JSON_HEDLEY_IMPORT	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_IMPORT /;"	d
JSON_HEDLEY_INLINE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_INLINE /;"	d
JSON_HEDLEY_INTEL_CL_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_INTEL_CL_VERSION /;"	d
JSON_HEDLEY_INTEL_CL_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_INTEL_CL_VERSION_CHECK(/;"	d
JSON_HEDLEY_INTEL_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_INTEL_VERSION /;"	d
JSON_HEDLEY_INTEL_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_INTEL_VERSION_CHECK(/;"	d
JSON_HEDLEY_IS_CONSTANT	extern/nlohmann_json/json.hpp	/^        #define JSON_HEDLEY_IS_CONSTANT(/;"	d
JSON_HEDLEY_IS_CONSTANT	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_IS_CONSTANT(/;"	d
JSON_HEDLEY_IS_CONSTEXPR_	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_IS_CONSTEXPR_(/;"	d
JSON_HEDLEY_LIKELY	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_LIKELY(/;"	d
JSON_HEDLEY_MALLOC	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_MALLOC /;"	d
JSON_HEDLEY_MCST_LCC_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_MCST_LCC_VERSION /;"	d
JSON_HEDLEY_MCST_LCC_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_MCST_LCC_VERSION_CHECK(/;"	d
JSON_HEDLEY_MESSAGE	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_MESSAGE(/;"	d
JSON_HEDLEY_MSVC_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_MSVC_VERSION /;"	d
JSON_HEDLEY_MSVC_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_MSVC_VERSION_CHECK(/;"	d
JSON_HEDLEY_NEVER_INLINE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_NEVER_INLINE /;"	d
JSON_HEDLEY_NON_NULL	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_NON_NULL(/;"	d
JSON_HEDLEY_NO_ESCAPE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_NO_ESCAPE /;"	d
JSON_HEDLEY_NO_RETURN	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_NO_RETURN /;"	d
JSON_HEDLEY_NO_THROW	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_NO_THROW /;"	d
JSON_HEDLEY_NULL	extern/nlohmann_json/json.hpp	/^        #define JSON_HEDLEY_NULL /;"	d
JSON_HEDLEY_PELLES_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_PELLES_VERSION /;"	d
JSON_HEDLEY_PELLES_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_PELLES_VERSION_CHECK(/;"	d
JSON_HEDLEY_PGI_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_PGI_VERSION /;"	d
JSON_HEDLEY_PGI_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_PGI_VERSION_CHECK(/;"	d
JSON_HEDLEY_PRAGMA	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_PRAGMA(/;"	d
JSON_HEDLEY_PREDICT	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_PREDICT(/;"	d
JSON_HEDLEY_PREDICT_FALSE	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_PREDICT_FALSE(/;"	d
JSON_HEDLEY_PREDICT_TRUE	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_PREDICT_TRUE(/;"	d
JSON_HEDLEY_PRINTF_FORMAT	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_PRINTF_FORMAT(/;"	d
JSON_HEDLEY_PRIVATE	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_PRIVATE$/;"	d
JSON_HEDLEY_PUBLIC	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_PUBLIC /;"	d
JSON_HEDLEY_PURE	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_PURE /;"	d
JSON_HEDLEY_REINTERPRET_CAST	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_REINTERPRET_CAST(/;"	d
JSON_HEDLEY_REQUIRE	extern/nlohmann_json/json.hpp	/^#    define JSON_HEDLEY_REQUIRE(/;"	d
JSON_HEDLEY_REQUIRE_CONSTEXPR	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_REQUIRE_CONSTEXPR(/;"	d
JSON_HEDLEY_REQUIRE_MSG	extern/nlohmann_json/json.hpp	/^#    define JSON_HEDLEY_REQUIRE_MSG(/;"	d
JSON_HEDLEY_RESTRICT	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_RESTRICT /;"	d
JSON_HEDLEY_RETURNS_NON_NULL	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_RETURNS_NON_NULL /;"	d
JSON_HEDLEY_SENTINEL	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_SENTINEL(/;"	d
JSON_HEDLEY_STATIC_ASSERT	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_STATIC_ASSERT(/;"	d
JSON_HEDLEY_STATIC_CAST	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_STATIC_CAST(/;"	d
JSON_HEDLEY_STRINGIFY	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_STRINGIFY(/;"	d
JSON_HEDLEY_STRINGIFY_EX	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_STRINGIFY_EX(/;"	d
JSON_HEDLEY_SUNPRO_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_SUNPRO_VERSION /;"	d
JSON_HEDLEY_SUNPRO_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_SUNPRO_VERSION_CHECK(/;"	d
JSON_HEDLEY_TINYC_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TINYC_VERSION /;"	d
JSON_HEDLEY_TINYC_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TINYC_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_ARMCL_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_ARMCL_VERSION /;"	d
JSON_HEDLEY_TI_ARMCL_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_ARMCL_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL2000_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CL2000_VERSION /;"	d
JSON_HEDLEY_TI_CL2000_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CL2000_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL430_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CL430_VERSION /;"	d
JSON_HEDLEY_TI_CL430_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CL430_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL6X_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CL6X_VERSION /;"	d
JSON_HEDLEY_TI_CL6X_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CL6X_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL7X_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CL7X_VERSION /;"	d
JSON_HEDLEY_TI_CL7X_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CL7X_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CLPRU_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CLPRU_VERSION /;"	d
JSON_HEDLEY_TI_CLPRU_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_CLPRU_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_VERSION	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_VERSION /;"	d
JSON_HEDLEY_TI_VERSION_CHECK	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_TI_VERSION_CHECK(/;"	d
JSON_HEDLEY_UNAVAILABLE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_UNAVAILABLE(/;"	d
JSON_HEDLEY_UNLIKELY	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_UNLIKELY(/;"	d
JSON_HEDLEY_UNPREDICTABLE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_UNPREDICTABLE(/;"	d
JSON_HEDLEY_UNREACHABLE	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_UNREACHABLE(/;"	d
JSON_HEDLEY_UNREACHABLE_RETURN	extern/nlohmann_json/json.hpp	/^        #define JSON_HEDLEY_UNREACHABLE_RETURN(/;"	d
JSON_HEDLEY_VERSION	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_VERSION /;"	d
JSON_HEDLEY_VERSION_DECODE_MAJOR	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_MAJOR(/;"	d
JSON_HEDLEY_VERSION_DECODE_MINOR	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_MINOR(/;"	d
JSON_HEDLEY_VERSION_DECODE_REVISION	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_REVISION(/;"	d
JSON_HEDLEY_VERSION_ENCODE	extern/nlohmann_json/json.hpp	/^#define JSON_HEDLEY_VERSION_ENCODE(/;"	d
JSON_HEDLEY_WARNING	extern/nlohmann_json/json.hpp	/^#  define JSON_HEDLEY_WARNING(/;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT /;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT_MSG	extern/nlohmann_json/json.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT_MSG(/;"	d
JSON_IMPLEMENT_OPERATOR	extern/nlohmann_json/json.hpp	/^#define JSON_IMPLEMENT_OPERATOR(/;"	d
JSON_INLINE_VARIABLE	extern/nlohmann_json/json.hpp	/^    #define JSON_INLINE_VARIABLE /;"	d
JSON_INTERNAL_CATCH	extern/nlohmann_json/json.hpp	/^    #define JSON_INTERNAL_CATCH /;"	d
JSON_INTERNAL_CATCH	extern/nlohmann_json/json.hpp	/^    #define JSON_INTERNAL_CATCH(/;"	d
JSON_NO_UNIQUE_ADDRESS	extern/nlohmann_json/json.hpp	/^    #define JSON_NO_UNIQUE_ADDRESS /;"	d
JSON_PRIVATE_UNLESS_TESTED	extern/nlohmann_json/json.hpp	/^    #define JSON_PRIVATE_UNLESS_TESTED /;"	d
JSON_THROW	extern/nlohmann_json/json.hpp	/^    #define JSON_THROW /;"	d
JSON_THROW	extern/nlohmann_json/json.hpp	/^    #define JSON_THROW(/;"	d
JSON_TRY	extern/nlohmann_json/json.hpp	/^    #define JSON_TRY /;"	d
JSON_USE_GLOBAL_UDLS	extern/nlohmann_json/json.hpp	/^    #define JSON_USE_GLOBAL_UDLS /;"	d
JSON_USE_IMPLICIT_CONVERSIONS	extern/nlohmann_json/json.hpp	/^    #define JSON_USE_IMPLICIT_CONVERSIONS /;"	d
JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON	extern/nlohmann_json/json.hpp	/^    #define JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON /;"	d
Kernel	include/backends/ascend/kernel.hpp	/^  __USED__ inline Kernel(){};$/;"	f	class:HiCR::backend::ascend::Kernel	typeref:typename:__USED__
Kernel	include/backends/ascend/kernel.hpp	/^class Kernel$/;"	c	namespace:HiCR::backend::ascend
KeyArg	extern/parallel_hashmap/phmap_base.h	/^struct KeyArg $/;"	s	namespace:phmap::priv
KeyArg	extern/parallel_hashmap/phmap_base.h	/^struct KeyArg<false> $/;"	s	namespace:phmap::priv
KeyArgImpl	extern/parallel_hashmap/phmap.h	/^    using KeyArgImpl =$/;"	t	class:phmap::priv::parallel_hash_map	typeref:typename:KeyArg<IsTransparent<Eq>::value && IsTransparent<Hash>::value>
KeyArgImpl	extern/parallel_hashmap/phmap.h	/^    using KeyArgImpl =$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:KeyArg<IsTransparent<Eq>::value && IsTransparent<Hash>::value>
KeyArgImpl	extern/parallel_hashmap/phmap.h	/^    using KeyArgImpl =$/;"	t	class:phmap::priv::raw_hash_map	typeref:typename:KeyArg<IsTransparent<Eq>::value && IsTransparent<Hash>::value>
KeyArgImpl	extern/parallel_hashmap/phmap.h	/^    using KeyArgImpl =$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:KeyArg<IsTransparent<Eq>::value && IsTransparent<Hash>::value>
L0	include/backends/ascend/L0/computeResource.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::ascend
L0	include/backends/ascend/L0/device.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::ascend
L0	include/backends/ascend/L0/executionState.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::ascend
L0	include/backends/ascend/L0/executionUnit.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::ascend
L0	include/backends/ascend/L0/localMemorySlot.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::ascend
L0	include/backends/ascend/L0/memorySpace.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::ascend
L0	include/backends/ascend/L0/processingUnit.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::ascend
L0	include/backends/host/L0/computeResource.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host
L0	include/backends/host/L0/device.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host
L0	include/backends/host/L0/executionState.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host
L0	include/backends/host/L0/executionUnit.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host
L0	include/backends/host/L0/globalMemorySlot.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host
L0	include/backends/host/L0/memorySpace.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host
L0	include/backends/host/hwloc/L0/computeResource.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host::hwloc
L0	include/backends/host/hwloc/L0/device.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host::hwloc
L0	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host::hwloc
L0	include/backends/host/hwloc/L0/memorySpace.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host::hwloc
L0	include/backends/host/pthreads/L0/processingUnit.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::host::pthreads
L0	include/backends/lpf/L0/globalMemorySlot.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::lpf
L0	include/backends/lpf/L0/localMemorySlot.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::lpf
L0	include/backends/mpi/L0/globalMemorySlot.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::mpi
L0	include/backends/mpi/L0/instance.hpp	/^namespace L0$/;"	n	namespace:HiCR::backend::mpi
L0	include/hicr/L0/computeResource.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/device.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/executionState.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/executionUnit.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/globalMemorySlot.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/instance.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/localMemorySlot.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/memorySlot.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/memorySpace.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/processingUnit.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	include/hicr/L0/topology.hpp	/^namespace L0$/;"	n	namespace:HiCR
L0	tests/backends/host/pthreads/meson.build	/^subdir('L0')$/;"	S
L1	include/backends/ascend/L1/communicationManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::ascend
L1	include/backends/ascend/L1/computeManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::ascend
L1	include/backends/ascend/L1/memoryManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::ascend
L1	include/backends/ascend/L1/topologyManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::ascend
L1	include/backends/host/L1/computeManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::host
L1	include/backends/host/hwloc/L1/memoryManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::host::hwloc
L1	include/backends/host/hwloc/L1/topologyManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::host::hwloc
L1	include/backends/host/pthreads/L1/communicationManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::host::pthreads
L1	include/backends/host/pthreads/L1/computeManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::host::pthreads
L1	include/backends/lpf/L1/communicationManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::lpf
L1	include/backends/lpf/L1/memoryManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::lpf
L1	include/backends/mpi/L1/communicationManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::mpi
L1	include/backends/mpi/L1/instanceManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::mpi
L1	include/backends/mpi/L1/memoryManager.hpp	/^namespace L1$/;"	n	namespace:HiCR::backend::mpi
L1	include/hicr/L1/communicationManager.hpp	/^namespace L1$/;"	n	namespace:HiCR
L1	include/hicr/L1/computeManager.hpp	/^namespace L1$/;"	n	namespace:HiCR
L1	include/hicr/L1/instanceManager.hpp	/^namespace L1$/;"	n	namespace:HiCR
L1	include/hicr/L1/memoryManager.hpp	/^namespace L1$/;"	n	namespace:HiCR
L1	include/hicr/L1/topologyManager.hpp	/^namespace L1$/;"	n	namespace:HiCR
L1	tests/backends/host/hwloc/meson.build	/^subdir('L1')$/;"	S
LOADING	extern/atomic_queue/atomic_queue.h	/^    enum State : unsigned char { EMPTY, STORING, STORED, LOADING };$/;"	e	enum:atomic_queue::AtomicQueueCommon::State
LPF_MPI_AUTO_INITIALIZE	examples/channels/fixedSize/spsc/source/lpf.cpp	/^const int LPF_MPI_AUTO_INITIALIZE = 0;$/;"	v	typeref:typename:const int
LPF_MPI_AUTO_INITIALIZE	examples/channels/variableSize/spsc/source/lpf.cpp	/^const int LPF_MPI_AUTO_INITIALIZE = 0;$/;"	v	typeref:typename:const int
LPF_MPI_AUTO_INITIALIZE	examples/hicr/memcpy/source/lpf.cpp	/^const int LPF_MPI_AUTO_INITIALIZE = 0;$/;"	v	typeref:typename:const int
LPF_MPI_AUTO_INITIALIZE	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^const int LPF_MPI_AUTO_INITIALIZE = 0;$/;"	v	typeref:typename:const int
Layout	extern/parallel_hashmap/phmap.h	/^    using Layout = phmap::priv::Layout<ctrl_t, slot_type>;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:phmap::priv::Layout<ctrl_t,slot_type>
Layout	extern/parallel_hashmap/phmap_base.h	/^    constexpr explicit Layout(internal_layout::TypeToSize<Ts>... sizes)$/;"	f	class:phmap::priv::Layout
Layout	extern/parallel_hashmap/phmap_base.h	/^class Layout : public internal_layout::LayoutType<sizeof...(Ts), Ts...> $/;"	c	namespace:phmap::priv
LayoutCompatible	extern/parallel_hashmap/phmap_base.h	/^    static constexpr bool LayoutCompatible() {$/;"	f	struct:phmap::priv::memory_internal::IsLayoutCompatible	typeref:typename:bool
LayoutImpl	extern/parallel_hashmap/phmap_base.h	/^    constexpr explicit LayoutImpl(IntToSize<SizeSeq>... sizes)$/;"	f	class:phmap::priv::internal_layout::LayoutImpl
LayoutImpl	extern/parallel_hashmap/phmap_base.h	/^class LayoutImpl<std::tuple<Elements...>, phmap::index_sequence<SizeSeq...>,$/;"	c	namespace:phmap::priv::internal_layout
LayoutType	extern/parallel_hashmap/phmap_base.h	/^using LayoutType = LayoutImpl<$/;"	t	namespace:phmap::priv::internal_layout
LeadingZeros	extern/parallel_hashmap/phmap.h	/^    uint32_t LeadingZeros() const {$/;"	f	class:phmap::priv::BitMask	typeref:typename:uint32_t
LeadingZeros	extern/parallel_hashmap/phmap.h	/^int LeadingZeros(T x) {$/;"	f	namespace:phmap::priv	typeref:typename:int
LeafLayout	extern/parallel_hashmap/btree.h	/^        constexpr static layout_type LeafLayout(const int max_values = kNodeValues) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:layout_type
LeafSize	extern/parallel_hashmap/btree.h	/^        constexpr static size_type LeafSize(const int max_values = kNodeValues) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:size_type
Less	extern/parallel_hashmap/phmap_base.h	/^struct Less$/;"	s	namespace:phmap
LessThanImpl	extern/parallel_hashmap/phmap_base.h	/^bool LessThanImpl(Span<T> a, Span<T> b) {$/;"	f	namespace:phmap::span_internal	typeref:typename:bool
Load16	extern/parallel_hashmap/phmap_bits.h	/^inline uint16_t Load16(const void *p) {$/;"	f	namespace:phmap::big_endian	typeref:typename:uint16_t
Load16	extern/parallel_hashmap/phmap_bits.h	/^inline uint16_t Load16(const void *p) {$/;"	f	namespace:phmap::little_endian	typeref:typename:uint16_t
Load32	extern/parallel_hashmap/phmap_bits.h	/^inline uint32_t Load32(const void *p) {$/;"	f	namespace:phmap::big_endian	typeref:typename:uint32_t
Load32	extern/parallel_hashmap/phmap_bits.h	/^inline uint32_t Load32(const void *p) {$/;"	f	namespace:phmap::little_endian	typeref:typename:uint32_t
Load64	extern/parallel_hashmap/phmap_bits.h	/^inline uint64_t Load64(const void *p) {$/;"	f	namespace:phmap::big_endian	typeref:typename:uint64_t
Load64	extern/parallel_hashmap/phmap_bits.h	/^inline uint64_t Load64(const void *p) {$/;"	f	namespace:phmap::little_endian	typeref:typename:uint64_t
LocalMemorySlot	include/backends/ascend/L0/localMemorySlot.hpp	/^  LocalMemorySlot($/;"	f	class:HiCR::backend::ascend::L0::LocalMemorySlot
LocalMemorySlot	include/backends/ascend/L0/localMemorySlot.hpp	/^class LocalMemorySlot final : public HiCR::L0::LocalMemorySlot$/;"	c	namespace:HiCR::backend::ascend::L0
LocalMemorySlot	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^  LocalMemorySlot($/;"	f	class:HiCR::backend::host::hwloc::L0::LocalMemorySlot
LocalMemorySlot	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^class LocalMemorySlot final : public HiCR::L0::LocalMemorySlot$/;"	c	namespace:HiCR::backend::host::hwloc::L0
LocalMemorySlot	include/backends/lpf/L0/localMemorySlot.hpp	/^  LocalMemorySlot($/;"	f	class:HiCR::backend::lpf::L0::LocalMemorySlot
LocalMemorySlot	include/backends/lpf/L0/localMemorySlot.hpp	/^class LocalMemorySlot final : public HiCR::L0::LocalMemorySlot$/;"	c	namespace:HiCR::backend::lpf::L0
LocalMemorySlot	include/hicr/L0/localMemorySlot.hpp	/^  LocalMemorySlot($/;"	f	class:HiCR::L0::LocalMemorySlot
LocalMemorySlot	include/hicr/L0/localMemorySlot.hpp	/^class LocalMemorySlot : public MemorySlot$/;"	c	namespace:HiCR::L0
Lockable	extern/parallel_hashmap/phmap.h	/^    using Lockable = phmap::LockableImpl<Mtx_>;$/;"	t	class:phmap::priv::parallel_hash_map	typeref:typename:phmap::LockableImpl<Mtx_>
Lockable	extern/parallel_hashmap/phmap.h	/^    using Lockable = phmap::LockableImpl<Mtx_>;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:phmap::LockableImpl<Mtx_>
Lockable2	extern/parallel_hashmap/phmap.h	/^        using Lockable2 = phmap::LockableImpl<Mtx2_>;$/;"	t	function:phmap::priv::parallel_hash_set::swap	typeref:typename:phmap::LockableImpl<Mtx2_>
LockableBaseImpl	extern/parallel_hashmap/phmap_base.h	/^class LockableBaseImpl $/;"	c	namespace:phmap
LockableImpl	extern/parallel_hashmap/phmap_base.h	/^    class  LockableImpl<absl::Mutex> : public AbslMutex$/;"	c	namespace:phmap
LockableImpl	extern/parallel_hashmap/phmap_base.h	/^    class  LockableImpl<boost::shared_mutex> : public boost::shared_mutex$/;"	c	namespace:phmap
LockableImpl	extern/parallel_hashmap/phmap_base.h	/^    class  LockableImpl<boost::upgrade_mutex> : public boost::upgrade_mutex$/;"	c	namespace:phmap
LockableImpl	extern/parallel_hashmap/phmap_base.h	/^    class  LockableImpl<std::shared_mutex> : public std::shared_mutex$/;"	c	namespace:phmap
LockableImpl	extern/parallel_hashmap/phmap_base.h	/^class  LockableImpl<phmap::NullMutex>: public phmap::NullMutex$/;"	c	namespace:phmap
LockableImpl	extern/parallel_hashmap/phmap_base.h	/^class LockableImpl : public Mtx_$/;"	c	namespace:phmap
LogicException	include/hicr/exceptions.hpp	/^  __USED__ LogicException(const char *const message) : logic_error(message) {}$/;"	f	class:HiCR::LogicException	typeref:typename:__USED__
LogicException	include/hicr/exceptions.hpp	/^class LogicException : public std::logic_error$/;"	c	namespace:HiCR
LowerBoundAllocatedByteSize	extern/parallel_hashmap/phmap.h	/^    static size_t LowerBoundAllocatedByteSize(size_t size) {$/;"	f	struct:phmap::priv::hashtable_debug_internal::HashtableDebugAccess	typeref:typename:size_t
LowestBitSet	extern/parallel_hashmap/phmap.h	/^    uint32_t LowestBitSet() const {$/;"	f	class:phmap::priv::BitMask	typeref:typename:uint32_t
M	extern/parallel_hashmap/phmap_base.h	/^  struct alignas(Alignment) M {};$/;"	s	function:phmap::priv::Allocate
M	extern/parallel_hashmap/phmap_base.h	/^  struct alignas(Alignment) M {};$/;"	s	function:phmap::priv::Deallocate
MAX_SIMULTANEOUS_TASKS	examples/tasking/runtime.hpp	/^  #define MAX_SIMULTANEOUS_TASKS /;"	d
MAX_SIMULTANEOUS_WORKERS	examples/tasking/runtime.hpp	/^  #define MAX_SIMULTANEOUS_WORKERS /;"	d
MESSAGES_PER_PRODUCER	examples/channels/fixedSize/mpsc/include/common.hpp	/^#define MESSAGES_PER_PRODUCER /;"	d
MKDIR	extern/doxygen-awesome-css/Makefile	/^MKDIR = mkdir -p$/;"	m
MPSC	include/frontends/channel/fixedSize/mpsc/consumer.hpp	/^namespace MPSC$/;"	n	namespace:HiCR::channel::fixedSize
MPSC	include/frontends/channel/fixedSize/mpsc/producer.hpp	/^namespace MPSC$/;"	n	namespace:HiCR::channel::fixedSize
MachineModel	include/frontends/machineModel/machineModel.hpp	/^  MachineModel(HiCR::L1::InstanceManager &instanceManager, std::vector<HiCR::L1::TopologyManager/;"	f	class:HiCR::MachineModel
MachineModel	include/frontends/machineModel/machineModel.hpp	/^class MachineModel$/;"	c	namespace:HiCR
Make	extern/parallel_hashmap/phmap_base.h	/^    static T Make(Args&&... args) {$/;"	f	struct:phmap::priv::CommonAccess	typeref:typename:T
MakeConstSpan	extern/parallel_hashmap/phmap_base.h	/^Span<const T> MakeConstSpan(T* begin, T* end) noexcept {$/;"	f	namespace:phmap	typeref:typename:Span<const T>
MakeConstSpan	extern/parallel_hashmap/phmap_base.h	/^constexpr Span<const T> MakeConstSpan(T* ptr, size_t size) noexcept {$/;"	f	namespace:phmap	typeref:typename:Span<const T>
MakeConstSpan	extern/parallel_hashmap/phmap_base.h	/^constexpr Span<const T> MakeConstSpan(const T (&array)[N]) noexcept {$/;"	f	namespace:phmap	typeref:typename:Span<const T>
MakeConstSpan	extern/parallel_hashmap/phmap_base.h	/^constexpr auto MakeConstSpan(const C& c) noexcept -> decltype(MakeSpan(c)) {$/;"	f	namespace:phmap	typeref:typename:auto
MakeLayout	extern/parallel_hashmap/phmap.h	/^    static Layout MakeLayout(size_t capacity) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:Layout
MakeSpan	extern/parallel_hashmap/phmap_base.h	/^Span<T> MakeSpan(T* begin, T* end) noexcept {$/;"	f	namespace:phmap	typeref:typename:Span<T>
MakeSpan	extern/parallel_hashmap/phmap_base.h	/^constexpr Span<T> MakeSpan(T (&array)[N]) noexcept {$/;"	f	namespace:phmap	typeref:typename:Span<T>
MakeSpan	extern/parallel_hashmap/phmap_base.h	/^constexpr Span<T> MakeSpan(T* ptr, size_t size) noexcept {$/;"	f	namespace:phmap	typeref:typename:Span<T>
MakeSpan	extern/parallel_hashmap/phmap_base.h	/^constexpr auto MakeSpan(C& c) noexcept  \/\/ NOLINT(runtime\/references)$/;"	f	namespace:phmap	typeref:typename:auto
MakeUniqueResult	extern/parallel_hashmap/phmap_base.h	/^struct MakeUniqueResult {$/;"	s	namespace:phmap::memory_internal
MakeUniqueResult	extern/parallel_hashmap/phmap_base.h	/^struct MakeUniqueResult<T[N]> {$/;"	s	namespace:phmap::memory_internal
MakeUniqueResult	extern/parallel_hashmap/phmap_base.h	/^struct MakeUniqueResult<T[]> {$/;"	s	namespace:phmap::memory_internal
MappedConstReference	extern/parallel_hashmap/phmap.h	/^    using MappedConstReference = decltype(P::value($/;"	t	class:phmap::priv::parallel_hash_map
MappedConstReference	extern/parallel_hashmap/phmap.h	/^    using MappedConstReference = decltype(P::value($/;"	t	class:phmap::priv::raw_hash_map
MappedReference	extern/parallel_hashmap/phmap.h	/^    using MappedReference = decltype(P::value($/;"	t	class:phmap::priv::parallel_hash_map
MappedReference	extern/parallel_hashmap/phmap.h	/^    using MappedReference = decltype(P::value($/;"	t	class:phmap::priv::raw_hash_map
Match	extern/parallel_hashmap/phmap.h	/^    BitMask<uint32_t, kWidth> Match(h2_t hash) const {$/;"	f	struct:phmap::priv::GroupSse2Impl	typeref:typename:BitMask<uint32_t,kWidth>
Match	extern/parallel_hashmap/phmap.h	/^    BitMask<uint64_t, kWidth, 3> Match(h2_t hash) const {$/;"	f	struct:phmap::priv::GroupPortableImpl	typeref:typename:BitMask<uint64_t,kWidth,3>
MatchEmpty	extern/parallel_hashmap/phmap.h	/^    BitMask<uint32_t, kWidth> MatchEmpty() const {$/;"	f	struct:phmap::priv::GroupSse2Impl	typeref:typename:BitMask<uint32_t,kWidth>
MatchEmpty	extern/parallel_hashmap/phmap.h	/^    BitMask<uint64_t, kWidth, 3> MatchEmpty() const {          \/\/ bit 1 of each byte is 0 for /;"	f	struct:phmap::priv::GroupPortableImpl	typeref:typename:BitMask<uint64_t,kWidth,3>
MatchEmptyOrDeleted	extern/parallel_hashmap/phmap.h	/^    BitMask<uint32_t, kWidth> MatchEmptyOrDeleted() const {$/;"	f	struct:phmap::priv::GroupSse2Impl	typeref:typename:BitMask<uint32_t,kWidth>
MatchEmptyOrDeleted	extern/parallel_hashmap/phmap.h	/^    BitMask<uint64_t, kWidth, 3> MatchEmptyOrDeleted() const { \/\/ lsb of each byte is 0 for em/;"	f	struct:phmap::priv::GroupPortableImpl	typeref:typename:BitMask<uint64_t,kWidth,3>
MatchKind	extern/parallel_hashmap/btree.h	/^    enum class MatchKind : uint8_t { kEq, kNe };$/;"	g	namespace:phmap::priv	typeref:typename:uint8_t
Max	extern/parallel_hashmap/phmap_base.h	/^constexpr size_t Max(size_t a) { return a; }$/;"	f	namespace:phmap::priv::internal_layout::adl_barrier	typeref:typename:size_t
Max	extern/parallel_hashmap/phmap_base.h	/^constexpr size_t Max(size_t a, size_t b, Ts... rest) {$/;"	f	namespace:phmap::priv::internal_layout::adl_barrier	typeref:typename:size_t
MemFunAndPtr	extern/parallel_hashmap/phmap_base.h	/^struct MemFunAndPtr : StrippedAccept<MemFunAndPtr> $/;"	s	namespace:phmap::base_internal
MemFunAndRef	extern/parallel_hashmap/phmap_base.h	/^struct MemFunAndRef : StrippedAccept<MemFunAndRef> $/;"	s	namespace:phmap::base_internal
MemoryKernel	include/backends/ascend/memoryKernel.hpp	/^  MemoryKernel($/;"	f	class:HiCR::backend::ascend::MemoryKernel
MemoryKernel	include/backends/ascend/memoryKernel.hpp	/^class MemoryKernel final : public Kernel$/;"	c	namespace:HiCR::backend::ascend
MemoryManager	include/backends/ascend/L1/memoryManager.hpp	/^  MemoryManager() : HiCR::L1::MemoryManager() {}$/;"	f	class:HiCR::backend::ascend::L1::MemoryManager
MemoryManager	include/backends/ascend/L1/memoryManager.hpp	/^class MemoryManager final : public HiCR::L1::MemoryManager$/;"	c	namespace:HiCR::backend::ascend::L1
MemoryManager	include/backends/host/hwloc/L1/memoryManager.hpp	/^  MemoryManager(const hwloc_topology_t *topology) : HiCR::L1::MemoryManager(), _topology{topolog/;"	f	class:HiCR::backend::host::hwloc::L1::MemoryManager
MemoryManager	include/backends/host/hwloc/L1/memoryManager.hpp	/^class MemoryManager final : public HiCR::L1::MemoryManager$/;"	c	namespace:HiCR::backend::host::hwloc::L1
MemoryManager	include/backends/lpf/L1/memoryManager.hpp	/^  MemoryManager(lpf_t lpf) : HiCR::L1::MemoryManager(), _lpf(lpf) {}$/;"	f	class:HiCR::backend::lpf::L1::MemoryManager
MemoryManager	include/backends/lpf/L1/memoryManager.hpp	/^class MemoryManager final : public HiCR::L1::MemoryManager$/;"	c	namespace:HiCR::backend::lpf::L1
MemoryManager	include/backends/mpi/L1/memoryManager.hpp	/^  MemoryManager() : HiCR::L1::MemoryManager() {}$/;"	f	class:HiCR::backend::mpi::L1::MemoryManager
MemoryManager	include/backends/mpi/L1/memoryManager.hpp	/^class MemoryManager final : public HiCR::L1::MemoryManager$/;"	c	namespace:HiCR::backend::mpi::L1
MemoryManager	include/hicr/L1/memoryManager.hpp	/^class MemoryManager$/;"	c	namespace:HiCR::L1
MemorySlot	include/hicr/L0/memorySlot.hpp	/^  MemorySlot() {}$/;"	f	class:HiCR::L0::MemorySlot
MemorySlot	include/hicr/L0/memorySlot.hpp	/^class MemorySlot$/;"	c	namespace:HiCR::L0
MemorySpace	include/backends/ascend/L0/memorySpace.hpp	/^  MemorySpace(const nlohmann::json &input) : HiCR::L0::MemorySpace()$/;"	f	class:HiCR::backend::ascend::L0::MemorySpace
MemorySpace	include/backends/ascend/L0/memorySpace.hpp	/^  MemorySpace(const std::weak_ptr<ascend::L0::Device> device, const size_t size) : HiCR::L0::Mem/;"	f	class:HiCR::backend::ascend::L0::MemorySpace
MemorySpace	include/backends/ascend/L0/memorySpace.hpp	/^class MemorySpace final : public HiCR::L0::MemorySpace$/;"	c	namespace:HiCR::backend::ascend::L0
MemorySpace	include/backends/host/L0/memorySpace.hpp	/^  MemorySpace(const size_t size) : HiCR::L0::MemorySpace(size) {}$/;"	f	class:HiCR::backend::host::L0::MemorySpace
MemorySpace	include/backends/host/L0/memorySpace.hpp	/^class MemorySpace : public HiCR::L0::MemorySpace$/;"	c	namespace:HiCR::backend::host::L0
MemorySpace	include/backends/host/hwloc/L0/memorySpace.hpp	/^  MemorySpace(const nlohmann::json &input) : HiCR::backend::host::L0::MemorySpace()$/;"	f	class:HiCR::backend::host::hwloc::L0::MemorySpace
MemorySpace	include/backends/host/hwloc/L0/memorySpace.hpp	/^  MemorySpace(const size_t size, const hwloc_obj_t hwlocObject, const host::hwloc::L0::LocalMemo/;"	f	class:HiCR::backend::host::hwloc::L0::MemorySpace
MemorySpace	include/backends/host/hwloc/L0/memorySpace.hpp	/^class MemorySpace final : public HiCR::backend::host::L0::MemorySpace$/;"	c	namespace:HiCR::backend::host::hwloc::L0
MemorySpace	include/hicr/L0/memorySpace.hpp	/^  MemorySpace(const size_t size) : _size(size){};$/;"	f	class:HiCR::L0::MemorySpace
MemorySpace	include/hicr/L0/memorySpace.hpp	/^class MemorySpace$/;"	c	namespace:HiCR::L0
Min	extern/parallel_hashmap/phmap_base.h	/^constexpr size_t Min(size_t a, size_t b) noexcept { return a < b ? a : b; }$/;"	f	namespace:phmap::span_internal	typeref:typename:size_t
Min	extern/parallel_hashmap/phmap_base.h	/^constexpr size_t Min(size_t a, size_t b) { return b < a ? b : a; }$/;"	f	namespace:phmap::priv::internal_layout::adl_barrier	typeref:typename:size_t
MinimumOverhead	extern/parallel_hashmap/btree.h	/^        constexpr static size_type MinimumOverhead() {$/;"	f	class:phmap::priv::btree_node	typeref:typename:size_type
Motivation	extern/doxygen-awesome-css/README.md	/^## Motivation$/;"	s	chapter:Doxygen Awesome
Move	extern/parallel_hashmap/phmap_base.h	/^    static T Move(Args&&... args) {$/;"	f	struct:phmap::priv::CommonAccess	typeref:typename:T
MyLibrary	extern/doxygen-awesome-css/include/MyLibrary/example.hpp	/^namespace MyLibrary$/;"	n
MyLibrary	extern/doxygen-awesome-css/include/MyLibrary/subclass-example.hpp	/^namespace MyLibrary {$/;"	n
NAT	extern/parallel_hashmap/phmap_base.h	/^    struct NAT {};$/;"	s	struct:phmap::type_traits_internal::AssertHashEnabledHelper
NLOHMANN_BASIC_JSON_TPL	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_BASIC_JSON_TPL /;"	d
NLOHMANN_BASIC_JSON_TPL_DECLARATION	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_BASIC_JSON_TPL_DECLARATION /;"	d
NLOHMANN_CAN_CALL_STD_FUNC_IMPL	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_CAN_CALL_STD_FUNC_IMPL(/;"	d
NLOHMANN_DEFINE_TYPE_INTRUSIVE	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_JSON_ABI_TAGS	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_ABI_TAGS /;"	d
NLOHMANN_JSON_ABI_TAGS_CONCAT	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_ABI_TAGS_CONCAT(/;"	d
NLOHMANN_JSON_ABI_TAGS_CONCAT_EX	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_ABI_TAGS_CONCAT_EX(/;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS	extern/nlohmann_json/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS /;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS	extern/nlohmann_json/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS$/;"	d
NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON	extern/nlohmann_json/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON /;"	d
NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON	extern/nlohmann_json/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON$/;"	d
NLOHMANN_JSON_EXPAND	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_EXPAND(/;"	d
NLOHMANN_JSON_FROM	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_FROM(/;"	d
NLOHMANN_JSON_FROM_WITH_DEFAULT	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_FROM_WITH_DEFAULT(/;"	d
NLOHMANN_JSON_GET_MACRO	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_GET_MACRO(/;"	d
NLOHMANN_JSON_NAMESPACE	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE /;"	d
NLOHMANN_JSON_NAMESPACE_BEGIN	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_BEGIN /;"	d
NLOHMANN_JSON_NAMESPACE_CONCAT	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_CONCAT(/;"	d
NLOHMANN_JSON_NAMESPACE_CONCAT_EX	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_CONCAT_EX(/;"	d
NLOHMANN_JSON_NAMESPACE_END	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_END /;"	d
NLOHMANN_JSON_NAMESPACE_NO_VERSION	extern/nlohmann_json/json.hpp	/^    #define NLOHMANN_JSON_NAMESPACE_NO_VERSION /;"	d
NLOHMANN_JSON_NAMESPACE_VERSION	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION /;"	d
NLOHMANN_JSON_NAMESPACE_VERSION	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION$/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT(/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT_EX	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT_EX(/;"	d
NLOHMANN_JSON_PASTE	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE(/;"	d
NLOHMANN_JSON_PASTE10	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE10(/;"	d
NLOHMANN_JSON_PASTE11	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE11(/;"	d
NLOHMANN_JSON_PASTE12	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE12(/;"	d
NLOHMANN_JSON_PASTE13	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE13(/;"	d
NLOHMANN_JSON_PASTE14	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE14(/;"	d
NLOHMANN_JSON_PASTE15	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE15(/;"	d
NLOHMANN_JSON_PASTE16	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE16(/;"	d
NLOHMANN_JSON_PASTE17	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE17(/;"	d
NLOHMANN_JSON_PASTE18	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE18(/;"	d
NLOHMANN_JSON_PASTE19	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE19(/;"	d
NLOHMANN_JSON_PASTE2	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE2(/;"	d
NLOHMANN_JSON_PASTE20	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE20(/;"	d
NLOHMANN_JSON_PASTE21	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE21(/;"	d
NLOHMANN_JSON_PASTE22	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE22(/;"	d
NLOHMANN_JSON_PASTE23	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE23(/;"	d
NLOHMANN_JSON_PASTE24	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE24(/;"	d
NLOHMANN_JSON_PASTE25	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE25(/;"	d
NLOHMANN_JSON_PASTE26	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE26(/;"	d
NLOHMANN_JSON_PASTE27	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE27(/;"	d
NLOHMANN_JSON_PASTE28	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE28(/;"	d
NLOHMANN_JSON_PASTE29	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE29(/;"	d
NLOHMANN_JSON_PASTE3	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE3(/;"	d
NLOHMANN_JSON_PASTE30	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE30(/;"	d
NLOHMANN_JSON_PASTE31	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE31(/;"	d
NLOHMANN_JSON_PASTE32	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE32(/;"	d
NLOHMANN_JSON_PASTE33	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE33(/;"	d
NLOHMANN_JSON_PASTE34	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE34(/;"	d
NLOHMANN_JSON_PASTE35	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE35(/;"	d
NLOHMANN_JSON_PASTE36	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE36(/;"	d
NLOHMANN_JSON_PASTE37	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE37(/;"	d
NLOHMANN_JSON_PASTE38	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE38(/;"	d
NLOHMANN_JSON_PASTE39	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE39(/;"	d
NLOHMANN_JSON_PASTE4	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE4(/;"	d
NLOHMANN_JSON_PASTE40	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE40(/;"	d
NLOHMANN_JSON_PASTE41	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE41(/;"	d
NLOHMANN_JSON_PASTE42	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE42(/;"	d
NLOHMANN_JSON_PASTE43	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE43(/;"	d
NLOHMANN_JSON_PASTE44	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE44(/;"	d
NLOHMANN_JSON_PASTE45	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE45(/;"	d
NLOHMANN_JSON_PASTE46	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE46(/;"	d
NLOHMANN_JSON_PASTE47	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE47(/;"	d
NLOHMANN_JSON_PASTE48	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE48(/;"	d
NLOHMANN_JSON_PASTE49	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE49(/;"	d
NLOHMANN_JSON_PASTE5	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE5(/;"	d
NLOHMANN_JSON_PASTE50	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE50(/;"	d
NLOHMANN_JSON_PASTE51	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE51(/;"	d
NLOHMANN_JSON_PASTE52	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE52(/;"	d
NLOHMANN_JSON_PASTE53	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE53(/;"	d
NLOHMANN_JSON_PASTE54	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE54(/;"	d
NLOHMANN_JSON_PASTE55	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE55(/;"	d
NLOHMANN_JSON_PASTE56	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE56(/;"	d
NLOHMANN_JSON_PASTE57	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE57(/;"	d
NLOHMANN_JSON_PASTE58	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE58(/;"	d
NLOHMANN_JSON_PASTE59	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE59(/;"	d
NLOHMANN_JSON_PASTE6	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE6(/;"	d
NLOHMANN_JSON_PASTE60	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE60(/;"	d
NLOHMANN_JSON_PASTE61	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE61(/;"	d
NLOHMANN_JSON_PASTE62	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE62(/;"	d
NLOHMANN_JSON_PASTE63	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE63(/;"	d
NLOHMANN_JSON_PASTE64	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE64(/;"	d
NLOHMANN_JSON_PASTE7	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE7(/;"	d
NLOHMANN_JSON_PASTE8	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE8(/;"	d
NLOHMANN_JSON_PASTE9	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_PASTE9(/;"	d
NLOHMANN_JSON_SERIALIZE_ENUM	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_SERIALIZE_ENUM(/;"	d
NLOHMANN_JSON_TO	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_TO(/;"	d
NLOHMANN_JSON_VERSION_MAJOR	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_VERSION_MAJOR /;"	d
NLOHMANN_JSON_VERSION_MINOR	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_VERSION_MINOR /;"	d
NLOHMANN_JSON_VERSION_PATCH	extern/nlohmann_json/json.hpp	/^#define NLOHMANN_JSON_VERSION_PATCH /;"	d
NUMADomainID_t	include/backends/host/L0/device.hpp	/^  typedef int NUMADomainID_t;$/;"	t	class:HiCR::backend::host::L0::Device	typeref:typename:int
NUMADomainID_t	include/backends/host/hwloc/L0/device.hpp	/^  typedef int NUMADomainID_t;$/;"	t	class:HiCR::backend::host::hwloc::L0::Device	typeref:typename:int
NodeHashMapPolicy	extern/parallel_hashmap/phmap.h	/^class NodeHashMapPolicy$/;"	c	namespace:phmap::priv
NodeHashSetPolicy	extern/parallel_hashmap/phmap.h	/^struct NodeHashSetPolicy$/;"	s	namespace:phmap::priv
NodeTargetValues	extern/parallel_hashmap/btree.h	/^        constexpr static size_type NodeTargetValues(const int begin, const int end) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:size_type
NormalizeCapacity	extern/parallel_hashmap/phmap.h	/^inline size_t NormalizeCapacity(size_t n) $/;"	f	namespace:phmap::priv	typeref:typename:size_t
NotAligned	extern/parallel_hashmap/phmap_base.h	/^struct NotAligned {};$/;"	s	namespace:phmap::priv::internal_layout
NotAligned	extern/parallel_hashmap/phmap_base.h	/^struct NotAligned<const Aligned<T, N>> {$/;"	s	namespace:phmap::priv::internal_layout
NullMutex	extern/parallel_hashmap/phmap_base.h	/^    NullMutex() {}$/;"	f	class:phmap::NullMutex
NullMutex	extern/parallel_hashmap/phmap_base.h	/^class NullMutex {$/;"	c	namespace:phmap
NumClonedBytes	extern/parallel_hashmap/phmap.h	/^constexpr size_t NumClonedBytes() { return Group::kWidth - 1; }$/;"	f	namespace:phmap::priv	typeref:typename:size_t
NumOffsets	extern/parallel_hashmap/phmap_base.h	/^        NumOffsets = sizeof...(OffsetSeq),$/;"	e	enum:phmap::priv::internal_layout::LayoutImpl::__anon32d953ed0403
NumSizes	extern/parallel_hashmap/phmap_base.h	/^        NumSizes = sizeof...(SizeSeq),$/;"	e	enum:phmap::priv::internal_layout::LayoutImpl::__anon32d953ed0403
NumTypes	extern/parallel_hashmap/phmap_base.h	/^        NumTypes = sizeof...(Elements),$/;"	e	enum:phmap::priv::internal_layout::LayoutImpl::__anon32d953ed0403
Offset	extern/parallel_hashmap/phmap_base.h	/^        constexpr size_t Offset() const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:size_t
OffsetOf	extern/parallel_hashmap/phmap_base.h	/^struct OffsetOf {$/;"	s	namespace:phmap::priv::memory_internal
OffsetOf	extern/parallel_hashmap/phmap_base.h	/^struct OffsetOf<Pair, typename std::is_standard_layout<Pair>::type> $/;"	s	namespace:phmap::priv::memory_internal
Offsets	extern/parallel_hashmap/phmap_base.h	/^    constexpr std::array<size_t, NumOffsets> Offsets() const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:std::array<size_t,NumOffsets>
OnlyLiteralZero	extern/parallel_hashmap/btree.h	/^            constexpr OnlyLiteralZero(NullPtrT) noexcept {}  \/\/ NOLINT$/;"	f	struct:phmap::compare_internal::OnlyLiteralZero
OnlyLiteralZero	extern/parallel_hashmap/btree.h	/^        struct OnlyLiteralZero {$/;"	s	namespace:phmap::compare_internal
PAYLOAD_CAPACITY	examples/channels/fixedSize/spsc/include/common.hpp	/^#define PAYLOAD_CAPACITY /;"	d
PAYLOAD_CAPACITY	examples/channels/variableSize/spsc/include/common.hpp	/^#define PAYLOAD_CAPACITY /;"	d
PHMAP_ACQUIRED_AFTER	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_ACQUIRED_AFTER(/;"	d
PHMAP_ACQUIRED_BEFORE	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_ACQUIRED_BEFORE(/;"	d
PHMAP_ARRAYSIZE	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_ARRAYSIZE(/;"	d
PHMAP_ASSERT	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ASSERT(/;"	d
PHMAP_ASSERT_EXCLUSIVE_LOCK	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_ASSERT_EXCLUSIVE_LOCK(/;"	d
PHMAP_ASSERT_SHARED_LOCK	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_ASSERT_SHARED_LOCK(/;"	d
PHMAP_ATTRIBUTE_ALWAYS_INLINE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_ALWAYS_INLINE /;"	d
PHMAP_ATTRIBUTE_ALWAYS_INLINE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_ALWAYS_INLINE$/;"	d
PHMAP_ATTRIBUTE_COLD	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_COLD /;"	d
PHMAP_ATTRIBUTE_COLD	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_COLD$/;"	d
PHMAP_ATTRIBUTE_FUNC_ALIGN	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_FUNC_ALIGN(/;"	d
PHMAP_ATTRIBUTE_HOT	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_HOT /;"	d
PHMAP_ATTRIBUTE_HOT	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_HOT$/;"	d
PHMAP_ATTRIBUTE_INITIAL_EXEC	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_INITIAL_EXEC /;"	d
PHMAP_ATTRIBUTE_INITIAL_EXEC	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_INITIAL_EXEC$/;"	d
PHMAP_ATTRIBUTE_NOINLINE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NOINLINE /;"	d
PHMAP_ATTRIBUTE_NOINLINE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NOINLINE$/;"	d
PHMAP_ATTRIBUTE_NONNULL	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NONNULL(/;"	d
PHMAP_ATTRIBUTE_NORETURN	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NORETURN /;"	d
PHMAP_ATTRIBUTE_NORETURN	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NORETURN$/;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_ADDRESS	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_ADDRESS /;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_ADDRESS	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_ADDRESS$/;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_CFI	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_CFI /;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_CFI	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_CFI$/;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_MEMORY	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_MEMORY /;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_MEMORY	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_MEMORY$/;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_SAFESTACK	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_SAFESTACK /;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_SAFESTACK	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_SAFESTACK$/;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_THREAD	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_THREAD /;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_THREAD	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_THREAD$/;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_UNDEFINED	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_UNDEFINED /;"	d
PHMAP_ATTRIBUTE_NO_SANITIZE_UNDEFINED	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_SANITIZE_UNDEFINED$/;"	d
PHMAP_ATTRIBUTE_NO_TAIL_CALL	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_TAIL_CALL /;"	d
PHMAP_ATTRIBUTE_NO_TAIL_CALL	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_NO_TAIL_CALL$/;"	d
PHMAP_ATTRIBUTE_PACKED	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_PACKED /;"	d
PHMAP_ATTRIBUTE_PACKED	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_PACKED$/;"	d
PHMAP_ATTRIBUTE_REINITIALIZES	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_ATTRIBUTE_REINITIALIZES /;"	d
PHMAP_ATTRIBUTE_REINITIALIZES	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_ATTRIBUTE_REINITIALIZES$/;"	d
PHMAP_ATTRIBUTE_REINITIALIZES	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_REINITIALIZES$/;"	d
PHMAP_ATTRIBUTE_RETURNS_NONNULL	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_RETURNS_NONNULL /;"	d
PHMAP_ATTRIBUTE_RETURNS_NONNULL	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_RETURNS_NONNULL$/;"	d
PHMAP_ATTRIBUTE_SECTION	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_ATTRIBUTE_SECTION(/;"	d
PHMAP_ATTRIBUTE_SECTION	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_SECTION(/;"	d
PHMAP_ATTRIBUTE_SECTION_START	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_SECTION_START(/;"	d
PHMAP_ATTRIBUTE_SECTION_STOP	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_SECTION_STOP(/;"	d
PHMAP_ATTRIBUTE_SECTION_VARIABLE	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_ATTRIBUTE_SECTION_VARIABLE(/;"	d
PHMAP_ATTRIBUTE_SECTION_VARIABLE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_SECTION_VARIABLE(/;"	d
PHMAP_ATTRIBUTE_STACK_ALIGN_FOR_OLD_LIBC	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_ATTRIBUTE_STACK_ALIGN_FOR_OLD_LIBC /;"	d
PHMAP_ATTRIBUTE_STACK_ALIGN_FOR_OLD_LIBC	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_ATTRIBUTE_STACK_ALIGN_FOR_OLD_LIBC$/;"	d
PHMAP_ATTRIBUTE_STACK_ALIGN_FOR_OLD_LIBC	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_STACK_ALIGN_FOR_OLD_LIBC$/;"	d
PHMAP_ATTRIBUTE_UNUSED	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_UNUSED /;"	d
PHMAP_ATTRIBUTE_UNUSED	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_UNUSED$/;"	d
PHMAP_ATTRIBUTE_WEAK	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_WEAK /;"	d
PHMAP_ATTRIBUTE_WEAK	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_ATTRIBUTE_WEAK$/;"	d
PHMAP_BAD_CALL_IF	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_BAD_CALL_IF(/;"	d
PHMAP_BASE_INTERNAL_FORCEINLINE	extern/parallel_hashmap/phmap_bits.h	/^    #define PHMAP_BASE_INTERNAL_FORCEINLINE /;"	d
PHMAP_BLOCK_TAIL_CALL_OPTIMIZATION	extern/parallel_hashmap/phmap_bits.h	/^    #define PHMAP_BLOCK_TAIL_CALL_OPTIMIZATION(/;"	d
PHMAP_BRANCHLESS	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_BRANCHLESS /;"	d
PHMAP_BTREE_BTREE_CONTAINER_H_	extern/parallel_hashmap/btree.h	/^#define PHMAP_BTREE_BTREE_CONTAINER_H_$/;"	d
PHMAP_CACHELINE_ALIGNED	extern/parallel_hashmap/phmap_bits.h	/^    #define PHMAP_CACHELINE_ALIGNED /;"	d
PHMAP_CACHELINE_ALIGNED	extern/parallel_hashmap/phmap_bits.h	/^    #define PHMAP_CACHELINE_ALIGNED$/;"	d
PHMAP_CACHELINE_SIZE	extern/parallel_hashmap/phmap_bits.h	/^            #define PHMAP_CACHELINE_SIZE /;"	d
PHMAP_CACHELINE_SIZE	extern/parallel_hashmap/phmap_bits.h	/^        #define PHMAP_CACHELINE_SIZE /;"	d
PHMAP_CACHELINE_SIZE	extern/parallel_hashmap/phmap_bits.h	/^    #define PHMAP_CACHELINE_SIZE /;"	d
PHMAP_COMPARE_INLINE_BASECLASS_DECL	extern/parallel_hashmap/btree.h	/^#define PHMAP_COMPARE_INLINE_BASECLASS_DECL(/;"	d
PHMAP_COMPARE_INLINE_INIT	extern/parallel_hashmap/btree.h	/^#define PHMAP_COMPARE_INLINE_INIT(/;"	d
PHMAP_COMPARE_INLINE_SUBCLASS_DECL	extern/parallel_hashmap/btree.h	/^        PHMAP_COMPARE_INLINE_SUBCLASS_DECL(partial_ordering, less)$/;"	f	class:phmap::partial_ordering
PHMAP_COMPARE_INLINE_SUBCLASS_DECL	extern/parallel_hashmap/btree.h	/^        PHMAP_COMPARE_INLINE_SUBCLASS_DECL(strong_equality, equal)$/;"	f	class:phmap::strong_equality
PHMAP_COMPARE_INLINE_SUBCLASS_DECL	extern/parallel_hashmap/btree.h	/^        PHMAP_COMPARE_INLINE_SUBCLASS_DECL(strong_ordering, less)$/;"	f	class:phmap::strong_ordering
PHMAP_COMPARE_INLINE_SUBCLASS_DECL	extern/parallel_hashmap/btree.h	/^        PHMAP_COMPARE_INLINE_SUBCLASS_DECL(weak_ordering, less)$/;"	f	class:phmap::weak_ordering
PHMAP_COMPARE_INLINE_SUBCLASS_DECL	extern/parallel_hashmap/btree.h	/^#define PHMAP_COMPARE_INLINE_SUBCLASS_DECL(/;"	d
PHMAP_DECLARE_ATTRIBUTE_SECTION_VARS	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_DECLARE_ATTRIBUTE_SECTION_VARS(/;"	d
PHMAP_DECLARE_ATTRIBUTE_SECTION_VARS	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_DECLARE_ATTRIBUTE_SECTION_VARS(/;"	d
PHMAP_DEFINE_ATTRIBUTE_SECTION_VARS	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_DEFINE_ATTRIBUTE_SECTION_VARS(/;"	d
PHMAP_DEFINE_ATTRIBUTE_SECTION_VARS	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_DEFINE_ATTRIBUTE_SECTION_VARS(/;"	d
PHMAP_DEPRECATED	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_DEPRECATED(/;"	d
PHMAP_EXCLUSIVE_LOCKS_REQUIRED	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_EXCLUSIVE_LOCKS_REQUIRED(/;"	d
PHMAP_EXCLUSIVE_LOCK_FUNCTION	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_EXCLUSIVE_LOCK_FUNCTION(/;"	d
PHMAP_EXCLUSIVE_TRYLOCK_FUNCTION	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_EXCLUSIVE_TRYLOCK_FUNCTION(/;"	d
PHMAP_FALLTHROUGH_INTENDED	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_FALLTHROUGH_INTENDED /;"	d
PHMAP_FALLTHROUGH_INTENDED	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_FALLTHROUGH_INTENDED /;"	d
PHMAP_GUARDED_BY	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_GUARDED_BY(/;"	d
PHMAP_GUARDED_BY_FIXME	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_GUARDED_BY_FIXME(/;"	d
PHMAP_HASH_ROTL32	extern/parallel_hashmap/phmap_utils.h	/^#   define PHMAP_HASH_ROTL32(/;"	d
PHMAP_HAS_NATIVE_WCHAR_T	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_HAS_NATIVE_WCHAR_T$/;"	d
PHMAP_HAS_UMUL128	extern/parallel_hashmap/phmap_bits.h	/^        #define PHMAP_HAS_UMUL128 /;"	d
PHMAP_HAS_UMUL128	extern/parallel_hashmap/phmap_bits.h	/^    #define PHMAP_HAS_UMUL128 /;"	d
PHMAP_HAVE_ATTRIBUTE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_ATTRIBUTE(/;"	d
PHMAP_HAVE_ATTRIBUTE_ALWAYS_INLINE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_ATTRIBUTE_ALWAYS_INLINE /;"	d
PHMAP_HAVE_ATTRIBUTE_NOINLINE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_ATTRIBUTE_NOINLINE /;"	d
PHMAP_HAVE_ATTRIBUTE_NO_TAIL_CALL	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_ATTRIBUTE_NO_TAIL_CALL /;"	d
PHMAP_HAVE_ATTRIBUTE_SECTION	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_ATTRIBUTE_SECTION /;"	d
PHMAP_HAVE_ATTRIBUTE_WEAK	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_ATTRIBUTE_WEAK /;"	d
PHMAP_HAVE_BUILTIN	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_BUILTIN(/;"	d
PHMAP_HAVE_CC17	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_CC17 /;"	d
PHMAP_HAVE_CPP_ATTRIBUTE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_CPP_ATTRIBUTE(/;"	d
PHMAP_HAVE_EXCEPTIONS	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_HAVE_EXCEPTIONS /;"	d
PHMAP_HAVE_EXCEPTIONS	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_EXCEPTIONS /;"	d
PHMAP_HAVE_FEATURE	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_HAVE_FEATURE(/;"	d
PHMAP_HAVE_INTRINSIC_INT128	extern/parallel_hashmap/phmap_config.h	/^            #define PHMAP_HAVE_INTRINSIC_INT128 /;"	d
PHMAP_HAVE_INTRINSIC_INT128	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_HAVE_INTRINSIC_INT128 /;"	d
PHMAP_HAVE_MMAP	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_MMAP /;"	d
PHMAP_HAVE_SHARED_MUTEX	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_SHARED_MUTEX /;"	d
PHMAP_HAVE_SSE2	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_HAVE_SSE2 /;"	d
PHMAP_HAVE_SSSE3	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_HAVE_SSSE3 /;"	d
PHMAP_HAVE_STD_ANY	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_HAVE_STD_ANY /;"	d
PHMAP_HAVE_STD_OPTIONAL	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_HAVE_STD_OPTIONAL /;"	d
PHMAP_HAVE_STD_OPTIONAL	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_STD_OPTIONAL /;"	d
PHMAP_HAVE_STD_STRING_VIEW	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_HAVE_STD_STRING_VIEW /;"	d
PHMAP_HAVE_STD_STRING_VIEW	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_STD_STRING_VIEW /;"	d
PHMAP_HAVE_STD_VARIANT	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_HAVE_STD_VARIANT /;"	d
PHMAP_HAVE_STD_VARIANT	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_STD_VARIANT /;"	d
PHMAP_HAVE_THREAD_LOCAL	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_HAVE_THREAD_LOCAL /;"	d
PHMAP_HAVE_THREAD_LOCAL	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_HAVE_THREAD_LOCAL /;"	d
PHMAP_IF_CONSTEXPR	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_IF_CONSTEXPR(/;"	d
PHMAP_INIT_ATTRIBUTE_SECTION_VARS	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_INIT_ATTRIBUTE_SECTION_VARS(/;"	d
PHMAP_INIT_ATTRIBUTE_SECTION_VARS	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_INIT_ATTRIBUTE_SECTION_VARS(/;"	d
PHMAP_INTERNAL_CATCH_ANY	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_INTERNAL_CATCH_ANY /;"	d
PHMAP_INTERNAL_COMPRESSED_TUPLE_DECLSPEC	extern/parallel_hashmap/phmap_base.h	/^    #define PHMAP_INTERNAL_COMPRESSED_TUPLE_DECLSPEC /;"	d
PHMAP_INTERNAL_COMPRESSED_TUPLE_DECLSPEC	extern/parallel_hashmap/phmap_base.h	/^    #define PHMAP_INTERNAL_COMPRESSED_TUPLE_DECLSPEC$/;"	d
PHMAP_INTERNAL_EXTERN_DECL	extern/parallel_hashmap/phmap_base.h	/^    #define PHMAP_INTERNAL_EXTERN_DECL(/;"	d
PHMAP_INTERNAL_HAVE_MIN_CLANG_VERSION	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_INTERNAL_HAVE_MIN_CLANG_VERSION(/;"	d
PHMAP_INTERNAL_HAVE_MIN_GNUC_VERSION	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_INTERNAL_HAVE_MIN_GNUC_VERSION(/;"	d
PHMAP_INTERNAL_INLINE_CONSTEXPR	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_INTERNAL_INLINE_CONSTEXPR(/;"	d
PHMAP_INTERNAL_MACOS_CXX17_TYPES_UNAVAILABLE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_INTERNAL_MACOS_CXX17_TYPES_UNAVAILABLE /;"	d
PHMAP_INTERNAL_MSVC_2017_DBG_MODE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_INTERNAL_MSVC_2017_DBG_MODE$/;"	d
PHMAP_INTERNAL_RETHROW	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_INTERNAL_RETHROW /;"	d
PHMAP_INTERNAL_TRY	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_INTERNAL_TRY /;"	d
PHMAP_INTERNAL_UNALIGNED_LOAD16	extern/parallel_hashmap/phmap_bits.h	/^#define PHMAP_INTERNAL_UNALIGNED_LOAD16(/;"	d
PHMAP_INTERNAL_UNALIGNED_LOAD32	extern/parallel_hashmap/phmap_bits.h	/^#define PHMAP_INTERNAL_UNALIGNED_LOAD32(/;"	d
PHMAP_INTERNAL_UNALIGNED_LOAD64	extern/parallel_hashmap/phmap_bits.h	/^#define PHMAP_INTERNAL_UNALIGNED_LOAD64(/;"	d
PHMAP_INTERNAL_UNALIGNED_STORE16	extern/parallel_hashmap/phmap_bits.h	/^#define PHMAP_INTERNAL_UNALIGNED_STORE16(/;"	d
PHMAP_INTERNAL_UNALIGNED_STORE32	extern/parallel_hashmap/phmap_bits.h	/^#define PHMAP_INTERNAL_UNALIGNED_STORE32(/;"	d
PHMAP_INTERNAL_UNALIGNED_STORE64	extern/parallel_hashmap/phmap_bits.h	/^#define PHMAP_INTERNAL_UNALIGNED_STORE64(/;"	d
PHMAP_IS_BIG_ENDIAN	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_IS_BIG_ENDIAN /;"	d
PHMAP_IS_LITTLE_ENDIAN	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_IS_LITTLE_ENDIAN /;"	d
PHMAP_LOCKABLE	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_LOCKABLE /;"	d
PHMAP_LOCKS_EXCLUDED	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_LOCKS_EXCLUDED(/;"	d
PHMAP_LOCK_RETURNED	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_LOCK_RETURNED(/;"	d
PHMAP_META_INTERNAL_STD_CONSTRUCTION_TRAITS_DONT_CHECK_DESTRUCTION	extern/parallel_hashmap/btree.h	/^    #define PHMAP_META_INTERNAL_STD_CONSTRUCTION_TRAITS_DONT_CHECK_DESTRUCTION /;"	d
PHMAP_META_INTERNAL_STD_HASH_SFINAE_FRIENDLY_	extern/parallel_hashmap/phmap_base.h	/^    #define PHMAP_META_INTERNAL_STD_HASH_SFINAE_FRIENDLY_ /;"	d
PHMAP_MUST_USE_RESULT	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_MUST_USE_RESULT /;"	d
PHMAP_MUST_USE_RESULT	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_MUST_USE_RESULT$/;"	d
PHMAP_NO_THREAD_SAFETY_ANALYSIS	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_NO_THREAD_SAFETY_ANALYSIS /;"	d
PHMAP_NO_THREAD_SAFETY_ANALYSIS_FIXME	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_NO_THREAD_SAFETY_ANALYSIS_FIXME /;"	d
PHMAP_OPTIONAL_USE_INHERITING_CONSTRUCTORS	extern/parallel_hashmap/phmap_base.h	/^        #define PHMAP_OPTIONAL_USE_INHERITING_CONSTRUCTORS /;"	d
PHMAP_OPTIONAL_USE_INHERITING_CONSTRUCTORS	extern/parallel_hashmap/phmap_base.h	/^    #define PHMAP_OPTIONAL_USE_INHERITING_CONSTRUCTORS /;"	d
PHMAP_PREDICT_FALSE	extern/parallel_hashmap/phmap_bits.h	/^    #define PHMAP_PREDICT_FALSE(/;"	d
PHMAP_PREDICT_TRUE	extern/parallel_hashmap/phmap_bits.h	/^    #define PHMAP_PREDICT_TRUE(/;"	d
PHMAP_PRINTF_ATTRIBUTE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_PRINTF_ATTRIBUTE(/;"	d
PHMAP_PT_GUARDED_BY	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_PT_GUARDED_BY(/;"	d
PHMAP_REQUIRE_STACK_ALIGN_TRAMPOLINE	extern/parallel_hashmap/phmap_config.h	/^        #define PHMAP_REQUIRE_STACK_ALIGN_TRAMPOLINE /;"	d
PHMAP_REQUIRE_STACK_ALIGN_TRAMPOLINE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_REQUIRE_STACK_ALIGN_TRAMPOLINE /;"	d
PHMAP_SCANF_ATTRIBUTE	extern/parallel_hashmap/phmap_config.h	/^    #define PHMAP_SCANF_ATTRIBUTE(/;"	d
PHMAP_SCOPED_LOCKABLE	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_SCOPED_LOCKABLE /;"	d
PHMAP_SHARED_LOCKS_REQUIRED	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_SHARED_LOCKS_REQUIRED(/;"	d
PHMAP_SHARED_LOCK_FUNCTION	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_SHARED_LOCK_FUNCTION(/;"	d
PHMAP_SHARED_TRYLOCK_FUNCTION	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_SHARED_TRYLOCK_FUNCTION(/;"	d
PHMAP_STR	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_STR(/;"	d
PHMAP_THREAD_ANNOTATION_ATTRIBUTE__	extern/parallel_hashmap/phmap_base.h	/^    #define PHMAP_THREAD_ANNOTATION_ATTRIBUTE__(/;"	d
PHMAP_TS_FIXME	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_TS_FIXME(/;"	d
PHMAP_TS_UNCHECKED	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_TS_UNCHECKED(/;"	d
PHMAP_TS_UNCHECKED_READ	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_TS_UNCHECKED_READ(/;"	d
PHMAP_UNLOCK_FUNCTION	extern/parallel_hashmap/phmap_base.h	/^#define PHMAP_UNLOCK_FUNCTION(/;"	d
PHMAP_VAR_NAME_VALUE	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_VAR_NAME_VALUE(/;"	d
PHMAP_VERSION_MAJOR	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_VERSION_MAJOR /;"	d
PHMAP_VERSION_MINOR	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_VERSION_MINOR /;"	d
PHMAP_VERSION_PATCH	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_VERSION_PATCH /;"	d
PHMAP_XSTR	extern/parallel_hashmap/phmap_config.h	/^#define PHMAP_XSTR(/;"	d
PREFIX	extern/doxygen-awesome-css/Makefile	/^PREFIX = \/usr\/local$/;"	m
PRODUCER_COORDINATION_BUFFER_FOR_PAYLOADS_KEY	examples/channels/variableSize/spsc/include/common.hpp	/^#define PRODUCER_COORDINATION_BUFFER_FOR_PAYLOADS_KEY /;"	d
PRODUCER_COORDINATION_BUFFER_FOR_SIZES_KEY	examples/channels/variableSize/spsc/include/common.hpp	/^#define PRODUCER_COORDINATION_BUFFER_FOR_SIZES_KEY /;"	d
PRODUCER_COORDINATION_BUFFER_KEY	examples/channels/fixedSize/mpsc/include/common.hpp	/^#define PRODUCER_COORDINATION_BUFFER_KEY /;"	d
PRODUCER_COORDINATION_BUFFER_KEY	examples/channels/fixedSize/spsc/include/common.hpp	/^#define PRODUCER_COORDINATION_BUFFER_KEY /;"	d
PRODUCER_COORDINATION_BUFFER_KEY	tests/frontends/channel/fixedSize/spsc/consumer.cpp	/^#define PRODUCER_COORDINATION_BUFFER_KEY /;"	d	file:
PRODUCER_COORDINATION_BUFFER_KEY	tests/frontends/channel/fixedSize/spsc/producer.cpp	/^#define PRODUCER_COORDINATION_BUFFER_KEY /;"	d	file:
PROJECT	extern/doxygen-awesome-css/Makefile	/^PROJECT = doxygen-awesome-css$/;"	m
Pair	extern/parallel_hashmap/phmap_base.h	/^    struct Pair {$/;"	s	struct:phmap::priv::memory_internal::IsLayoutCompatible
Pair	extern/parallel_hashmap/phmap_base.h	/^template<class T1, class T2> using Pair = typename std::pair<T1, T2>;$/;"	t	namespace:phmap	typeref:typename:std::pair<T1,T2>
Pair	extern/parallel_hashmap/phmap_fwd_decl.h	/^        using Pair = typename phmap::Pair<T1, T2>;$/;"	t	namespace:phmap::priv	typeref:typename:phmap::Pair<T1,T2>
Pair	extern/parallel_hashmap/phmap_fwd_decl.h	/^    template<class T1, class T2> using Pair = typename std::pair<T1, T2>;$/;"	t	namespace:phmap	typeref:typename:std::pair<T1,T2>
PairAlloc	extern/parallel_hashmap/phmap.h	/^        using PairAlloc = typename phmap::allocator_traits<$/;"	t	function:phmap::priv::NodeHashMapPolicy::delete_element	typeref:typename:phmap::allocator_traits<Allocator>::template rebind_alloc<value_type>
PairAlloc	extern/parallel_hashmap/phmap.h	/^        using PairAlloc = typename phmap::allocator_traits<$/;"	t	function:phmap::priv::NodeHashMapPolicy::new_element	typeref:typename:phmap::allocator_traits<Allocator>::template rebind_alloc<value_type>
PairArgs	extern/parallel_hashmap/phmap.h	/^auto PairArgs(std::piecewise_construct_t, F&& f, S&& s)$/;"	f	namespace:phmap::priv	typeref:typename:decltype(std::make_pair (memory_internal::TupleRef (std::forward<F> (f)),memory_internal::TupleRef (std::forward<S> (s))))
PairArgs	extern/parallel_hashmap/phmap.h	/^inline std::pair<std::tuple<>, std::tuple<>> PairArgs() { return {}; }$/;"	f	namespace:phmap::priv	typeref:typename:std::pair<std::tuple<>,std::tuple<>>
PairArgs	extern/parallel_hashmap/phmap.h	/^std::pair<std::tuple<F&&>, std::tuple<S&&>> PairArgs(F&& f, S&& s) {$/;"	f	namespace:phmap::priv	typeref:typename:std::pair<std::tuple<F &&>,std::tuple<S &&>>
PairArgs	extern/parallel_hashmap/phmap.h	/^std::pair<std::tuple<F&&>, std::tuple<S&&>> PairArgs(std::pair<F, S>&& p) {$/;"	f	namespace:phmap::priv	typeref:typename:std::pair<std::tuple<F &&>,std::tuple<S &&>>
PairArgs	extern/parallel_hashmap/phmap.h	/^std::pair<std::tuple<const F&>, std::tuple<const S&>> PairArgs($/;"	f	namespace:phmap::priv	typeref:typename:std::pair<std::tuple<const F &>,std::tuple<const S &>>
Paragraph Linking {#extension-para}	extern/doxygen-awesome-css/docs/extensions.md	/^## Paragraph Linking {#extension-para}$/;"	s	chapter:Extensions
Params	extern/parallel_hashmap/phmap.h	/^        struct Params$/;"	s	struct:phmap::priv::parallel_hash_set::Inner
Partial	extern/parallel_hashmap/phmap_base.h	/^    static constexpr PartialType<sizeof...(Sizes)> Partial(Sizes&&... sizes) {$/;"	f	class:phmap::priv::Layout	typeref:typename:PartialType<sizeof...(Sizes)>
PartialType	extern/parallel_hashmap/phmap_base.h	/^    using PartialType = internal_layout::LayoutType<NumSizes, Ts...>;$/;"	t	class:phmap::priv::Layout	typeref:typename:internal_layout::LayoutType<NumSizes,Ts...>
PhmapTrivCopyable	extern/parallel_hashmap/phmap_dump.h	/^using PhmapTrivCopyable = typename phmap::type_traits_internal::IsTriviallyCopyable<T>;$/;"	t	typeref:typename:phmap::type_traits_internal::IsTriviallyCopyable<T>
Pointer	extern/parallel_hashmap/phmap_base.h	/^        CopyConst<Char, ElementType<N>>* Pointer(Char* p) const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:CopyConst<Char,ElementType<N>> *
Pointer	extern/parallel_hashmap/phmap_base.h	/^        CopyConst<Char, T>* Pointer(Char* p) const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:CopyConst<Char,T> *
Pointers	extern/parallel_hashmap/phmap_base.h	/^        Pointers(Char* p) const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:std::tuple<CopyConst<Char,typename std::tuple_element<OffsetSeq,ElementTypes>::type> * ...>
PoisonPadding	extern/parallel_hashmap/phmap_base.h	/^        void PoisonPadding(const Char* p) const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:void
PolicyTraits	extern/parallel_hashmap/phmap.h	/^    using PolicyTraits = hash_policy_traits<Policy>;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:hash_policy_traits<Policy>
PolicyTraits	extern/parallel_hashmap/phmap.h	/^    using PolicyTraits = hash_policy_traits<Policy>;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:hash_policy_traits<Policy>
PrepareForSampling	extern/parallel_hashmap/phmap.h	/^    void PrepareForSampling() {}$/;"	f	struct:phmap::priv::HashtablezInfo	typeref:typename:void
Printer	examples/channels/variableSize/spsc/include/common.hpp	/^class Printer$/;"	c
ProcessingUnit	include/backends/ascend/L0/processingUnit.hpp	/^  __USED__ inline ProcessingUnit(std::shared_ptr<HiCR::L0::ComputeResource> computeResource) : H/;"	f	class:HiCR::backend::ascend::L0::ProcessingUnit	typeref:typename:__USED__
ProcessingUnit	include/backends/ascend/L0/processingUnit.hpp	/^class ProcessingUnit final : public HiCR::L0::ProcessingUnit$/;"	c	namespace:HiCR::backend::ascend::L0
ProcessingUnit	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ inline ProcessingUnit(std::shared_ptr<HiCR::L0::ComputeResource> computeResource) : H/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__
ProcessingUnit	include/backends/host/pthreads/L0/processingUnit.hpp	/^class ProcessingUnit final : public HiCR::L0::ProcessingUnit$/;"	c	namespace:HiCR::backend::host::pthreads::L0
ProcessingUnit	include/hicr/L0/processingUnit.hpp	/^  __USED__ inline ProcessingUnit(std::shared_ptr<HiCR::L0::ComputeResource> computeResource) : _/;"	f	class:HiCR::L0::ProcessingUnit	typeref:typename:__USED__
ProcessingUnit	include/hicr/L0/processingUnit.hpp	/^class ProcessingUnit$/;"	c	namespace:HiCR::L0
Producer	include/frontends/channel/fixedSize/mpsc/producer.hpp	/^  Producer(L1::CommunicationManager &communicationManager,$/;"	f	class:HiCR::channel::fixedSize::MPSC::Producer
Producer	include/frontends/channel/fixedSize/mpsc/producer.hpp	/^class Producer final : public fixedSize::Base$/;"	c	namespace:HiCR::channel::fixedSize::MPSC
Producer	include/frontends/channel/fixedSize/spsc/producer.hpp	/^  Producer(L1::CommunicationManager &communicationManager,$/;"	f	class:HiCR::channel::fixedSize::SPSC::Producer
Producer	include/frontends/channel/fixedSize/spsc/producer.hpp	/^class Producer final : public channel::fixedSize::Base$/;"	c	namespace:HiCR::channel::fixedSize::SPSC
Producer	include/frontends/channel/variableSize/spsc/producer.hpp	/^  Producer(L1::CommunicationManager &communicationManager,$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer
Producer	include/frontends/channel/variableSize/spsc/producer.hpp	/^class Producer final : public variableSize::Base$/;"	c	namespace:HiCR::channel::variableSize::SPSC
ProducerChannel	include/frontends/runtime/channel/hicr/producerChannel.hpp	/^typedef HiCR::channel::variableSize::SPSC::Producer ProducerChannel;$/;"	t	namespace:HiCR::runtime	typeref:typename:HiCR::channel::variableSize::SPSC::Producer
R	extern/atomic_queue/defs.h	/^auto constexpr R = std::memory_order_release;$/;"	v	namespace:atomic_queue	typeref:typename:auto 
RECEIVER_PROCESS	examples/hicr/memcpy/source/lpf.cpp	/^#define RECEIVER_PROCESS /;"	d	file:
RECEIVER_PROCESS	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^#define RECEIVER_PROCESS /;"	d	file:
RESUME_COUNT	tests/backends/host/coroutine.cpp	/^#define RESUME_COUNT /;"	d	file:
RM	extern/doxygen-awesome-css/Makefile	/^RM = rm -f$/;"	m
RPCFunction_t	include/hicr/L1/instanceManager.hpp	/^  typedef std::function<void()> RPCFunction_t;$/;"	t	class:HiCR::L1::InstanceManager
RPCTargetIndex_t	include/hicr/L1/instanceManager.hpp	/^  typedef uint64_t RPCTargetIndex_t;$/;"	t	class:HiCR::L1::InstanceManager	typeref:typename:uint64_t
RandomSeed	extern/parallel_hashmap/phmap.h	/^inline size_t RandomSeed() $/;"	f	namespace:phmap::priv	typeref:typename:size_t
RawPtr	extern/parallel_hashmap/phmap_base.h	/^auto RawPtr(T&& ptr) -> decltype(std::addressof(*ptr))$/;"	f	namespace:phmap	typeref:typename:decltype(std::addressof (* ptr))
RawPtr	extern/parallel_hashmap/phmap_base.h	/^inline std::nullptr_t RawPtr(std::nullptr_t) { return nullptr; }$/;"	f	namespace:phmap	typeref:typename:std::nullptr_t
ReadLock	extern/parallel_hashmap/phmap_base.h	/^        ReadLock() :  m_(nullptr), locked_(false)  {}$/;"	f	class:phmap::LockableBaseImpl::ReadLock
ReadLock	extern/parallel_hashmap/phmap_base.h	/^        ReadLock(ReadLock &&o) :$/;"	f	class:phmap::LockableBaseImpl::ReadLock
ReadLock	extern/parallel_hashmap/phmap_base.h	/^        ReadLock(mutex_type& m, adopt_lock_t) noexcept :$/;"	f	class:phmap::LockableBaseImpl::ReadLock
ReadLock	extern/parallel_hashmap/phmap_base.h	/^        ReadLock(mutex_type& m, defer_lock_t) noexcept :$/;"	f	class:phmap::LockableBaseImpl::ReadLock
ReadLock	extern/parallel_hashmap/phmap_base.h	/^        ReadLock(mutex_type& m, try_to_lock_t)  :$/;"	f	class:phmap::LockableBaseImpl::ReadLock
ReadLock	extern/parallel_hashmap/phmap_base.h	/^        explicit ReadLock(mutex_type &m) : m_(&m) { $/;"	f	class:phmap::LockableBaseImpl::ReadLock
ReadLock	extern/parallel_hashmap/phmap_base.h	/^    class ReadLock$/;"	c	class:phmap::LockableBaseImpl
ReadLocks	extern/parallel_hashmap/phmap_base.h	/^        ReadLocks(adopt_lock_t, mutex_type& m1, mutex_type& m2) :$/;"	f	class:phmap::LockableBaseImpl::ReadLocks
ReadLocks	extern/parallel_hashmap/phmap_base.h	/^        explicit ReadLocks(mutex_type& m1, mutex_type& m2) : $/;"	f	class:phmap::LockableBaseImpl::ReadLocks
ReadLocks	extern/parallel_hashmap/phmap_base.h	/^    class ReadLocks$/;"	c	class:phmap::LockableBaseImpl
RealLimits	extern/nlohmann_json/json.hpp	/^    using RealLimits = std::numeric_limits<RealIntegerType>;$/;"	t	struct:detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<RealIntegerType>
RebindAlloc	extern/parallel_hashmap/phmap_base.h	/^struct RebindAlloc {$/;"	s	namespace:phmap::memory_internal
RebindAlloc	extern/parallel_hashmap/phmap_base.h	/^struct RebindAlloc<A, U, true> {$/;"	s	namespace:phmap::memory_internal
RebindFirstArg	extern/parallel_hashmap/phmap_base.h	/^struct RebindFirstArg<Class<T, Args...>, U> {$/;"	s	namespace:phmap::memory_internal
RebindPtr	extern/parallel_hashmap/phmap_base.h	/^struct RebindPtr {$/;"	s	namespace:phmap::memory_internal
RebindPtr	extern/parallel_hashmap/phmap_base.h	/^struct RebindPtr<T, U, void_t<typename T::template rebind<U>>> {$/;"	s	namespace:phmap::memory_internal
RecordErase	extern/parallel_hashmap/phmap.h	/^    inline void RecordErase() {}$/;"	f	class:phmap::priv::HashtablezInfoHandle	typeref:typename:void
RecordEraseSlow	extern/parallel_hashmap/phmap.h	/^static inline void RecordEraseSlow(HashtablezInfo*) {}$/;"	f	namespace:phmap::priv	typeref:typename:void
RecordInsert	extern/parallel_hashmap/phmap.h	/^    inline void RecordInsert(size_t , size_t ) {}$/;"	f	class:phmap::priv::HashtablezInfoHandle	typeref:typename:void
RecordInsertSlow	extern/parallel_hashmap/phmap.h	/^static inline void RecordInsertSlow(HashtablezInfo* , size_t, size_t ) {}$/;"	f	namespace:phmap::priv	typeref:typename:void
RecordRehash	extern/parallel_hashmap/phmap.h	/^    inline void RecordRehash(size_t ) {}$/;"	f	class:phmap::priv::HashtablezInfoHandle	typeref:typename:void
RecordRehashSlow	extern/parallel_hashmap/phmap.h	/^inline void RecordRehashSlow(HashtablezInfo*, size_t ) {}$/;"	f	namespace:phmap::priv	typeref:typename:void
RecordStorageChanged	extern/parallel_hashmap/phmap.h	/^    inline void RecordStorageChanged(size_t , size_t ) {}$/;"	f	class:phmap::priv::HashtablezInfoHandle	typeref:typename:void
Register	extern/parallel_hashmap/phmap.h	/^    HashtablezInfo* Register() {  static HashtablezInfo info; return &info; }$/;"	f	class:phmap::priv::HashtablezSampler	typeref:typename:HashtablezInfo *
Replicas	examples/machineModel/machineModel.json	/^      "Replicas": 1,$/;"	n	object:Instances.0
Replicas	examples/machineModel/machineModel.json	/^      "Replicas": 2,$/;"	n	object:Instances.1
Replicas	examples/machineModel/machineModel.json	/^      "Replicas": 3,$/;"	n	object:Instances.2
Replicas	examples/runtime/machineModel.json	/^      "Replicas": 1,$/;"	n	object:Instances.0
Replicas	examples/runtime/machineModel.json	/^      "Replicas": 2,$/;"	n	object:Instances.1
Replicas	examples/runtime/machineModel.json	/^      "Replicas": 3,$/;"	n	object:Instances.2
RequireUsableKey	extern/parallel_hashmap/phmap.h	/^struct RequireUsableKey $/;"	s	namespace:phmap::priv
RequiresInsertable	extern/parallel_hashmap/phmap.h	/^    using RequiresInsertable = typename std::enable_if<$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:std::enable_if<phmap::disjunction<std::is_convertible<T,init_type>,SameAsElementReference<T>>::value,int>::type
RequiresInsertable	extern/parallel_hashmap/phmap.h	/^    using RequiresInsertable = typename std::enable_if<$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:std::enable_if<phmap::disjunction<std::is_convertible<T,init_type>,SameAsElementReference<T>>::value,int>::type
RequiresNotInit	extern/parallel_hashmap/phmap.h	/^    using RequiresNotInit =$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:std::enable_if<!std::is_same<T,init_type>::value,int>::type
RequiresNotInit	extern/parallel_hashmap/phmap.h	/^    using RequiresNotInit =$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:std::enable_if<!std::is_same<T,init_type>::value,int>::type
Reset	extern/parallel_hashmap/phmap_base.h	/^    static void Reset(Node* node) {$/;"	f	struct:phmap::priv::CommonAccess	typeref:typename:void
Resource List	examples/tasking/resourceList/README.md	/^Resource List$/;"	c
RetryDecorator	extern/atomic_queue/atomic_queue.h	/^struct RetryDecorator : Queue {$/;"	s	namespace:atomic_queue
ReturnKey	extern/parallel_hashmap/phmap_base.h	/^    struct ReturnKey $/;"	s	struct:phmap::priv::hash_policy_traits
ReturnKey_	extern/parallel_hashmap/phmap.h	/^    struct ReturnKey_ $/;"	s	class:phmap::priv::parallel_hash_set
ReturnType	extern/parallel_hashmap/phmap_base.h	/^        using ReturnType = decltype(GetReturnType<Key>(0));$/;"	t	function:phmap::type_traits_internal::AssertHashEnabledHelper::DoIt
Runtime	examples/tasking/runtime.hpp	/^class Runtime$/;"	c	namespace:taskr
Runtime	include/frontends/runtime/runtime.hpp	/^  Runtime(int *pargc, char ***pargv) : _pargc(pargc), _pargv(pargv) {}$/;"	f	class:HiCR::Runtime
Runtime	include/frontends/runtime/runtime.hpp	/^class Runtime final$/;"	c	namespace:HiCR
Runtime Example	examples/runtime/README.md	/^Runtime Example$/;"	c
RuntimeException	include/hicr/exceptions.hpp	/^  __USED__ RuntimeException(const char *const message) : runtime_error(message) {}$/;"	f	class:HiCR::RuntimeException	typeref:typename:__USED__
RuntimeException	include/hicr/exceptions.hpp	/^class RuntimeException : public std::runtime_error$/;"	c	namespace:HiCR
SENDER_PROCESS	examples/hicr/memcpy/source/lpf.cpp	/^#define SENDER_PROCESS /;"	d	file:
SENDER_PROCESS	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^#define SENDER_PROCESS /;"	d	file:
SHUFFLE_BITS	extern/atomic_queue/atomic_queue.h	/^    static constexpr auto SHUFFLE_BITS = details::GetCacheLineIndexBits<ELEMENTS_PER_CACHE_LINE>/;"	m	class:atomic_queue::AtomicQueueB	typeref:typename:auto
SHUFFLE_BITS	extern/atomic_queue/atomic_queue.h	/^    static constexpr auto SHUFFLE_BITS = details::GetCacheLineIndexBits<STATES_PER_CACHE_LINE>::/;"	m	class:atomic_queue::AtomicQueueB2	typeref:typename:auto
SHUFFLE_BITS	extern/atomic_queue/atomic_queue.h	/^    static constexpr int SHUFFLE_BITS = details::GetIndexShuffleBits<MINIMIZE_CONTENTION, size_,/;"	m	class:atomic_queue::AtomicQueue	typeref:typename:int
SHUFFLE_BITS	extern/atomic_queue/atomic_queue.h	/^    static constexpr int SHUFFLE_BITS = details::GetIndexShuffleBits<MINIMIZE_CONTENTION, size_,/;"	m	class:atomic_queue::AtomicQueue2	typeref:typename:int
SIZES_BUFFER_KEY	examples/channels/variableSize/spsc/include/common.hpp	/^#define SIZES_BUFFER_KEY /;"	d
SPP_WIN	extern/parallel_hashmap/meminfo.h	/^    #define SPP_WIN$/;"	d
SPSC	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^namespace SPSC$/;"	n	namespace:HiCR::channel::fixedSize
SPSC	include/frontends/channel/fixedSize/spsc/producer.hpp	/^namespace SPSC$/;"	n	namespace:HiCR::channel::fixedSize
SPSC	include/frontends/channel/variableSize/spsc/consumer.hpp	/^namespace SPSC$/;"	n	namespace:HiCR::channel::variableSize
SPSC	include/frontends/channel/variableSize/spsc/producer.hpp	/^namespace SPSC$/;"	n	namespace:HiCR::channel::variableSize
SRC_OFFSET	examples/hicr/memcpy/source/include/telephoneGame.hpp	/^#define SRC_OFFSET /;"	d
SRC_OFFSET	examples/hicr/memcpy/source/lpf.cpp	/^#define SRC_OFFSET /;"	d	file:
SRC_OFFSET	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^#define SRC_OFFSET /;"	d	file:
STATES_PER_CACHE_LINE	extern/atomic_queue/atomic_queue.h	/^    static constexpr auto STATES_PER_CACHE_LINE = CACHE_LINE_SIZE \/ sizeof(State);$/;"	m	class:atomic_queue::AtomicQueueB2	typeref:typename:auto
STORED	extern/atomic_queue/atomic_queue.h	/^    enum State : unsigned char { EMPTY, STORING, STORED, LOADING };$/;"	e	enum:atomic_queue::AtomicQueueCommon::State
STORING	extern/atomic_queue/atomic_queue.h	/^    enum State : unsigned char { EMPTY, STORING, STORED, LOADING };$/;"	e	enum:atomic_queue::AtomicQueueCommon::State
SUCCESS	extern/run-clang-format/run-clang-format.py	/^    SUCCESS = 0$/;"	v	class:ExitStatus
SameAsElementReference	extern/parallel_hashmap/phmap.h	/^    struct SameAsElementReference : std::is_same<$/;"	s	class:phmap::priv::parallel_hash_set
SameAsElementReference	extern/parallel_hashmap/phmap.h	/^    struct SameAsElementReference$/;"	s	class:phmap::priv::raw_hash_set
Sample	extern/parallel_hashmap/phmap.h	/^static inline HashtablezInfoHandle Sample() { return HashtablezInfoHandle(); }$/;"	f	namespace:phmap::priv	typeref:typename:HashtablezInfoHandle
SampleSlow	extern/parallel_hashmap/phmap.h	/^static inline HashtablezInfo* SampleSlow(int64_t*) { return nullptr; }$/;"	f	namespace:phmap::priv	typeref:typename:HashtablezInfo *
SanitizerPoisonMemoryRegion	extern/parallel_hashmap/phmap_base.h	/^inline void SanitizerPoisonMemoryRegion(const void* m, size_t s) {$/;"	f	namespace:phmap::priv	typeref:typename:void
SanitizerPoisonObject	extern/parallel_hashmap/phmap_base.h	/^inline void SanitizerPoisonObject(const T* object) {$/;"	f	namespace:phmap::priv	typeref:typename:void
SanitizerUnpoisonMemoryRegion	extern/parallel_hashmap/phmap_base.h	/^inline void SanitizerUnpoisonMemoryRegion(const void* m, size_t s) {$/;"	f	namespace:phmap::priv	typeref:typename:void
SanitizerUnpoisonObject	extern/parallel_hashmap/phmap_base.h	/^inline void SanitizerUnpoisonObject(const T* object) {$/;"	f	namespace:phmap::priv	typeref:typename:void
SearchResult	extern/parallel_hashmap/btree.h	/^    struct SearchResult {$/;"	s	namespace:phmap::priv
SearchResult	extern/parallel_hashmap/btree.h	/^    struct SearchResult<V, false> {$/;"	s	namespace:phmap::priv
SetDisposeCallback	extern/parallel_hashmap/phmap.h	/^    DisposeCallback SetDisposeCallback(DisposeCallback ) { return nullptr; }$/;"	f	class:phmap::priv::HashtablezSampler	typeref:typename:DisposeCallback
SetHashtablezEnabled	extern/parallel_hashmap/phmap.h	/^static inline void SetHashtablezEnabled(bool ) {}$/;"	f	namespace:phmap::priv	typeref:typename:void
SetHashtablezMaxSamples	extern/parallel_hashmap/phmap.h	/^static inline void SetHashtablezMaxSamples(int32_t ) {}$/;"	f	namespace:phmap::priv	typeref:typename:void
SetHashtablezSampleParameter	extern/parallel_hashmap/phmap.h	/^static inline void SetHashtablezSampleParameter(int32_t ) {}$/;"	f	namespace:phmap::priv	typeref:typename:void
Setup	extern/doxygen-awesome-css/docs/customization.md	/^### Setup$/;"	S	section:Customization""CSS-Variables
Share your customizations	extern/doxygen-awesome-css/docs/customization.md	/^## Share your customizations$/;"	s	chapter:Customization
ShareUniquePtr	extern/parallel_hashmap/phmap_base.h	/^std::shared_ptr<T> ShareUniquePtr(std::unique_ptr<T, D>&& ptr) {$/;"	f	namespace:phmap	typeref:typename:std::shared_ptr<T>
SharedLock	extern/parallel_hashmap/phmap_base.h	/^        using SharedLock      = boost::shared_lock<mutex_type>;$/;"	t	class:phmap::LockableImpl	typeref:typename:boost::shared_lock<mutex_type>
SharedLock	extern/parallel_hashmap/phmap_base.h	/^        using SharedLock      = std::shared_lock<mutex_type>;$/;"	t	class:phmap::LockableImpl	typeref:typename:std::shared_lock<mutex_type>
SharedLock	extern/parallel_hashmap/phmap_base.h	/^        using SharedLock      = typename Base::ReadLock;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::ReadLock
SharedLock	extern/parallel_hashmap/phmap_base.h	/^    using SharedLock      = typename Base::DoNothing; $/;"	t	class:phmap::LockableImpl	typeref:typename:Base::DoNothing
SharedLock	extern/parallel_hashmap/phmap_base.h	/^    using SharedLock      = typename Base::WriteLock;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::WriteLock
SharedLocks	extern/parallel_hashmap/phmap_base.h	/^        using SharedLocks     = typename Base::ReadLocks;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::ReadLocks
SharedLocks	extern/parallel_hashmap/phmap_base.h	/^    using SharedLocks     = typename Base::DoNothing;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::DoNothing
SharedLocks	extern/parallel_hashmap/phmap_base.h	/^    using SharedLocks     = typename Base::WriteLocks;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::WriteLocks
ShouldUseBase	extern/parallel_hashmap/phmap_base.h	/^constexpr bool ShouldUseBase() {$/;"	f	namespace:phmap::priv::internal_compressed_tuple	typeref:typename:bool
SingleMemberUnion	extern/parallel_hashmap/btree.h	/^        union SingleMemberUnion {$/;"	u	namespace:phmap::type_traits_internal
Sink	extern/parallel_hashmap/phmap_base.h	/^    static void Sink(...) {}$/;"	f	struct:phmap::type_traits_internal::AssertHashEnabledHelper	typeref:typename:void
Size	extern/parallel_hashmap/phmap_base.h	/^        constexpr size_t Size() const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:size_t
SizeOf	extern/parallel_hashmap/phmap_base.h	/^struct SizeOf : NotAligned<T>, std::integral_constant<size_t, sizeof(T)> {};$/;"	s	namespace:phmap::priv::internal_layout
SizeOf	extern/parallel_hashmap/phmap_base.h	/^struct SizeOf<Aligned<T, N>> : std::integral_constant<size_t, sizeof(T)> {};$/;"	s	namespace:phmap::priv::internal_layout
SizeWithNValues	extern/parallel_hashmap/btree.h	/^        constexpr static size_type SizeWithNValues(size_type n) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:size_type
Sizes	extern/parallel_hashmap/phmap_base.h	/^    constexpr std::array<size_t, NumSizes> Sizes() const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:std::array<size_t,NumSizes>
Slice	extern/parallel_hashmap/phmap_base.h	/^        SliceType<CopyConst<Char, ElementType<N>>> Slice(Char* p) const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:SliceType<CopyConst<Char,ElementType<N>>>
Slice	extern/parallel_hashmap/phmap_base.h	/^        SliceType<CopyConst<Char, T>> Slice(Char* p) const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:SliceType<CopyConst<Char,T>>
SliceType	extern/parallel_hashmap/phmap_base.h	/^using SliceType = Span<T>;$/;"	t	namespace:phmap::priv::internal_layout	typeref:typename:Span<T>
Slices	extern/parallel_hashmap/phmap_base.h	/^        Slices(Char* p) const {$/;"	f	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:std::tuple<SliceType<CopyConst<Char,typename std::tuple_element<SizeSeq,ElementTypes>::type>>...>
Slot	extern/parallel_hashmap/phmap.h	/^    using Slot = typename Traits::slot_type;$/;"	t	struct:phmap::priv::hashtable_debug_internal::HashtableDebugAccess	typeref:typename:Traits::slot_type
SlotAlloc	extern/parallel_hashmap/phmap.h	/^    using SlotAlloc = typename phmap::allocator_traits<$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:phmap::allocator_traits<allocator_type>::template rebind_alloc<slot_type>
SlotAllocTraits	extern/parallel_hashmap/phmap.h	/^    using SlotAllocTraits = typename phmap::allocator_traits<$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:phmap::allocator_traits<allocator_type>::template rebind_traits<slot_type>
Span	extern/parallel_hashmap/phmap_base.h	/^        Span($/;"	f	class:phmap::Span
Span	extern/parallel_hashmap/phmap_base.h	/^        constexpr Span(const V& v) noexcept  \/\/ NOLINT(runtime\/explicit)$/;"	f	class:phmap::Span
Span	extern/parallel_hashmap/phmap_base.h	/^        explicit Span(V& v) noexcept  \/\/ NOLINT(runtime\/references)$/;"	f	class:phmap::Span
Span	extern/parallel_hashmap/phmap_base.h	/^    constexpr Span() noexcept : Span(nullptr, 0) {}$/;"	f	class:phmap::Span
Span	extern/parallel_hashmap/phmap_base.h	/^    constexpr Span(T (&a)[N]) noexcept  \/\/ NOLINT(runtime\/explicit)$/;"	f	class:phmap::Span
Span	extern/parallel_hashmap/phmap_base.h	/^    constexpr Span(pointer array, size_type lgth) noexcept$/;"	f	class:phmap::Span
Span	extern/parallel_hashmap/phmap_base.h	/^class Span $/;"	c	namespace:phmap
State	extern/atomic_queue/atomic_queue.h	/^    enum State : unsigned char { EMPTY, STORING, STORED, LOADING };$/;"	g	class:atomic_queue::AtomicQueueCommon	typeref:typename:unsigned char
State	extern/atomic_queue/atomic_queue.h	/^    using State = typename Base::State;$/;"	t	class:atomic_queue::AtomicQueue2	typeref:typename:Base::State
State	extern/atomic_queue/atomic_queue.h	/^    using State = typename Base::State;$/;"	t	class:atomic_queue::AtomicQueueB2	typeref:typename:Base::State
StdSwapIsUnconstrained	extern/parallel_hashmap/btree.h	/^       using StdSwapIsUnconstrained = IsSwappable<void()>;$/;"	t	namespace:phmap::swap_internal
Storage	extern/parallel_hashmap/phmap_base.h	/^    explicit constexpr Storage(T&& v) : T(phmap::forward<T>(v)) {}$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage
Storage	extern/parallel_hashmap/phmap_base.h	/^    explicit constexpr Storage(T&& v) : value(phmap::forward<T>(v)) {}$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage
Storage	extern/parallel_hashmap/phmap_base.h	/^struct PHMAP_INTERNAL_COMPRESSED_TUPLE_DECLSPEC Storage<D, I, true>$/;"	s	namespace:phmap::priv::internal_compressed_tuple
Storage	extern/parallel_hashmap/phmap_base.h	/^struct Storage $/;"	s	namespace:phmap::priv::internal_compressed_tuple
Store16	extern/parallel_hashmap/phmap_bits.h	/^inline void Store16(void *p, uint16_t v) {$/;"	f	namespace:phmap::big_endian	typeref:typename:void
Store16	extern/parallel_hashmap/phmap_bits.h	/^inline void Store16(void *p, uint16_t v) {$/;"	f	namespace:phmap::little_endian	typeref:typename:void
Store32	extern/parallel_hashmap/phmap_bits.h	/^inline void Store32(void *p, uint32_t v) {$/;"	f	namespace:phmap::big_endian	typeref:typename:void
Store32	extern/parallel_hashmap/phmap_bits.h	/^inline void Store32(void *p, uint32_t v) {$/;"	f	namespace:phmap::little_endian	typeref:typename:void
Store64	extern/parallel_hashmap/phmap_bits.h	/^inline void Store64(void *p, uint64_t v) {$/;"	f	namespace:phmap::big_endian	typeref:typename:void
Store64	extern/parallel_hashmap/phmap_bits.h	/^inline void Store64(void *p, uint64_t v) {$/;"	f	namespace:phmap::little_endian	typeref:typename:void
StringBtreeDefaultGreater	extern/parallel_hashmap/btree.h	/^        StringBtreeDefaultGreater(std::greater<std::string>) {}       \/\/ NOLINT$/;"	f	struct:phmap::priv::StringBtreeDefaultGreater
StringBtreeDefaultGreater	extern/parallel_hashmap/btree.h	/^        StringBtreeDefaultGreater(std::greater<std::string_view>) {}  \/\/ NOLINT$/;"	f	struct:phmap::priv::StringBtreeDefaultGreater
StringBtreeDefaultGreater	extern/parallel_hashmap/btree.h	/^    struct StringBtreeDefaultGreater {$/;"	s	namespace:phmap::priv
StringBtreeDefaultLess	extern/parallel_hashmap/btree.h	/^        StringBtreeDefaultLess(phmap::Less<std::string_view>) {}  \/\/ NOLINT$/;"	f	struct:phmap::priv::StringBtreeDefaultLess
StringBtreeDefaultLess	extern/parallel_hashmap/btree.h	/^        StringBtreeDefaultLess(std::less<std::string>) {}       \/\/ NOLINT$/;"	f	struct:phmap::priv::StringBtreeDefaultLess
StringBtreeDefaultLess	extern/parallel_hashmap/btree.h	/^        StringBtreeDefaultLess(std::less<std::string_view>) {}  \/\/ NOLINT$/;"	f	struct:phmap::priv::StringBtreeDefaultLess
StringBtreeDefaultLess	extern/parallel_hashmap/btree.h	/^    struct StringBtreeDefaultLess {$/;"	s	namespace:phmap::priv
StringHashEqT	extern/parallel_hashmap/phmap.h	/^struct StringHashEqT$/;"	s	namespace:phmap::priv
StrippedAccept	extern/parallel_hashmap/phmap_base.h	/^struct StrippedAccept $/;"	s	namespace:phmap::base_internal
SubclassExample	extern/doxygen-awesome-css/include/MyLibrary/subclass-example.hpp	/^    class SubclassExample : public Example {$/;"	c	namespace:MyLibrary
Swap	extern/parallel_hashmap/btree.h	/^        void Swap(T& lhs, T& rhs) noexcept(IsNothrowSwappable<T>::value) {$/;"	f	namespace:phmap::swap_internal	typeref:typename:void
SwapAlloc	extern/parallel_hashmap/phmap.h	/^void SwapAlloc(AllocType& \/*lhs*\/, AllocType& \/*rhs*\/,$/;"	f	namespace:phmap::priv	typeref:typename:void
SwapAlloc	extern/parallel_hashmap/phmap.h	/^void SwapAlloc(AllocType& lhs, AllocType& rhs,$/;"	f	namespace:phmap::priv	typeref:typename:void
System-wide	extern/doxygen-awesome-css/README.md	/^### System-wide$/;"	S	section:Doxygen Awesome""Installation
T	extern/atomic_queue/atomic_queue.h	/^    using T = typename Queue::value_type;$/;"	t	struct:atomic_queue::RetryDecorator	typeref:typename:Queue::value_type
T	extern/parallel_hashmap/phmap_base.h	/^    using T = ElemT<D, I>;$/;"	t	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:ElemT<D,I>
T	extern/parallel_hashmap/phmap_base.h	/^    using T = internal_compressed_tuple::ElemT<D, I>;$/;"	t	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:internal_compressed_tuple::ElemT<D,I>
TAG	examples/hicr/memcpy/source/lpf.cpp	/^#define TAG /;"	d	file:
TAG	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^#define TAG /;"	d	file:
TASK_LABEL	examples/tasking/getCurrentTask/source/main.cpp	/^#define TASK_LABEL /;"	d	file:
TEST	tests/backends/host/coroutine.cpp	/^TEST(Coroutine, Construction)$/;"	f
TEST	tests/backends/host/coroutine.cpp	/^TEST(Coroutine, TLS)$/;"	f
TEST	tests/backends/host/hwloc/L1/memoryManager.cpp	/^TEST(MemoryManager, Construction)$/;"	f
TEST	tests/backends/host/hwloc/L1/memoryManager.cpp	/^TEST(MemoryManager, Memory)$/;"	f
TEST	tests/backends/host/pthreads/L0/processingUnit.cpp	/^TEST(ProcessingUnit, AffinityFunctions)$/;"	f
TEST	tests/backends/host/pthreads/L0/processingUnit.cpp	/^TEST(ProcessingUnit, Construction)$/;"	f
TEST	tests/backends/host/pthreads/L0/processingUnit.cpp	/^TEST(ProcessingUnit, LifeCycle)$/;"	f
TEST	tests/backends/host/pthreads/L0/processingUnit.cpp	/^TEST(ProcessingUnit, ThreadAffinity)$/;"	f
TEST	tests/frontends/channel/fixedSize/spsc/consumer.cpp	/^TEST(ConsumerChannel, Construction)$/;"	f
TEST	tests/frontends/channel/fixedSize/spsc/consumer.cpp	/^TEST(ConsumerChannel, PeekPop)$/;"	f
TEST	tests/frontends/channel/fixedSize/spsc/consumer.cpp	/^TEST(ConsumerChannel, PeekWait)$/;"	f
TEST	tests/frontends/channel/fixedSize/spsc/producer.cpp	/^TEST(ProducerChannel, Construction)$/;"	f
TEST	tests/frontends/channel/fixedSize/spsc/producer.cpp	/^TEST(ProducerChannel, Push)$/;"	f
TEST	tests/frontends/channel/fixedSize/spsc/producer.cpp	/^TEST(ProducerChannel, PushWait)$/;"	f
TEST	tests/frontends/tasking/dispatcher.cpp	/^TEST(Dispatcher, Construction)$/;"	f
TEST	tests/frontends/tasking/dispatcher.cpp	/^TEST(Dispatcher, Pull)$/;"	f
TEST	tests/frontends/tasking/task.cpp	/^TEST(Task, Construction)$/;"	f
TEST	tests/frontends/tasking/task.cpp	/^TEST(Task, Events)$/;"	f
TEST	tests/frontends/tasking/task.cpp	/^TEST(Task, Run)$/;"	f
TEST	tests/frontends/tasking/task.cpp	/^TEST(Task, SetterAndGetters)$/;"	f
TEST	tests/frontends/tasking/worker.cpp	/^TEST(Task, SetterAndGetters)$/;"	f
TEST	tests/frontends/tasking/worker.cpp	/^TEST(Worker, Construction)$/;"	f
TEST	tests/frontends/tasking/worker.cpp	/^TEST(Worker, LifeCycle)$/;"	f
TEST_RPC_EXECUTION_UNIT_ID	examples/hicr/topology/source/include/common.hpp	/^#define TEST_RPC_EXECUTION_UNIT_ID /;"	d
TEST_RPC_PROCESSING_UNIT_ID	examples/hicr/topology/source/include/common.hpp	/^#define TEST_RPC_PROCESSING_UNIT_ID /;"	d
THREAD_COUNT	tests/backends/host/coroutine.cpp	/^#define THREAD_COUNT /;"	d	file:
TOKEN_BUFFER_KEY	examples/channels/fixedSize/mpsc/include/common.hpp	/^#define TOKEN_BUFFER_KEY /;"	d
TOKEN_BUFFER_KEY	examples/channels/fixedSize/spsc/include/common.hpp	/^#define TOKEN_BUFFER_KEY /;"	d
TOKEN_BUFFER_KEY	tests/frontends/channel/fixedSize/spsc/consumer.cpp	/^#define TOKEN_BUFFER_KEY /;"	d	file:
TOKEN_BUFFER_KEY	tests/frontends/channel/fixedSize/spsc/producer.cpp	/^#define TOKEN_BUFFER_KEY /;"	d	file:
TOPOLOGY_RPC_NAME	examples/hicr/topologyRPC/source/include/common.hpp	/^#define TOPOLOGY_RPC_NAME /;"	d
TROUBLE	extern/run-clang-format/run-clang-format.py	/^    TROUBLE = 2$/;"	v	class:ExitStatus
TUnCVExt	extern/nlohmann_json/json.hpp	/^    using TUnCVExt = typename std::remove_cv<TUnExt>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_cv<TUnExt>::type
TUnCVPtr	extern/nlohmann_json/json.hpp	/^    using TUnCVPtr = typename std::remove_cv<TUnPtr>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_cv<TUnPtr>::type
TUnExt	extern/nlohmann_json/json.hpp	/^    using TUnExt = typename std::remove_extent<T>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_extent<T>::type
TUnPtr	extern/nlohmann_json/json.hpp	/^    using TUnPtr = typename std::remove_pointer<T>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_pointer<T>::type
Tabs {#extension-tabs}	extern/doxygen-awesome-css/docs/extensions.md	/^## Tabs {#extension-tabs}$/;"	s	chapter:Extensions
Task	include/frontends/tasking/task.hpp	/^  __USED__ Task(const label_t label, std::shared_ptr<HiCR::L0::ExecutionUnit> executionUnit, tas/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__
Task	include/frontends/tasking/task.hpp	/^class Task$/;"	c	namespace:HiCR::tasking
Throw	extern/parallel_hashmap/phmap_base.h	/^[[noreturn]] void Throw(const T& error) {$/;"	f	namespace:phmap::base_internal::__anon32d953ed0111	typeref:typename:void
ThrowStdBadAlloc	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdBadAlloc() { Throw(std::bad_alloc()); }$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdBadFunctionCall	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdBadFunctionCall() { Throw(std::bad_function_call()); }$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdDomainError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdDomainError(const char* what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdDomainError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdDomainError(const std::string& what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdInvalidArgument	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdInvalidArgument(const char* what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdInvalidArgument	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdInvalidArgument(const std::string& what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdLengthError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdLengthError(const char* what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdLengthError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdLengthError(const std::string& what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdLogicError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdLogicError(const char* what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdLogicError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdLogicError(const std::string& what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdOutOfRange	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdOutOfRange(const char* what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdOutOfRange	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdOutOfRange(const std::string& what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdOverflowError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdOverflowError(const char* what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdOverflowError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdOverflowError(const std::string& what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdRangeError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdRangeError(const char* what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdRangeError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdRangeError(const std::string& what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdRuntimeError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdRuntimeError(const char* what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdRuntimeError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdRuntimeError(const std::string& what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdUnderflowError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdUnderflowError(const char* what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
ThrowStdUnderflowError	extern/parallel_hashmap/phmap_base.h	/^static inline void ThrowStdUnderflowError(const std::string& what_arg) {$/;"	f	namespace:phmap::base_internal	typeref:typename:void
Tips & Tricks	extern/doxygen-awesome-css/docs/tricks.md	/^# Tips & Tricks$/;"	c
ToHost16	extern/parallel_hashmap/phmap_bits.h	/^    inline uint16_t ToHost16(uint16_t x) { return gbswap_16(x); }$/;"	f	namespace:phmap::big_endian	typeref:typename:uint16_t
ToHost16	extern/parallel_hashmap/phmap_bits.h	/^    inline uint16_t ToHost16(uint16_t x) { return x; }$/;"	f	namespace:phmap::little_endian	typeref:typename:uint16_t
ToHost32	extern/parallel_hashmap/phmap_bits.h	/^    inline uint32_t ToHost32(uint32_t x) { return gbswap_32(x); }$/;"	f	namespace:phmap::big_endian	typeref:typename:uint32_t
ToHost32	extern/parallel_hashmap/phmap_bits.h	/^    inline uint32_t ToHost32(uint32_t x) { return x; }$/;"	f	namespace:phmap::little_endian	typeref:typename:uint32_t
ToHost64	extern/parallel_hashmap/phmap_bits.h	/^    inline uint64_t ToHost64(uint64_t x) { return gbswap_64(x); }$/;"	f	namespace:phmap::big_endian	typeref:typename:uint64_t
ToHost64	extern/parallel_hashmap/phmap_bits.h	/^    inline uint64_t ToHost64(uint64_t x) { return x; }$/;"	f	namespace:phmap::little_endian	typeref:typename:uint64_t
ToPtr	extern/parallel_hashmap/phmap.h	/^    static const T* ToPtr(const T* ptr) { return ptr; }$/;"	f	struct:phmap::priv::HashEq	typeref:typename:const T *
ToPtr	extern/parallel_hashmap/phmap.h	/^    static const T* ToPtr(const std::shared_ptr<U>& ptr) {$/;"	f	struct:phmap::priv::HashEq	typeref:typename:const T *
ToPtr	extern/parallel_hashmap/phmap.h	/^    static const T* ToPtr(const std::unique_ptr<U, D>& ptr) {$/;"	f	struct:phmap::priv::HashEq	typeref:typename:const T *
Topology	examples/machineModel/machineModel.json	/^      "Topology": $/;"	o	object:Instances.0
Topology	examples/machineModel/machineModel.json	/^      "Topology": $/;"	o	object:Instances.1
Topology	examples/machineModel/machineModel.json	/^      "Topology": $/;"	o	object:Instances.2
Topology	examples/runtime/machineModel.json	/^      "Topology": $/;"	o	object:Instances.0
Topology	examples/runtime/machineModel.json	/^      "Topology": $/;"	o	object:Instances.1
Topology	examples/runtime/machineModel.json	/^      "Topology": $/;"	o	object:Instances.2
Topology	include/hicr/L0/topology.hpp	/^class Topology$/;"	c	namespace:HiCR::L0
TopologyManager	include/backends/ascend/L1/topologyManager.hpp	/^  TopologyManager() : HiCR::L1::TopologyManager() {}$/;"	f	class:HiCR::backend::ascend::L1::TopologyManager
TopologyManager	include/backends/ascend/L1/topologyManager.hpp	/^class TopologyManager final : public HiCR::L1::TopologyManager$/;"	c	namespace:HiCR::backend::ascend::L1
TopologyManager	include/backends/host/hwloc/L1/topologyManager.hpp	/^  TopologyManager(hwloc_topology_t *topology) : HiCR::L1::TopologyManager(), _topology(topology)/;"	f	class:HiCR::backend::host::hwloc::L1::TopologyManager
TopologyManager	include/backends/host/hwloc/L1/topologyManager.hpp	/^class TopologyManager final : public HiCR::L1::TopologyManager$/;"	c	namespace:HiCR::backend::host::hwloc::L1
TopologyManager	include/hicr/L1/topologyManager.hpp	/^class TopologyManager$/;"	c	namespace:HiCR::L1
TrailingZeros	extern/parallel_hashmap/phmap.h	/^    uint32_t TrailingZeros() const {$/;"	f	class:phmap::priv::BitMask	typeref:typename:uint32_t
TrailingZeros	extern/parallel_hashmap/phmap.h	/^int TrailingZeros(T x) {$/;"	f	namespace:phmap::priv	typeref:typename:int
Traits	extern/parallel_hashmap/phmap.h	/^    using Traits = typename Set::PolicyTraits;$/;"	t	struct:phmap::priv::hashtable_debug_internal::HashtableDebugAccess	typeref:typename:Set::PolicyTraits
Transfer	extern/parallel_hashmap/phmap_base.h	/^    static T Transfer(Args&&... args) {$/;"	f	struct:phmap::priv::CommonAccess	typeref:typename:T
TupleRef	extern/parallel_hashmap/phmap.h	/^auto TupleRef(T&& t) -> decltype($/;"	f	namespace:phmap::priv::memory_internal	typeref:typename:decltype(TupleRefImpl (std::forward<T> (t),phmap::make_index_sequence<std::tuple_size<typename std::decay<T>::type>::value> ()))
TupleRefImpl	extern/parallel_hashmap/phmap.h	/^auto TupleRefImpl(T&& t, phmap::index_sequence<Is...>)$/;"	f	namespace:phmap::priv::memory_internal	typeref:typename:decltype(std::forward_as_tuple (std::get<Is> (std::forward<T> (t))...))
Type	extern/parallel_hashmap/phmap_base.h	/^struct Type : NotAligned<T> {$/;"	s	namespace:phmap::priv::internal_layout
Type	extern/parallel_hashmap/phmap_base.h	/^struct Type<Aligned<T, N>> {$/;"	s	namespace:phmap::priv::internal_layout
TypeToSize	extern/parallel_hashmap/phmap_base.h	/^using TypeToSize = size_t;$/;"	t	namespace:phmap::priv::internal_layout	typeref:typename:size_t
UTF8_ACCEPT	extern/nlohmann_json/json.hpp	/^    static constexpr std::uint8_t UTF8_ACCEPT = 0;$/;"	m	class:detail::serializer	typeref:typename:std::uint8_t
UTF8_REJECT	extern/nlohmann_json/json.hpp	/^    static constexpr std::uint8_t UTF8_REJECT = 1;$/;"	m	class:detail::serializer	typeref:typename:std::uint8_t
UnalignedLoad16	extern/parallel_hashmap/phmap_bits.h	/^inline uint16_t UnalignedLoad16(const void *p) {$/;"	f	namespace:phmap::bits	typeref:typename:uint16_t
UnalignedLoad32	extern/parallel_hashmap/phmap_bits.h	/^inline uint32_t UnalignedLoad32(const void *p) {$/;"	f	namespace:phmap::bits	typeref:typename:uint32_t
UnalignedLoad64	extern/parallel_hashmap/phmap_bits.h	/^inline uint64_t UnalignedLoad64(const void *p) {$/;"	f	namespace:phmap::bits	typeref:typename:uint64_t
UnalignedStore16	extern/parallel_hashmap/phmap_bits.h	/^inline void UnalignedStore16(void *p, uint16_t v) { memcpy(p, &v, sizeof v); }$/;"	f	namespace:phmap::bits	typeref:typename:void
UnalignedStore16	extern/parallel_hashmap/phmap_bits.h	/^inline void UnalignedStore16(void *p, uint16_t v) {$/;"	f	namespace:phmap::bits	typeref:typename:void
UnalignedStore32	extern/parallel_hashmap/phmap_bits.h	/^inline void UnalignedStore32(void *p, uint32_t v) { memcpy(p, &v, sizeof v); }$/;"	f	namespace:phmap::bits	typeref:typename:void
UnalignedStore32	extern/parallel_hashmap/phmap_bits.h	/^inline void UnalignedStore32(void *p, uint32_t v) {$/;"	f	namespace:phmap::bits	typeref:typename:void
UnalignedStore64	extern/parallel_hashmap/phmap_bits.h	/^inline void UnalignedStore64(void *p, uint64_t v) { memcpy(p, &v, sizeof v); }$/;"	f	namespace:phmap::bits	typeref:typename:void
UnalignedStore64	extern/parallel_hashmap/phmap_bits.h	/^inline void UnalignedStore64(void *p, uint64_t v) {$/;"	f	namespace:phmap::bits	typeref:typename:void
UnexpectedError	extern/run-clang-format/run-clang-format.py	/^class UnexpectedError(Exception):$/;"	c
UniqueLock	extern/parallel_hashmap/phmap_base.h	/^        using UniqueLock      = boost::unique_lock<mutex_type>;$/;"	t	class:phmap::LockableImpl	typeref:typename:boost::unique_lock<mutex_type>
UniqueLock	extern/parallel_hashmap/phmap_base.h	/^        using UniqueLock      = std::unique_lock<mutex_type>;$/;"	t	class:phmap::LockableImpl	typeref:typename:std::unique_lock<mutex_type>
UniqueLock	extern/parallel_hashmap/phmap_base.h	/^        using UniqueLock      = typename Base::WriteLock;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::WriteLock
UniqueLock	extern/parallel_hashmap/phmap_base.h	/^    using UniqueLock      = typename Base::DoNothing; $/;"	t	class:phmap::LockableImpl	typeref:typename:Base::DoNothing
UniqueLock	extern/parallel_hashmap/phmap_base.h	/^    using UniqueLock      = typename Base::WriteLock;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::WriteLock
UniqueLocks	extern/parallel_hashmap/phmap_base.h	/^        using UniqueLocks     = typename Base::WriteLocks;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::WriteLocks
UniqueLocks	extern/parallel_hashmap/phmap_base.h	/^    using UniqueLocks     = typename Base::DoNothing;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::DoNothing
UniqueLocks	extern/parallel_hashmap/phmap_base.h	/^    using UniqueLocks     = typename Base::WriteLocks;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::WriteLocks
Unregister	extern/parallel_hashmap/phmap.h	/^    void Unregister(HashtablezInfo* ) {}$/;"	f	class:phmap::priv::HashtablezSampler	typeref:typename:void
UnsampleSlow	extern/parallel_hashmap/phmap.h	/^static inline void UnsampleSlow(HashtablezInfo* ) {}$/;"	f	namespace:phmap::priv	typeref:typename:void
UpgradeLock	extern/parallel_hashmap/phmap_base.h	/^        using UpgradeLock     = boost::unique_lock<mutex_type>; \/\/ assume can't upgrade$/;"	t	class:phmap::LockableImpl	typeref:typename:boost::unique_lock<mutex_type>
UpgradeLock	extern/parallel_hashmap/phmap_base.h	/^        using UpgradeLock     = boost::upgrade_lock<mutex_type>;$/;"	t	class:phmap::LockableImpl	typeref:typename:boost::upgrade_lock<mutex_type>
UpgradeLock	extern/parallel_hashmap/phmap_base.h	/^        using UpgradeLock     = std::unique_lock<mutex_type>; \/\/ assume can't upgrade$/;"	t	class:phmap::LockableImpl	typeref:typename:std::unique_lock<mutex_type>
UpgradeLock	extern/parallel_hashmap/phmap_base.h	/^        using UpgradeLock     = typename Base::WriteLock;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::WriteLock
UpgradeLock	extern/parallel_hashmap/phmap_base.h	/^    using UpgradeLock     = typename Base::DoNothing; $/;"	t	class:phmap::LockableImpl	typeref:typename:Base::DoNothing
UpgradeLock	extern/parallel_hashmap/phmap_base.h	/^    using UpgradeLock     = typename Base::WriteLock;$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::WriteLock
UpgradeToUnique	extern/parallel_hashmap/phmap_base.h	/^        using UpgradeToUnique = boost::upgrade_to_unique_lock<mutex_type>;$/;"	t	class:phmap::LockableImpl	typeref:typename:boost::upgrade_to_unique_lock<mutex_type>
UpgradeToUnique	extern/parallel_hashmap/phmap_base.h	/^        using UpgradeToUnique = typename Base::DoNothing;  \/\/ we already have unique ownership$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::DoNothing
UpgradeToUnique	extern/parallel_hashmap/phmap_base.h	/^        using UpgradeToUnique = typename Base::DoNothing; \/\/ we already have unique ownership$/;"	t	class:phmap::LockableImpl	typeref:typename:Base::DoNothing
UpgradeToUnique	extern/parallel_hashmap/phmap_base.h	/^    using UpgradeToUnique = typename Base::DoNothing;        \/\/ we already have unique ownersh/;"	t	class:phmap::LockableImpl	typeref:typename:Base::DoNothing
UpgradeToUnique	extern/parallel_hashmap/phmap_base.h	/^    using UpgradeToUnique = typename Base::DoNothing; $/;"	t	class:phmap::LockableImpl	typeref:typename:Base::DoNothing
Usage	extern/doxygen-awesome-css/docs/extensions.md	/^### Usage$/;"	S	section:Extensions""Tabs {#extension-tabs}
ValueAlloc	extern/parallel_hashmap/phmap.h	/^        using ValueAlloc =$/;"	t	function:phmap::priv::NodeHashSetPolicy::delete_element	typeref:typename:phmap::allocator_traits<Allocator>::template rebind_alloc<T>
ValueAlloc	extern/parallel_hashmap/phmap.h	/^        using ValueAlloc =$/;"	t	function:phmap::priv::NodeHashSetPolicy::new_element	typeref:typename:phmap::allocator_traits<Allocator>::template rebind_alloc<T>
VoidTImpl	extern/parallel_hashmap/phmap_base.h	/^struct VoidTImpl {$/;"	s	namespace:phmap::type_traits_internal
WeakenPtr	extern/parallel_hashmap/phmap_base.h	/^std::weak_ptr<T> WeakenPtr(const std::shared_ptr<T>& ptr) {$/;"	f	namespace:phmap	typeref:typename:std::weak_ptr<T>
WithConstructed	extern/parallel_hashmap/phmap.h	/^decltype(std::declval<F>()(std::declval<T>())) WithConstructed($/;"	f	namespace:phmap::priv	typeref:typename:decltype(std::declval<F> ()(std::declval<T> ()))
WithConstructedImpl	extern/parallel_hashmap/phmap.h	/^decltype(std::declval<F>()(std::declval<T>())) WithConstructedImpl($/;"	f	namespace:phmap::priv::memory_internal	typeref:typename:decltype(std::declval<F> ()(std::declval<T> ()))
WithConstructedImplF	extern/parallel_hashmap/phmap.h	/^struct WithConstructedImplF {$/;"	s	namespace:phmap::priv::memory_internal
Worker	include/frontends/runtime/worker.hpp	/^  Worker(HiCR::L1::InstanceManager &instanceManager,$/;"	f	class:HiCR::runtime::Worker
Worker	include/frontends/runtime/worker.hpp	/^class Worker final : public runtime::Instance$/;"	c	namespace:HiCR::runtime
Worker	include/frontends/tasking/worker.hpp	/^  Worker(HiCR::L1::ComputeManager *computeManager) : _computeManager(dynamic_cast<HiCR::backend:/;"	f	class:HiCR::tasking::Worker
Worker	include/frontends/tasking/worker.hpp	/^class Worker$/;"	c	namespace:HiCR::tasking
WrapUnique	extern/parallel_hashmap/phmap_base.h	/^std::unique_ptr<T> WrapUnique(T* ptr) $/;"	f	namespace:phmap	typeref:typename:std::unique_ptr<T>
WriteLock	extern/parallel_hashmap/phmap_base.h	/^        WriteLock() :  m_(nullptr), locked_(false)  {}$/;"	f	class:phmap::LockableBaseImpl::WriteLock
WriteLock	extern/parallel_hashmap/phmap_base.h	/^        WriteLock(WriteLock &&o) :$/;"	f	class:phmap::LockableBaseImpl::WriteLock
WriteLock	extern/parallel_hashmap/phmap_base.h	/^        WriteLock(mutex_type& m, adopt_lock_t) noexcept :$/;"	f	class:phmap::LockableBaseImpl::WriteLock
WriteLock	extern/parallel_hashmap/phmap_base.h	/^        WriteLock(mutex_type& m, defer_lock_t) noexcept :$/;"	f	class:phmap::LockableBaseImpl::WriteLock
WriteLock	extern/parallel_hashmap/phmap_base.h	/^        WriteLock(mutex_type& m, try_to_lock_t)  :$/;"	f	class:phmap::LockableBaseImpl::WriteLock
WriteLock	extern/parallel_hashmap/phmap_base.h	/^        explicit WriteLock(mutex_type &m) : m_(&m) { $/;"	f	class:phmap::LockableBaseImpl::WriteLock
WriteLock	extern/parallel_hashmap/phmap_base.h	/^    class WriteLock$/;"	c	class:phmap::LockableBaseImpl
WriteLocks	extern/parallel_hashmap/phmap_base.h	/^        WriteLocks(adopt_lock_t, mutex_type& m1, mutex_type& m2) :$/;"	f	class:phmap::LockableBaseImpl::WriteLocks
WriteLocks	extern/parallel_hashmap/phmap_base.h	/^        explicit WriteLocks(mutex_type& m1, mutex_type& m2) : $/;"	f	class:phmap::LockableBaseImpl::WriteLocks
WriteLocks	extern/parallel_hashmap/phmap_base.h	/^    class WriteLocks$/;"	c	class:phmap::LockableBaseImpl
X	extern/atomic_queue/defs.h	/^auto constexpr X = std::memory_order_relaxed;$/;"	v	namespace:atomic_queue	typeref:typename:auto 
_HICR_CHANNEL_COORDINATION_BUFFER_ELEMENT_COUNT	include/frontends/channel/base.hpp	/^#define _HICR_CHANNEL_COORDINATION_BUFFER_ELEMENT_COUNT /;"	d
_HICR_CHANNEL_COORDINATION_BUFFER_ELEMENT_TYPE	include/frontends/channel/base.hpp	/^#define _HICR_CHANNEL_COORDINATION_BUFFER_ELEMENT_TYPE /;"	d
_HICR_CHANNEL_HEAD_ADVANCE_COUNT_IDX	include/frontends/channel/base.hpp	/^#define _HICR_CHANNEL_HEAD_ADVANCE_COUNT_IDX /;"	d
_HICR_CHANNEL_TAIL_ADVANCE_COUNT_IDX	include/frontends/channel/base.hpp	/^#define _HICR_CHANNEL_TAIL_ADVANCE_COUNT_IDX /;"	d
_HICR_DEFAULT_PROCESSING_UNIT_ID_	include/hicr/L1/instanceManager.hpp	/^#define _HICR_DEFAULT_PROCESSING_UNIT_ID_ /;"	d
_HICR_DEVICE_COMPUTE_RESOURCES_KEY_	include/hicr/L0/device.hpp	/^#define _HICR_DEVICE_COMPUTE_RESOURCES_KEY_ /;"	d
_HICR_DEVICE_MEMORY_SPACES_KEY_	include/hicr/L0/device.hpp	/^#define _HICR_DEVICE_MEMORY_SPACES_KEY_ /;"	d
_HICR_MPI_INSTANCE_BASE_TAG	include/backends/mpi/L1/instanceManager.hpp	/^  #define _HICR_MPI_INSTANCE_BASE_TAG /;"	d
_HICR_MPI_INSTANCE_RETURN_DATA_TAG	include/backends/mpi/L1/instanceManager.hpp	/^#define _HICR_MPI_INSTANCE_RETURN_DATA_TAG /;"	d
_HICR_MPI_INSTANCE_RETURN_SIZE_TAG	include/backends/mpi/L1/instanceManager.hpp	/^#define _HICR_MPI_INSTANCE_RETURN_SIZE_TAG /;"	d
_HICR_MPI_INSTANCE_ROOT_ID	include/backends/mpi/L0/instance.hpp	/^#define _HICR_MPI_INSTANCE_ROOT_ID /;"	d
_HICR_MPI_RPC_TAG	include/backends/mpi/L1/instanceManager.hpp	/^#define _HICR_MPI_RPC_TAG /;"	d
_HICR_RUNTIME_CHANNEL_BASE_TAG	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^#define _HICR_RUNTIME_CHANNEL_BASE_TAG /;"	d
_HICR_RUNTIME_CHANNEL_CONSUMER_COORDINATION_BUFFER_PAYLOADS_TAG	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^#define _HICR_RUNTIME_CHANNEL_CONSUMER_COORDINATION_BUFFER_PAYLOADS_TAG /;"	d
_HICR_RUNTIME_CHANNEL_CONSUMER_COORDINATION_BUFFER_SIZES_TAG	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^#define _HICR_RUNTIME_CHANNEL_CONSUMER_COORDINATION_BUFFER_SIZES_TAG /;"	d
_HICR_RUNTIME_CHANNEL_CONSUMER_PAYLOAD_BUFFER_TAG	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^#define _HICR_RUNTIME_CHANNEL_CONSUMER_PAYLOAD_BUFFER_TAG /;"	d
_HICR_RUNTIME_CHANNEL_CONSUMER_SIZES_BUFFER_TAG	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^#define _HICR_RUNTIME_CHANNEL_CONSUMER_SIZES_BUFFER_TAG /;"	d
_HICR_RUNTIME_CHANNEL_COUNT_CAPACITY	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^#define _HICR_RUNTIME_CHANNEL_COUNT_CAPACITY /;"	d
_HICR_RUNTIME_CHANNEL_PAYLOAD_CAPACITY	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^#define _HICR_RUNTIME_CHANNEL_PAYLOAD_CAPACITY /;"	d
_HICR_RUNTIME_CHANNEL_PRODUCER_COORDINATION_BUFFER_PAYLOADS_TAG	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^#define _HICR_RUNTIME_CHANNEL_PRODUCER_COORDINATION_BUFFER_PAYLOADS_TAG /;"	d
_HICR_RUNTIME_CHANNEL_PRODUCER_COORDINATION_BUFFER_SIZES_TAG	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^#define _HICR_RUNTIME_CHANNEL_PRODUCER_COORDINATION_BUFFER_SIZES_TAG /;"	d
_HICR_RUNTIME_DATA_OBJECT_BASE_TAG	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^#define _HICR_RUNTIME_DATA_OBJECT_BASE_TAG /;"	d
_HICR_RUNTIME_DATA_OBJECT_RETURN_DATA_TAG	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^#define _HICR_RUNTIME_DATA_OBJECT_RETURN_DATA_TAG /;"	d
_HICR_RUNTIME_DATA_OBJECT_RETURN_SIZE_TAG	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^#define _HICR_RUNTIME_DATA_OBJECT_RETURN_SIZE_TAG /;"	d
_HICR_TOPOLOGY_RPC_EXECUTION_UNIT_ID	include/frontends/machineModel/machineModel.hpp	/^#define _HICR_TOPOLOGY_RPC_EXECUTION_UNIT_ID /;"	d
_HICR_TOPOLOGY_RPC_NAME	include/frontends/machineModel/machineModel.hpp	/^#define _HICR_TOPOLOGY_RPC_NAME /;"	d
_HiCRInstance	include/frontends/runtime/instance.hpp	/^  const std::shared_ptr<HiCR::L0::Instance> _HiCRInstance;$/;"	m	class:HiCR::runtime::Instance	typeref:typename:const std::shared_ptr<HiCR::L0::Instance>
_NUMADomainId	include/backends/host/L0/device.hpp	/^  NUMADomainID_t _NUMADomainId;$/;"	m	class:HiCR::backend::host::L0::Device	typeref:typename:NUMADomainID_t
_RPCRequestRank	include/backends/mpi/L1/instanceManager.hpp	/^  int _RPCRequestRank = 0;$/;"	m	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:int
_RPCTargetMap	include/hicr/L1/instanceManager.hpp	/^  std::map<RPCTargetIndex_t, RPCFunction_t> _RPCTargetMap;$/;"	m	class:HiCR::L1::InstanceManager	typeref:typename:std::map<RPCTargetIndex_t,RPCFunction_t>
__USED__	include/hicr/definitions.hpp	/^  #define __USED__ /;"	d
__anon1709fa5d0102	include/backends/host/coroutine.hpp	/^    {$/;"	f	function:HiCR::backend::host::Coroutine::start	file:
__anon173dd98d0102	examples/tasking/runtime.hpp	/^                                                { return checkWaitingTasks(); }); \/\/$/;"	f	function:taskr::Runtime::run	file:
__anon173dd98d0202	examples/tasking/runtime.hpp	/^                        { onTaskFinish(task); }); \/\/$/;"	f	function:taskr::Runtime::run	file:
__anon1ed7d7870102	examples/channels/variableSize/spsc/source/sharedMemory.cpp	/^                                    { consumerFc(m, c, firstMemorySpace, channelCapacity); });$/;"	f	function:main	file:
__anon1ed7d7870202	examples/channels/variableSize/spsc/source/sharedMemory.cpp	/^                                    { producerFc(m, c, firstMemorySpace, channelCapacity); });$/;"	f	function:main	file:
__anon1ff806220102	examples/hicr/instances/source/include/worker.hpp	/^  auto abortLambda = []() {};$/;"	f	function:workerFc	file:
__anon1ff806220202	examples/hicr/instances/source/include/worker.hpp	/^  {$/;"	f	function:workerFc	file:
__anon32d953ed0111	extern/parallel_hashmap/phmap_base.h	/^namespace {$/;"	n	namespace:phmap::base_internal
__anon32d953ed020a	extern/parallel_hashmap/phmap_base.h	/^    union {$/;"	u	class:phmap::optional_internal::optional_data_dtor_base
__anon32d953ed030a	extern/parallel_hashmap/phmap_base.h	/^    union {$/;"	u	class:phmap::optional_internal::optional_data_dtor_base
__anon32d953ed0403	extern/parallel_hashmap/phmap_base.h	/^    enum {$/;"	g	class:phmap::priv::internal_layout::LayoutImpl
__anon339372410102	tests/frontends/tasking/dispatcher.cpp	/^                                            { return (HiCR::tasking::Task *)NULL; }));$/;"	f	function:TEST	file:
__anon339372410202	tests/frontends/tasking/dispatcher.cpp	/^                                                    { return (HiCR::tasking::Task *)NULL; }));$/;"	f	function:TEST	file:
__anon339372410302	tests/frontends/tasking/dispatcher.cpp	/^                              { return (HiCR::tasking::Task *)NULL; });$/;"	f	function:TEST	file:
__anon43e8eceb0102	examples/channels/fixedSize/mpsc/source/sharedMemory.cpp	/^                                    { consumerFc(m, c, firstMemorySpace, channelCapacity, produc/;"	f	function:main	file:
__anon43e8eceb0202	examples/channels/fixedSize/mpsc/source/sharedMemory.cpp	/^                                                                                  { producerFc(m/;"	f	function:main	file:
__anon467851340102	tests/frontends/tasking/worker.cpp	/^                                              { return (HiCR::tasking::Task *)NULL; });$/;"	f	function:TEST	file:
__anon467851340202	tests/frontends/tasking/worker.cpp	/^  {$/;"	f	function:TEST	file:
__anon467851340302	tests/frontends/tasking/worker.cpp	/^                                              { return &task; });$/;"	f	function:TEST	file:
__anon4719efd90102	examples/hicr/kernel/source/sharedMemory.cpp	/^  { printf("Hello, World!\\n"); };$/;"	f	function:main	file:
__anon47cb41e30102	examples/tasking/abcTasks/source/include/abcTasks.hpp	/^                                                     { printf("Task A %lu\\n", taskr.getCurrentT/;"	f	function:abcTasks	file:
__anon47cb41e30202	examples/tasking/abcTasks/source/include/abcTasks.hpp	/^                                                     { printf("Task B %lu\\n", taskr.getCurrentT/;"	f	function:abcTasks	file:
__anon47cb41e30302	examples/tasking/abcTasks/source/include/abcTasks.hpp	/^                                                     { printf("Task C %lu\\n", taskr.getCurrentT/;"	f	function:abcTasks	file:
__anon48ce181c0102	examples/tasking/resourceList/source/main.cpp	/^                                                              { work(iterations); });$/;"	f	function:main	file:
__anon4dd3d2700102	tests/frontends/channel/fixedSize/spsc/consumer.cpp	/^  {$/;"	f	function:TEST	file:
__anon5390e9310102	examples/channels/fixedSize/spsc/source/sharedMemory.cpp	/^                                    { consumerFc(m, c, firstMemorySpace, channelCapacity); });$/;"	f	function:main	file:
__anon5390e9310202	examples/channels/fixedSize/spsc/source/sharedMemory.cpp	/^                                    { producerFc(m, c, firstMemorySpace, channelCapacity); });$/;"	f	function:main	file:
__anon5e3ed2dc0102	examples/hicr/topologyRPC/source/include/worker.hpp	/^                               { sendTopology(instanceManager); });$/;"	f	function:workerFc	file:
__anon75002caf0103	extern/parallel_hashmap/btree.h	/^        enum {$/;"	g	struct:phmap::priv::common_params
__anon75002caf0203	extern/parallel_hashmap/btree.h	/^        enum {$/;"	g	class:phmap::priv::btree_node
__anon75002caf0303	extern/parallel_hashmap/btree.h	/^        enum {$/;"	g	class:phmap::priv::btree
__anon7c8093bd0103	extern/nlohmann_json/json.hpp	/^    enum { value = sizeof(test<T>(nullptr)) == sizeof(char) }; \/\/ NOLINT(cppcoreguidelines-pro/;"	g	struct:detail::is_ordered_map
__anon7c8093bd0202	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:detail::exception::diagnostics	file:
__anon7c8093bd0302	extern/nlohmann_json/json.hpp	/^    {$/;"	f	function:detail::from_json	file:
__anon7c8093bd0402	extern/nlohmann_json/json.hpp	/^    {$/;"	f	function:detail::from_json	file:
__anon7c8093bd0502	extern/nlohmann_json/json.hpp	/^    {$/;"	f	function:detail::from_json_array_impl	file:
__anon7c8093bd0602	extern/nlohmann_json/json.hpp	/^    {$/;"	f	function:detail::from_json_array_impl	file:
__anon7c8093bd0702	extern/nlohmann_json/json.hpp	/^    {$/;"	f	function:detail::from_json	file:
__anon7c8093bd0811	extern/nlohmann_json/json.hpp	/^{$/;"	n
__anon7c8093bd0911	extern/nlohmann_json/json.hpp	/^{$/;"	n
__anon7c8093bd0a03	extern/nlohmann_json/json.hpp	/^    {$/;"	g	struct:detail::is_iterator_of_multibyte
__anon7c8093bd0b02	extern/nlohmann_json/json.hpp	/^                {$/;"	f	function:detail::binary_reader::parse_cbor_internal	file:
__anon7c8093bd0c02	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:detail::binary_reader::get_msgpack_binary	file:
__anon7c8093bd0d02	extern/nlohmann_json/json.hpp	/^                {$/;"	f	function:detail::binary_reader::get_ubjson_value	file:
__anon7c8093bd0e02	extern/nlohmann_json/json.hpp	/^            {$/;"	f	function:detail::binary_reader::get_ubjson_array	file:
__anon7c8093bd0f02	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:json_pointer::to_string	file:
__anon7c8093bd1002	extern/nlohmann_json/json.hpp	/^                {$/;"	f	function:json_pointer::get_unchecked	file:
__anon7c8093bd1102	extern/nlohmann_json/json.hpp	/^                    {$/;"	f	function:detail::binary_writer::write_ubjson	file:
__anon7c8093bd1202	extern/nlohmann_json/json.hpp	/^                    {$/;"	f	function:detail::binary_writer::write_ubjson	file:
__anon7c8093bd1302	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:detail::binary_writer::calc_bson_array_size	file:
__anon7c8093bd1402	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:detail::binary_writer::calc_bson_object_size	file:
__anon7c8093bd1502	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:detail::serializer::dump_float	file:
__anon7c8093bd1602	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:basic_json::create	file:
__anon7c8093bd1702	extern/nlohmann_json/json.hpp	/^            {$/;"	f	function:basic_json::assert_invariant	file:
__anon7c8093bd1802	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:basic_json::basic_json	file:
__anon7c8093bd1902	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:basic_json::patch_inplace	file:
__anon7c8093bd1a02	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:basic_json::patch_inplace	file:
__anon7c8093bd1b02	extern/nlohmann_json/json.hpp	/^        {$/;"	f	function:basic_json::patch_inplace	file:
__anon7c8093bd1c02	extern/nlohmann_json/json.hpp	/^            {$/;"	f	function:basic_json::patch_inplace	typeref:typename:basic_json &	file:
__anon7d5efcee0102	examples/tasking/getCurrentTask/source/main.cpp	/^                                                              {$/;"	f	function:main	file:
__anon893f42a80102	tests/frontends/channel/fixedSize/spsc/producer.cpp	/^  {$/;"	f	function:TEST	file:
__anon8e14f62a0102	include/frontends/tasking/worker.hpp	/^                                                              { this->mainLoop(); });$/;"	f	function:HiCR::tasking::Worker::start	file:
__anon8e551a730103	extern/parallel_hashmap/phmap.h	/^    enum { kWidth = 16 };  \/\/ the number of slots per group$/;"	g	struct:phmap::priv::GroupSse2Impl
__anon8e551a730203	extern/parallel_hashmap/phmap.h	/^    enum { kWidth = 8 };$/;"	g	struct:phmap::priv::GroupPortableImpl
__anon8e551a73030a	extern/parallel_hashmap/phmap.h	/^        union {$/;"	u	class:phmap::priv::raw_hash_set::iterator
__anon8e551a730402	extern/parallel_hashmap/phmap.h	/^            const auto probe_index = [&](size_t pos) {$/;"	f	function:phmap::priv::raw_hash_set::drop_deletes_without_resize	file:
__anon8e551a730502	extern/parallel_hashmap/phmap.h	/^            [&](auto const& inner) {$/;"	f	function:phmap::priv::parallel_hash_set::for_each	file:
__anon8e551a730602	extern/parallel_hashmap/phmap.h	/^            [&](auto& inner) {$/;"	f	function:phmap::priv::parallel_hash_set::for_each_m	file:
__anon98dd94ad0102	tests/frontends/tasking/task.cpp	/^  {$/;"	f	function:TEST	file:
__anon98dd94ad0202	tests/frontends/tasking/task.cpp	/^  { onExecuteHasRun = true; };$/;"	f	function:TEST	file:
__anon98dd94ad0302	tests/frontends/tasking/task.cpp	/^  { onSuspendHasRun = true; };$/;"	f	function:TEST	file:
__anon98dd94ad0402	tests/frontends/tasking/task.cpp	/^  { onFinishHasRun = true; delete t ; };$/;"	f	function:TEST	file:
__anon98dd94ad0502	tests/frontends/tasking/task.cpp	/^  {$/;"	f	function:TEST	file:
__anon994f3a230102	examples/tasking/energySaver/source/main.cpp	/^                                                              { workFc(iterations); });$/;"	f	function:main	file:
__anon994f3a230202	examples/tasking/energySaver/source/main.cpp	/^                                                              { waitFc(&taskr, secondsDelay); })/;"	f	function:main	file:
__anon9d982ecb0102	include/frontends/machineModel/machineModel.hpp	/^                                   { submitTopology(&instanceManager, _topologyManagers); });$/;"	f	function:HiCR::MachineModel::MachineModel	file:
__anonb3a766210102	tests/backends/host/pthreads/L0/processingUnit.cpp	/^  {$/;"	f	function:TEST	file:
__anonb3a766210202	tests/backends/host/pthreads/L0/processingUnit.cpp	/^  {$/;"	f	function:TEST	file:
__anonb3a766210302	tests/backends/host/pthreads/L0/processingUnit.cpp	/^  {$/;"	f	function:TEST	file:
__anonb3a766210402	tests/backends/host/pthreads/L0/processingUnit.cpp	/^  auto fc3 = []() {$/;"	f	function:TEST	file:
__anonbf8907870102	tests/backends/host/coroutine.cpp	/^  {$/;"	f	function:TEST	file:
__anonbf8907870202	tests/backends/host/coroutine.cpp	/^                                                                    { fc(coroutines[i]); });$/;"	f	function:TEST	file:
__anone7909cfc0102	examples/runtime/source/main.cpp	/^                             { entryPointFc(runtime, "A"); });$/;"	f	function:main	file:
__anone7909cfc0202	examples/runtime/source/main.cpp	/^                             { entryPointFc(runtime, "B"); });$/;"	f	function:main	file:
__anone7909cfc0302	examples/runtime/source/main.cpp	/^                             { entryPointFc(runtime, "C"); });$/;"	f	function:main	file:
__anoned0ca26b0102	examples/machineModel/source/include/worker.hpp	/^                               { continueListening = false; });$/;"	f	function:workerFc	file:
__anoned0ca26b0202	examples/machineModel/source/include/worker.hpp	/^                               { taskFc("A", instanceManager); });$/;"	f	function:workerFc	file:
__anoned0ca26b0302	examples/machineModel/source/include/worker.hpp	/^                               { taskFc("B", instanceManager); });$/;"	f	function:workerFc	file:
__anoned0ca26b0402	examples/machineModel/source/include/worker.hpp	/^                               { taskFc("C", instanceManager); });$/;"	f	function:workerFc	file:
__anonfa21b41d0102	include/frontends/runtime/worker.hpp	/^                                   { continueListening = false; });$/;"	f	function:HiCR::runtime::Worker::initialize	file:
__anonfa21b41d0202	include/frontends/runtime/worker.hpp	/^                                   { initializeChannels(); });$/;"	f	function:HiCR::runtime::Worker::initialize	file:
__init__	extern/run-clang-format/run-clang-format.py	/^    def __init__(self, message, errs=None):$/;"	m	class:DiffError
__init__	extern/run-clang-format/run-clang-format.py	/^    def __init__(self, message, exc=None):$/;"	m	class:UnexpectedError
_abort	include/frontends/runtime/instance.hpp	/^  void _abort(const int errorCode = 0)$/;"	f	class:HiCR::runtime::Instance	typeref:typename:void
_activeWorkerCount	examples/tasking/runtime.hpp	/^  ssize_t _activeWorkerCount;$/;"	m	class:taskr::Runtime	typeref:typename:ssize_t
_activeWorkerQueueLock	examples/tasking/runtime.hpp	/^  std::mutex _activeWorkerQueueLock;$/;"	m	class:taskr::Runtime	typeref:typename:std::mutex
_barrier	include/backends/host/pthreads/L1/communicationManager.hpp	/^  pthread_barrier_t _barrier;$/;"	m	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:pthread_barrier_t
_barrier	tests/backends/host/coroutine.cpp	/^pthread_barrier_t _barrier;$/;"	v	typeref:typename:pthread_barrier_t
_bindingSupport	include/backends/host/hwloc/L0/memorySpace.hpp	/^  host::hwloc::L0::LocalMemorySlot::binding_type _bindingSupport;$/;"	m	class:HiCR::backend::host::hwloc::L0::MemorySpace	typeref:typename:host::hwloc::L0::LocalMemorySlot::binding_type
_bindingType	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^  const binding_type _bindingType;$/;"	m	class:HiCR::backend::host::hwloc::L0::LocalMemorySlot	typeref:typename:const binding_type
_buffer	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  void *const _buffer;$/;"	m	class:HiCR::runtime::DataObject	typeref:typename:void * const
_cacheSize	include/backends/host/cache.hpp	/^  size_t _cacheSize;$/;"	m	class:HiCR::backend::host::Cache	typeref:typename:size_t
_caches	include/backends/host/L0/computeResource.hpp	/^  std::unordered_set<std::shared_ptr<backend::host::Cache>> _caches;$/;"	m	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:std::unordered_set<std::shared_ptr<backend::host::Cache>>
_capacity	include/frontends/channel/circularBuffer.hpp	/^  const size_t _capacity;$/;"	m	class:HiCR::channel::CircularBuffer	typeref:typename:const size_t
_circularBuffer	include/frontends/channel/base.hpp	/^  std::unique_ptr<channel::CircularBuffer> _circularBuffer;$/;"	m	class:HiCR::channel::Base	typeref:typename:std::unique_ptr<channel::CircularBuffer>
_circularBufferForPayloads	include/frontends/channel/variableSize/base.hpp	/^  std::unique_ptr<channel::CircularBuffer> _circularBufferForPayloads;$/;"	m	class:HiCR::channel::variableSize::Base	typeref:typename:std::unique_ptr<channel::CircularBuffer>
_comm	include/backends/mpi/L1/communicationManager.hpp	/^  const MPI_Comm _comm;$/;"	m	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:const MPI_Comm
_comm	include/backends/mpi/L1/instanceManager.hpp	/^  const MPI_Comm _comm;$/;"	m	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:const MPI_Comm
_commManager	include/backends/ascend/memoryKernel.hpp	/^  ascend::L1::CommunicationManager *const _commManager;$/;"	m	class:HiCR::backend::ascend::MemoryKernel	typeref:typename:ascend::L1::CommunicationManager * const
_communicationManager	include/frontends/channel/base.hpp	/^  L1::CommunicationManager *const _communicationManager;$/;"	m	class:HiCR::channel::Base	typeref:typename:L1::CommunicationManager * const
_communicationManager	include/frontends/runtime/instance.hpp	/^  HiCR::L1::CommunicationManager *const _communicationManager = nullptr;$/;"	m	class:HiCR::runtime::Instance	typeref:typename:HiCR::L1::CommunicationManager * const
_communicationManager	include/frontends/runtime/runtime.hpp	/^  std::unique_ptr<HiCR::L1::CommunicationManager> _communicationManager = nullptr;$/;"	m	class:HiCR::Runtime	typeref:typename:std::unique_ptr<HiCR::L1::CommunicationManager>
_computeManager	include/frontends/tasking/worker.hpp	/^  HiCR::backend::host::L1::ComputeManager *const _computeManager;$/;"	m	class:HiCR::tasking::Worker	typeref:typename:HiCR::backend::host::L1::ComputeManager * const
_computeResource	include/hicr/L0/processingUnit.hpp	/^  const std::shared_ptr<HiCR::L0::ComputeResource> _computeResource;$/;"	m	class:HiCR::L0::ProcessingUnit	typeref:typename:const std::shared_ptr<HiCR::L0::ComputeResource>
_computeResources	include/hicr/L0/device.hpp	/^  computeResourceList_t _computeResources;$/;"	m	class:HiCR::L0::Device	typeref:typename:computeResourceList_t
_configPath	include/backends/ascend/core.hpp	/^  const char *_configPath;$/;"	m	class:HiCR::backend::ascend::Core	typeref:typename:const char *
_consumerChannels	include/frontends/runtime/instance.hpp	/^  std::map<HiCR::L0::Instance::instanceId_t, std::shared_ptr<runtime::ConsumerChannel>> _consume/;"	m	class:HiCR::runtime::Instance	typeref:typename:std::map<HiCR::L0::Instance::instanceId_t,std::shared_ptr<runtime::ConsumerChannel>>
_consumerCoordinationBuffer	include/frontends/channel/fixedSize/mpsc/consumer.hpp	/^  const std::shared_ptr<HiCR::L0::GlobalMemorySlot> _consumerCoordinationBuffer;$/;"	m	class:HiCR::channel::fixedSize::MPSC::Consumer	typeref:typename:const std::shared_ptr<HiCR::L0::GlobalMemorySlot>
_consumerCoordinationBuffer	include/frontends/channel/fixedSize/mpsc/producer.hpp	/^  const std::shared_ptr<HiCR::L0::GlobalMemorySlot> _consumerCoordinationBuffer;$/;"	m	class:HiCR::channel::fixedSize::MPSC::Producer	typeref:typename:const std::shared_ptr<HiCR::L0::GlobalMemorySlot>
_context	include/backends/ascend/L0/device.hpp	/^  const std::unique_ptr<aclrtContext> _context;$/;"	m	class:HiCR::backend::ascend::L0::Device	typeref:typename:const std::unique_ptr<aclrtContext>
_context	include/backends/ascend/L0/processingUnit.hpp	/^  aclrtContext _context;$/;"	m	class:HiCR::backend::ascend::L0::ProcessingUnit	typeref:typename:aclrtContext
_context	include/backends/host/coroutine.hpp	/^  boost::context::continuation _context;$/;"	m	class:HiCR::backend::host::Coroutine	typeref:typename:boost::context::continuation
_coordinationBuffer	include/frontends/channel/base.hpp	/^  const std::shared_ptr<L0::LocalMemorySlot> _coordinationBuffer;$/;"	m	class:HiCR::channel::Base	typeref:typename:const std::shared_ptr<L0::LocalMemorySlot>
_coordinationBufferForPayloads	include/frontends/channel/variableSize/base.hpp	/^  const std::shared_ptr<L0::LocalMemorySlot> _coordinationBufferForPayloads;$/;"	m	class:HiCR::channel::variableSize::Base	typeref:typename:const std::shared_ptr<L0::LocalMemorySlot>
_coroutine	include/backends/host/L0/executionState.hpp	/^  host::Coroutine _coroutine;$/;"	m	class:HiCR::backend::host::L0::ExecutionState	typeref:typename:host::Coroutine
_currentDataObjectId	include/frontends/runtime/instance.hpp	/^  DataObject::dataObjectId_t _currentDataObjectId = 0;$/;"	m	class:HiCR::runtime::Instance	typeref:typename:DataObject::dataObjectId_t
_currentInstance	include/frontends/runtime/runtime.hpp	/^  HiCR::runtime::Instance *_currentInstance = nullptr;$/;"	m	class:HiCR::Runtime	typeref:typename:HiCR::runtime::Instance *
_currentInstance	include/hicr/L1/instanceManager.hpp	/^  std::shared_ptr<HiCR::L0::Instance> _currentInstance;$/;"	m	class:HiCR::L1::InstanceManager	typeref:typename:std::shared_ptr<HiCR::L0::Instance>
_dataBuffer	include/backends/ascend/L0/localMemorySlot.hpp	/^  const aclDataBuffer *_dataBuffer;$/;"	m	class:HiCR::backend::ascend::L0::LocalMemorySlot	typeref:typename:const aclDataBuffer *
_dataWindow	include/backends/mpi/L0/globalMemorySlot.hpp	/^  std::unique_ptr<MPI_Win> _dataWindow = NULL;$/;"	m	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:std::unique_ptr<MPI_Win>
_deserializeTopology	include/backends/ascend/L1/topologyManager.hpp	/^  __USED__ inline HiCR::L0::Topology _deserializeTopology(const nlohmann::json &topology) const /;"	f	class:HiCR::backend::ascend::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Topology
_deserializeTopology	include/backends/host/hwloc/L1/topologyManager.hpp	/^  __USED__ inline HiCR::L0::Topology _deserializeTopology(const nlohmann::json &topology) const /;"	f	class:HiCR::backend::host::hwloc::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Topology
_device	include/backends/ascend/L0/computeResource.hpp	/^  std::weak_ptr<ascend::L0::Device> _device;$/;"	m	class:HiCR::backend::ascend::L0::ComputeResource	typeref:typename:std::weak_ptr<ascend::L0::Device>
_device	include/backends/ascend/L0/memorySpace.hpp	/^  std::weak_ptr<ascend::L0::Device> _device;$/;"	m	class:HiCR::backend::ascend::L0::MemorySpace	typeref:typename:std::weak_ptr<ascend::L0::Device>
_deviceList	include/hicr/L0/topology.hpp	/^  deviceList_t _deviceList;$/;"	m	class:HiCR::L0::Topology	typeref:typename:deviceList_t
_dispatcher	examples/tasking/runtime.hpp	/^  HiCR::tasking::Dispatcher *_dispatcher;$/;"	m	class:taskr::Runtime	typeref:typename:HiCR::tasking::Dispatcher *
_dispatchers	include/frontends/tasking/worker.hpp	/^  dispatcherSet_t _dispatchers;$/;"	m	class:HiCR::tasking::Worker	typeref:typename:dispatcherSet_t
_dst	include/backends/ascend/memoryKernel.hpp	/^  const std::shared_ptr<HiCR::L0::LocalMemorySlot> _dst;$/;"	m	class:HiCR::backend::ascend::MemoryKernel	typeref:typename:const std::shared_ptr<HiCR::L0::LocalMemorySlot>
_dstOffset	include/backends/ascend/memoryKernel.hpp	/^  const size_t _dstOffset;$/;"	m	class:HiCR::backend::ascend::MemoryKernel	typeref:typename:const size_t
_erase	extern/parallel_hashmap/phmap.h	/^    void _erase(const_iterator cit) { _erase(cit.inner_); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
_erase	extern/parallel_hashmap/phmap.h	/^    void _erase(const_iterator cit) { _erase(cit.iter_); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
_erase	extern/parallel_hashmap/phmap.h	/^    void _erase(iterator it) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
_erase	extern/parallel_hashmap/phmap.h	/^    void _erase(iterator it) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
_eventMap	examples/tasking/runtime.hpp	/^  HiCR::tasking::Task::taskEventMap_t *_eventMap;$/;"	m	class:taskr::Runtime	typeref:typename:HiCR::tasking::Task::taskEventMap_t *
_eventMap	include/frontends/tasking/eventMap.hpp	/^  std::map<E, eventCallback_t<T>> _eventMap;$/;"	m	class:HiCR::tasking::EventMap	typeref:typename:std::map<E,eventCallback_t<T>>
_eventMap	include/frontends/tasking/task.hpp	/^  taskEventMap_t *_eventMap = NULL;$/;"	m	class:HiCR::tasking::Task	typeref:typename:taskEventMap_t *
_executionState	include/backends/ascend/L0/processingUnit.hpp	/^  std::unique_ptr<ExecutionState> _executionState;$/;"	m	class:HiCR::backend::ascend::L0::ProcessingUnit	typeref:typename:std::unique_ptr<ExecutionState>
_executionState	include/backends/host/pthreads/L0/processingUnit.hpp	/^  std::unique_ptr<HiCR::L0::ExecutionState> _executionState;$/;"	m	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:std::unique_ptr<HiCR::L0::ExecutionState>
_executionState	include/frontends/tasking/task.hpp	/^  std::unique_ptr<HiCR::L0::ExecutionState> _executionState = NULL;$/;"	m	class:HiCR::tasking::Task	typeref:typename:std::unique_ptr<HiCR::L0::ExecutionState>
_executionUnit	include/backends/ascend/L0/executionState.hpp	/^  std::shared_ptr<ExecutionUnit> _executionUnit;$/;"	m	class:HiCR::backend::ascend::L0::ExecutionState	typeref:typename:std::shared_ptr<ExecutionUnit>
_executionUnit	include/frontends/tasking/task.hpp	/^  std::shared_ptr<HiCR::L0::ExecutionUnit> _executionUnit;$/;"	m	class:HiCR::tasking::Task	typeref:typename:std::shared_ptr<HiCR::L0::ExecutionUnit>
_fc	include/backends/host/L0/executionUnit.hpp	/^  const Coroutine::coroutineFc_t _fc;$/;"	m	class:HiCR::backend::host::L0::ExecutionUnit	typeref:typename:const Coroutine::coroutineFc_t
_finishedTaskHashSet	examples/tasking/runtime.hpp	/^  HiCR::common::parallelHashSet_t<HiCR::tasking::Task::label_t> _finishedTaskHashSet;$/;"	m	class:taskr::Runtime	typeref:typename:HiCR::common::parallelHashSet_t<HiCR::tasking::Task::label_t>
_globalKey	include/hicr/L0/globalMemorySlot.hpp	/^  const globalKey_t _globalKey;$/;"	m	class:HiCR::L0::GlobalMemorySlot	typeref:typename:const globalKey_t
_globalMemorySlotTagKeyMap	include/hicr/L1/communicationManager.hpp	/^  globalMemorySlotTagKeyMap_t _globalMemorySlotTagKeyMap;$/;"	m	class:HiCR::L1::CommunicationManager	typeref:typename:globalMemorySlotTagKeyMap_t
_globalTag	include/hicr/L0/globalMemorySlot.hpp	/^  const tag_t _globalTag;$/;"	m	class:HiCR::L0::GlobalMemorySlot	typeref:typename:const tag_t
_hasFinished	include/backends/host/coroutine.hpp	/^  bool _hasFinished = false;$/;"	m	class:HiCR::backend::host::Coroutine	typeref:typename:bool
_hash	extern/parallel_hashmap/phmap_utils.h	/^    size_t _hash(const T& val) const$/;"	f	struct:phmap::Hash	typeref:typename:size_t
_hash_helper	extern/parallel_hashmap/phmap_utils.h	/^    _hash_helper(size_t seed, const TUP &) const noexcept { return seed; }$/;"	f	struct:phmap::Hash	typeref:typename:std::enable_if<I==std::tuple_size<TUP>::value,size_t>::type
_headAdvanceCounter	include/frontends/channel/circularBuffer.hpp	/^  __volatile__ size_t *const _headAdvanceCounter;$/;"	m	class:HiCR::channel::CircularBuffer	typeref:typename:__volatile__ size_t * const
_hwlocBindingRequested	include/backends/host/hwloc/L1/memoryManager.hpp	/^  L0::LocalMemorySlot::binding_type _hwlocBindingRequested = L0::LocalMemorySlot::binding_type::/;"	m	class:HiCR::backend::host::hwloc::L1::MemoryManager	typeref:typename:L0::LocalMemorySlot::binding_type
_hwlocObject	include/backends/host/hwloc/L0/memorySpace.hpp	/^  hwloc_obj_t _hwlocObject;$/;"	m	class:HiCR::backend::host::hwloc::L0::MemorySpace	typeref:typename:hwloc_obj_t
_id	include/backends/ascend/L0/device.hpp	/^  deviceIdentifier_t _id;$/;"	m	class:HiCR::backend::ascend::L0::Device	typeref:typename:deviceIdentifier_t
_id	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  const dataObjectId_t _id;$/;"	m	class:HiCR::runtime::DataObject	typeref:typename:const dataObjectId_t
_id	include/hicr/L0/instance.hpp	/^  const instanceId_t _id;$/;"	m	class:HiCR::L0::Instance	typeref:typename:const instanceId_t
_inputDataBuffers	include/backends/ascend/computationKernel.hpp	/^  std::vector<const aclDataBuffer *> _inputDataBuffers;$/;"	m	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:std::vector<const aclDataBuffer * >
_inputTensorDescriptors	include/backends/ascend/computationKernel.hpp	/^  std::vector<const aclTensorDesc *> _inputTensorDescriptors;$/;"	m	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:std::vector<const aclTensorDesc * >
_instanceIds	include/frontends/runtime/instance.hpp	/^  std::vector<HiCR::L0::Instance::instanceId_t> _instanceIds;$/;"	m	class:HiCR::runtime::Instance	typeref:typename:std::vector<HiCR::L0::Instance::instanceId_t>
_instanceManager	include/frontends/machineModel/machineModel.hpp	/^  HiCR::L1::InstanceManager *_instanceManager;$/;"	m	class:HiCR::MachineModel	typeref:typename:HiCR::L1::InstanceManager *
_instanceManager	include/frontends/runtime/instance.hpp	/^  HiCR::L1::InstanceManager *const _instanceManager = nullptr;$/;"	m	class:HiCR::runtime::Instance	typeref:typename:HiCR::L1::InstanceManager * const
_instanceManager	include/frontends/runtime/runtime.hpp	/^  std::unique_ptr<HiCR::L1::InstanceManager> _instanceManager = nullptr;$/;"	m	class:HiCR::Runtime	typeref:typename:std::unique_ptr<HiCR::L1::InstanceManager>
_instances	include/hicr/L1/instanceManager.hpp	/^  instanceList_t _instances;$/;"	m	class:HiCR::L1::InstanceManager	typeref:typename:instanceList_t
_isReleased	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  bool _isReleased = false;$/;"	m	class:HiCR::runtime::DataObject	typeref:typename:bool
_isStreamActive	include/backends/ascend/L0/executionState.hpp	/^  bool _isStreamActive = false;$/;"	m	class:HiCR::backend::ascend::L0::ExecutionState	typeref:typename:bool
_kernelAttrs	include/backends/ascend/computationKernel.hpp	/^  const aclopAttr *_kernelAttrs;$/;"	m	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:const aclopAttr *
_kernelName	include/backends/ascend/computationKernel.hpp	/^  const std::string _kernelName;$/;"	m	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:const std::string
_kernelPtr	include/backends/ascend/computationKernel.hpp	/^  std::string _kernelPtr;$/;"	m	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:std::string
_kernelSize	include/backends/ascend/computationKernel.hpp	/^  size_t _kernelSize;$/;"	m	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:size_t
_kernels	include/backends/ascend/L0/executionUnit.hpp	/^  const std::vector<ascend::Kernel *> _kernels;$/;"	m	class:HiCR::backend::ascend::L0::ExecutionUnit	typeref:typename:const std::vector<ascend::Kernel * >
_label	include/frontends/tasking/task.hpp	/^  const label_t _label;$/;"	m	class:HiCR::tasking::Task	typeref:typename:const label_t
_level	include/backends/host/cache.hpp	/^  cacheLevel_t _level;$/;"	m	class:HiCR::backend::host::Cache	typeref:typename:cacheLevel_t
_lineSize	include/backends/host/cache.hpp	/^  size_t _lineSize;$/;"	m	class:HiCR::backend::host::Cache	typeref:typename:size_t
_lockAcquired	include/backends/mpi/L0/globalMemorySlot.hpp	/^  bool _lockAcquired = false;$/;"	m	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:bool
_logicalProcessorId	include/backends/host/L0/computeResource.hpp	/^  logicalProcessorId_t _logicalProcessorId;$/;"	m	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:logicalProcessorId_t
_lpf	include/backends/lpf/L1/communicationManager.hpp	/^  const lpf_t _lpf;$/;"	m	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:const lpf_t
_lpf	include/backends/lpf/L1/memoryManager.hpp	/^  const lpf_t _lpf;$/;"	m	class:HiCR::backend::lpf::L1::MemoryManager	typeref:typename:const lpf_t
_lpfMemSlot	include/backends/lpf/L0/globalMemorySlot.hpp	/^  const lpf_memslot_t _lpfMemSlot;$/;"	m	class:HiCR::backend::lpf::L0::GlobalMemorySlot	typeref:typename:const lpf_memslot_t
_lpfMemSlot	include/backends/lpf/L0/localMemorySlot.hpp	/^  const lpf_memslot_t _lpfMemSlot;$/;"	m	class:HiCR::backend::lpf::L0::LocalMemorySlot	typeref:typename:const lpf_memslot_t
_m1	extern/parallel_hashmap/phmap_base.h	/^        mutex_type& _m1;$/;"	m	class:phmap::LockableBaseImpl::ReadLocks	typeref:typename:mutex_type &
_m1	extern/parallel_hashmap/phmap_base.h	/^        mutex_type& _m1;$/;"	m	class:phmap::LockableBaseImpl::WriteLocks	typeref:typename:mutex_type &
_m2	extern/parallel_hashmap/phmap_base.h	/^        mutex_type& _m2;$/;"	m	class:phmap::LockableBaseImpl::ReadLocks	typeref:typename:mutex_type &
_m2	extern/parallel_hashmap/phmap_base.h	/^        mutex_type& _m2;$/;"	m	class:phmap::LockableBaseImpl::WriteLocks	typeref:typename:mutex_type &
_machineModel	include/frontends/runtime/instance.hpp	/^  HiCR::MachineModel *const _machineModel;$/;"	m	class:HiCR::runtime::Instance	typeref:typename:HiCR::MachineModel * const
_machineModel	include/frontends/runtime/runtime.hpp	/^  std::unique_ptr<HiCR::MachineModel> _machineModel;$/;"	m	class:HiCR::Runtime	typeref:typename:std::unique_ptr<HiCR::MachineModel>
_maximumActiveWorkers	examples/tasking/runtime.hpp	/^  size_t _maximumActiveWorkers = 0;$/;"	m	class:taskr::Runtime	typeref:typename:size_t
_memoryManager	include/frontends/runtime/instance.hpp	/^  HiCR::L1::MemoryManager *const _memoryManager;$/;"	m	class:HiCR::runtime::Instance	typeref:typename:HiCR::L1::MemoryManager * const
_memoryManager	include/frontends/runtime/runtime.hpp	/^  std::unique_ptr<HiCR::L1::MemoryManager> _memoryManager = nullptr;$/;"	m	class:HiCR::Runtime	typeref:typename:std::unique_ptr<HiCR::L1::MemoryManager>
_memorySpace	include/hicr/L0/localMemorySlot.hpp	/^  std::shared_ptr<L0::MemorySpace> const _memorySpace;$/;"	m	class:HiCR::L0::LocalMemorySlot	typeref:typename:std::shared_ptr<L0::MemorySpace> const
_memorySpaces	include/hicr/L0/device.hpp	/^  memorySpaceList_t _memorySpaces;$/;"	m	class:HiCR::L0::Device	typeref:typename:memorySpaceList_t
_messagesRecv	include/hicr/L0/localMemorySlot.hpp	/^  __volatile__ size_t _messagesRecv = 0;$/;"	m	class:HiCR::L0::LocalMemorySlot	typeref:typename:__volatile__ size_t
_messagesRecv	include/hicr/L0/memorySlot.hpp	/^  __volatile__ size_t _messagesRecv = 0;$/;"	m	class:HiCR::L0::MemorySlot	typeref:typename:__volatile__ size_t
_messagesSent	include/hicr/L0/localMemorySlot.hpp	/^  __volatile__ size_t _messagesSent = 0;$/;"	m	class:HiCR::L0::LocalMemorySlot	typeref:typename:__volatile__ size_t
_messagesSent	include/hicr/L0/memorySlot.hpp	/^  __volatile__ size_t _messagesSent = 0;$/;"	m	class:HiCR::L0::MemorySlot	typeref:typename:__volatile__ size_t
_mm_cmpgt_epi8_fixed	extern/parallel_hashmap/phmap.h	/^inline __m128i _mm_cmpgt_epi8_fixed(__m128i a, __m128i b) {$/;"	f	namespace:phmap::priv	typeref:typename:__m128i
_mutex	include/backends/host/L0/globalMemorySlot.hpp	/^  std::mutex _mutex;$/;"	m	class:HiCR::backend::host::L0::GlobalMemorySlot	typeref:typename:std::mutex
_mutex	include/backends/host/pthreads/L1/communicationManager.hpp	/^  pthread_mutex_t _mutex;$/;"	m	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:pthread_mutex_t
_mutexes	tests/backends/host/coroutine.cpp	/^std::vector<std::mutex *> _mutexes;$/;"	v	typeref:typename:std::vector<std::mutex * >
_numaAffinity	include/backends/host/L0/computeResource.hpp	/^  numaAffinity_t _numaAffinity;$/;"	m	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:numaAffinity_t
_outputDataBuffers	include/backends/ascend/computationKernel.hpp	/^  std::vector<const aclDataBuffer *> _outputDataBuffers;$/;"	m	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:std::vector<const aclDataBuffer * >
_outputTensorDescriptors	include/backends/ascend/computationKernel.hpp	/^  std::vector<const aclTensorDesc *> _outputTensorDescriptors;$/;"	m	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:std::vector<const aclTensorDesc * >
_pargc	include/frontends/runtime/runtime.hpp	/^  int *const _pargc;$/;"	m	class:HiCR::Runtime	typeref:typename:int * const
_pargv	include/frontends/runtime/runtime.hpp	/^  char ***const _pargv;$/;"	m	class:HiCR::Runtime	typeref:typename:char *** const
_payloadBuffer	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  std::shared_ptr<L0::GlobalMemorySlot> _payloadBuffer;$/;"	m	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:std::shared_ptr<L0::GlobalMemorySlot>
_payloadBuffer	include/frontends/channel/variableSize/spsc/producer.hpp	/^  std::shared_ptr<L0::GlobalMemorySlot> _payloadBuffer;$/;"	m	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:std::shared_ptr<L0::GlobalMemorySlot>
_payloadSize	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  size_t _payloadSize;$/;"	m	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:size_t
_payloadSize	include/frontends/channel/variableSize/spsc/producer.hpp	/^  size_t _payloadSize;$/;"	m	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:size_t
_pendingOperations	include/frontends/tasking/task.hpp	/^  pendingOperationFunctionQueue_t _pendingOperations;$/;"	m	class:HiCR::tasking::Task	typeref:typename:pendingOperationFunctionQueue_t
_physicalProcessorId	include/backends/host/L0/computeResource.hpp	/^  physicalProcessorId_t _physicalProcessorId;$/;"	m	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:physicalProcessorId_t
_pointer	include/hicr/L0/localMemorySlot.hpp	/^  void *const _pointer;$/;"	m	class:HiCR::L0::LocalMemorySlot	typeref:typename:void * const
_processingUnits	examples/tasking/runtime.hpp	/^  std::vector<std::unique_ptr<HiCR::L0::ProcessingUnit>> _processingUnits;$/;"	m	class:taskr::Runtime	typeref:typename:std::vector<std::unique_ptr<HiCR::L0::ProcessingUnit>>
_processingUnits	include/frontends/tasking/worker.hpp	/^  std::vector<std::unique_ptr<HiCR::L0::ProcessingUnit>> _processingUnits;$/;"	m	class:HiCR::tasking::Worker	typeref:typename:std::vector<std::unique_ptr<HiCR::L0::ProcessingUnit>>
_producerChannels	include/frontends/runtime/instance.hpp	/^  std::map<HiCR::L0::Instance::instanceId_t, std::shared_ptr<runtime::ProducerChannel>> _produce/;"	m	class:HiCR::runtime::Instance	typeref:typename:std::map<HiCR::L0::Instance::instanceId_t,std::shared_ptr<runtime::ProducerChannel>>
_producerCoordinationBuffer	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^  const std::shared_ptr<HiCR::L0::GlobalMemorySlot> _producerCoordinationBuffer;$/;"	m	class:HiCR::channel::fixedSize::SPSC::Consumer	typeref:typename:const std::shared_ptr<HiCR::L0::GlobalMemorySlot>
_producerCoordinationBuffer	include/frontends/channel/fixedSize/spsc/producer.hpp	/^  const std::shared_ptr<L0::GlobalMemorySlot> _producerCoordinationBuffer;$/;"	m	class:HiCR::channel::fixedSize::SPSC::Producer	typeref:typename:const std::shared_ptr<L0::GlobalMemorySlot>
_producerCoordinationBufferForCounts	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  const std::shared_ptr<HiCR::L0::GlobalMemorySlot> _producerCoordinationBufferForCounts;$/;"	m	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:const std::shared_ptr<HiCR::L0::GlobalMemorySlot>
_producerCoordinationBufferForCounts	include/frontends/channel/variableSize/spsc/producer.hpp	/^  const std::shared_ptr<L0::GlobalMemorySlot> _producerCoordinationBufferForCounts;$/;"	m	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:const std::shared_ptr<L0::GlobalMemorySlot>
_producerCoordinationBufferForPayloads	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  const std::shared_ptr<HiCR::L0::GlobalMemorySlot> _producerCoordinationBufferForPayloads;$/;"	m	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:const std::shared_ptr<HiCR::L0::GlobalMemorySlot>
_producerCoordinationBufferForPayloads	include/frontends/channel/variableSize/spsc/producer.hpp	/^  const std::shared_ptr<L0::GlobalMemorySlot> _producerCoordinationBufferForPayloads;$/;"	m	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:const std::shared_ptr<L0::GlobalMemorySlot>
_pthreadId	include/backends/host/pthreads/L0/processingUnit.hpp	/^  pthread_t _pthreadId;$/;"	m	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:pthread_t
_pullFc	include/frontends/tasking/dispatcher.hpp	/^  pullFunction_t _pullFc;$/;"	m	class:HiCR::tasking::Dispatcher	typeref:typename:pullFunction_t
_pushedPayloadBytes	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  size_t _pushedPayloadBytes;$/;"	m	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:size_t
_pushedPayloads	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  size_t _pushedPayloads;$/;"	m	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:size_t
_pushedTokens	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  size_t _pushedTokens;$/;"	m	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:size_t
_queue	include/hicr/common/concurrentQueue.hpp	/^  lockFreeQueue_t<P, N> _queue;$/;"	m	class:HiCR::common::ConcurrentQueue	typeref:typename:lockFreeQueue_t<P,N>
_rank	include/backends/lpf/L0/globalMemorySlot.hpp	/^  int _rank;$/;"	m	class:HiCR::backend::lpf::L0::GlobalMemorySlot	typeref:typename:int
_rank	include/backends/lpf/L1/communicationManager.hpp	/^  const size_t _rank;$/;"	m	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:const size_t
_rank	include/backends/mpi/L0/globalMemorySlot.hpp	/^  int _rank;$/;"	m	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:int
_rank	include/backends/mpi/L0/instance.hpp	/^  const int _rank;$/;"	m	class:HiCR::backend::mpi::L0::Instance	typeref:typename:const int
_rank	include/backends/mpi/L1/communicationManager.hpp	/^  int _rank;$/;"	m	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:int
_rank	include/backends/mpi/L1/instanceManager.hpp	/^  int _rank;$/;"	m	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:int
_recvMessageCountWindow	include/backends/mpi/L0/globalMemorySlot.hpp	/^  std::unique_ptr<MPI_Win> _recvMessageCountWindow = NULL;$/;"	m	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:std::unique_ptr<MPI_Win>
_runningContext	include/backends/host/coroutine.hpp	/^  bool _runningContext = false;$/;"	m	class:HiCR::backend::host::Coroutine	typeref:typename:bool
_runtimeEntryPointVector	include/frontends/runtime/runtime.hpp	/^  std::vector<entryPoint_t> _runtimeEntryPointVector;$/;"	m	class:HiCR::Runtime	typeref:typename:std::vector<entryPoint_t>
_sentMessageCountWindow	include/backends/mpi/L0/globalMemorySlot.hpp	/^  std::unique_ptr<MPI_Win> _sentMessageCountWindow = NULL;$/;"	m	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:std::unique_ptr<MPI_Win>
_shared	include/backends/host/cache.hpp	/^  bool _shared;$/;"	m	class:HiCR::backend::host::Cache	typeref:typename:bool
_size	include/backends/ascend/memoryKernel.hpp	/^  const size_t _size;$/;"	m	class:HiCR::backend::ascend::MemoryKernel	typeref:typename:const size_t
_size	include/backends/lpf/L1/communicationManager.hpp	/^  const size_t _size;$/;"	m	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:const size_t
_size	include/backends/mpi/L1/communicationManager.hpp	/^  int _size;$/;"	m	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:int
_size	include/backends/mpi/L1/instanceManager.hpp	/^  int _size;$/;"	m	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:int
_size	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  const size_t _size;$/;"	m	class:HiCR::runtime::DataObject	typeref:typename:const size_t
_size	include/hicr/L0/localMemorySlot.hpp	/^  const size_t _size;$/;"	m	class:HiCR::L0::LocalMemorySlot	typeref:typename:const size_t
_size	include/hicr/L0/memorySpace.hpp	/^  size_t _size;$/;"	m	class:HiCR::L0::MemorySpace	typeref:typename:size_t
_sizeInfoBuffer	include/frontends/channel/variableSize/spsc/producer.hpp	/^  std::shared_ptr<L0::LocalMemorySlot> _sizeInfoBuffer;$/;"	m	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:std::shared_ptr<L0::LocalMemorySlot>
_sourceLocalMemorySlot	include/hicr/L0/globalMemorySlot.hpp	/^  std::shared_ptr<HiCR::L0::LocalMemorySlot> const _sourceLocalMemorySlot = 0;$/;"	m	class:HiCR::L0::GlobalMemorySlot	typeref:typename:std::shared_ptr<HiCR::L0::LocalMemorySlot> const
_src	include/backends/ascend/memoryKernel.hpp	/^  const std::shared_ptr<HiCR::L0::LocalMemorySlot> _src;$/;"	m	class:HiCR::backend::ascend::MemoryKernel	typeref:typename:const std::shared_ptr<HiCR::L0::LocalMemorySlot>
_srcOffset	include/backends/ascend/memoryKernel.hpp	/^  const size_t _srcOffset;$/;"	m	class:HiCR::backend::ascend::MemoryKernel	typeref:typename:const size_t
_state	include/frontends/tasking/worker.hpp	/^  __volatile__ state_t _state = state_t::uninitialized;$/;"	m	class:HiCR::tasking::Worker	typeref:typename:__volatile__ state_t
_state	include/hicr/L0/executionState.hpp	/^  state_t _state = state_t::initialized;$/;"	m	class:HiCR::L0::ExecutionState	typeref:typename:state_t
_state	include/hicr/L0/processingUnit.hpp	/^  ProcessingUnit::state_t _state = ProcessingUnit::uninitialized;$/;"	m	class:HiCR::L0::ProcessingUnit	typeref:typename:ProcessingUnit::state_t
_staticConstructor	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static _staticConstructor = function() {$/;"	m	class:DoxygenAwesomeDarkModeToggle
_stream	include/backends/ascend/L0/executionState.hpp	/^  aclrtStream _stream;$/;"	m	class:HiCR::backend::ascend::L0::ExecutionState	typeref:typename:aclrtStream
_suspendedWorkerQueue	examples/tasking/runtime.hpp	/^  HiCR::common::ConcurrentQueue<HiCR::tasking::Worker *, MAX_SIMULTANEOUS_WORKERS> _suspendedWor/;"	m	class:taskr::Runtime	typeref:typename:HiCR::common::ConcurrentQueue<HiCR::tasking::Worker *,MAX_SIMULTANEOUS_WORKERS>
_syncEvent	include/backends/ascend/L0/executionState.hpp	/^  aclrtEvent _syncEvent;$/;"	m	class:HiCR::backend::ascend::L0::ExecutionState	typeref:typename:aclrtEvent
_tailAdvanceCounter	include/frontends/channel/circularBuffer.hpp	/^  __volatile__ size_t *const _tailAdvanceCounter;$/;"	m	class:HiCR::channel::CircularBuffer	typeref:typename:__volatile__ size_t * const
_taskCount	examples/tasking/runtime.hpp	/^  std::atomic<uint64_t> _taskCount;$/;"	m	class:taskr::Runtime	typeref:typename:std::atomic<uint64_t>
_taskDependencies	include/frontends/tasking/task.hpp	/^  std::vector<label_t> _taskDependencies;$/;"	m	class:HiCR::tasking::Task	typeref:typename:std::vector<label_t>
_tokenBuffer	include/frontends/channel/fixedSize/mpsc/producer.hpp	/^  const std::shared_ptr<L0::GlobalMemorySlot> _tokenBuffer;$/;"	m	class:HiCR::channel::fixedSize::MPSC::Producer	typeref:typename:const std::shared_ptr<L0::GlobalMemorySlot>
_tokenBuffer	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^  const std::shared_ptr<HiCR::L0::GlobalMemorySlot> _tokenBuffer;$/;"	m	class:HiCR::channel::fixedSize::SPSC::Consumer	typeref:typename:const std::shared_ptr<HiCR::L0::GlobalMemorySlot>
_tokenBuffer	include/frontends/channel/fixedSize/spsc/producer.hpp	/^  const std::shared_ptr<L0::GlobalMemorySlot> _tokenBuffer;$/;"	m	class:HiCR::channel::fixedSize::SPSC::Producer	typeref:typename:const std::shared_ptr<L0::GlobalMemorySlot>
_tokenBuffer	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  const std::shared_ptr<HiCR::L0::GlobalMemorySlot> _tokenBuffer;$/;"	m	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:const std::shared_ptr<HiCR::L0::GlobalMemorySlot>
_tokenBuffer	include/frontends/channel/variableSize/spsc/producer.hpp	/^  const std::shared_ptr<L0::GlobalMemorySlot> _tokenBuffer;$/;"	m	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:const std::shared_ptr<L0::GlobalMemorySlot>
_tokenSize	include/frontends/channel/base.hpp	/^  const size_t _tokenSize;$/;"	m	class:HiCR::channel::Base	typeref:typename:const size_t
_topology	include/backends/host/hwloc/L1/memoryManager.hpp	/^  const hwloc_topology_t *const _topology;$/;"	m	class:HiCR::backend::host::hwloc::L1::MemoryManager	typeref:typename:const hwloc_topology_t * const
_topology	include/backends/host/hwloc/L1/topologyManager.hpp	/^  hwloc_topology_t *const _topology;$/;"	m	class:HiCR::backend::host::hwloc::L1::TopologyManager	typeref:typename:hwloc_topology_t * const
_topologyManagers	include/frontends/machineModel/machineModel.hpp	/^  std::vector<HiCR::L1::TopologyManager *> _topologyManagers;$/;"	m	class:HiCR::MachineModel	typeref:typename:std::vector<HiCR::L1::TopologyManager * >
_topologyManagers	include/frontends/runtime/instance.hpp	/^  std::vector<HiCR::L1::TopologyManager *> _topologyManagers;$/;"	m	class:HiCR::runtime::Instance	typeref:typename:std::vector<HiCR::L1::TopologyManager * >
_topologyManagers	include/frontends/runtime/runtime.hpp	/^  std::vector<std::unique_ptr<HiCR::L1::TopologyManager>> _topologyManagers;$/;"	m	class:HiCR::Runtime	typeref:typename:std::vector<std::unique_ptr<HiCR::L1::TopologyManager>>
_type	include/backends/host/cache.hpp	/^  std::string _type;$/;"	m	class:HiCR::backend::host::Cache	typeref:typename:std::string
_usage	include/hicr/L0/memorySpace.hpp	/^  size_t _usage = 0;$/;"	m	class:HiCR::L0::MemorySpace	typeref:typename:size_t
_waitingTaskQueue	examples/tasking/runtime.hpp	/^  HiCR::common::ConcurrentQueue<HiCR::tasking::Task *, MAX_SIMULTANEOUS_TASKS> _waitingTaskQueue/;"	m	class:taskr::Runtime	typeref:typename:HiCR::common::ConcurrentQueue<HiCR::tasking::Task *,MAX_SIMULTANEOUS_TASKS>
_workers	examples/tasking/runtime.hpp	/^  std::vector<HiCR::tasking::Worker *> _workers;$/;"	m	class:taskr::Runtime	typeref:typename:std::vector<HiCR::tasking::Worker * >
_workers	include/frontends/runtime/coordinator.hpp	/^  std::vector<worker_t> _workers;$/;"	m	class:HiCR::runtime::Coordinator	typeref:typename:std::vector<worker_t>
a.anchor	extern/doxygen-awesome-css/doxygen-awesome.css	/^a.anchor {$/;"	c
a.anchorlink	extern/doxygen-awesome-css/doxygen-awesome.css	/^a.anchorlink {$/;"	c
a.anchorlink svg	extern/doxygen-awesome-css/doxygen-awesome.css	/^a.anchorlink svg {$/;"	s
a.anchorlink:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^a.anchorlink:hover {$/;"	c
a:active	extern/doxygen-awesome-css/doxygen-awesome.css	/^a:link, a:visited, a:hover, a:focus, a:active {$/;"	s
a:focus	extern/doxygen-awesome-css/doxygen-awesome.css	/^a:link, a:visited, a:hover, a:focus, a:active {$/;"	s
a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^a:link, a:visited, a:hover, a:focus, a:active {$/;"	s
a:link	extern/doxygen-awesome-css/doxygen-awesome.css	/^a:link, a:visited, a:hover, a:focus, a:active {$/;"	s
a:target + h2.memtitle	extern/doxygen-awesome-css/doxygen-awesome.css	/^a:target + h2.memtitle, a:target + h2.memtitle + div.memitem {$/;"	c
a:target + h2.memtitle + div.memitem	extern/doxygen-awesome-css/doxygen-awesome.css	/^a:target + h2.memtitle, a:target + h2.memtitle + div.memitem {$/;"	c
a:visited	extern/doxygen-awesome-css/doxygen-awesome.css	/^a:link, a:visited, a:hover, a:focus, a:active {$/;"	s
abcTasks	examples/tasking/abcTasks/meson.build	/^	  test('abcTasks', abcTasks, args : [ ], suite: testSuite )$/;"	t
abcTasks	examples/tasking/abcTasks/meson.build	/^	abcTasks = executable('abcTasks', [ 'source\/main.cpp'], dependencies: hicrBuildDep )$/;"	B
abcTasks	examples/tasking/abcTasks/meson.build	/^	abcTasks = executable('abcTasks', [ 'source\/main.cpp'], dependencies: hicrBuildDep )$/;"	V
abcTasks	examples/tasking/abcTasks/source/include/abcTasks.hpp	/^void abcTasks(HiCR::backend::host::L1::ComputeManager *computeManager, const HiCR::L0::Device::c/;"	f	typeref:typename:void
abcTasks	examples/tasking/meson.build	/^subdir('abcTasks')$/;"	S
abort	include/backends/mpi/L1/instanceManager.hpp	/^  __USED__ inline void abort(int errorCode) override$/;"	f	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:__USED__ void
abort	include/frontends/runtime/runtime.hpp	/^  __USED__ inline void abort(const int errorCode)$/;"	f	class:HiCR::Runtime	typeref:typename:__USED__ void
absl	extern/parallel_hashmap/phmap_fwd_decl.h	/^    namespace absl { template <class T> struct Hash; };$/;"	n
absl	extern/parallel_hashmap/phmap_utils.h	/^    namespace absl { template <class T> struct Hash; };$/;"	n
accept	extern/nlohmann_json/json.hpp	/^    bool accept(const bool strict = true)$/;"	f	class:detail::parser	typeref:typename:bool
accept	extern/nlohmann_json/json.hpp	/^    static bool accept(InputType&& i,$/;"	f	class:basic_json	typeref:typename:bool
accept	extern/nlohmann_json/json.hpp	/^    static bool accept(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:bool
accept	extern/nlohmann_json/json.hpp	/^    static bool accept(detail::span_input_adapter&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT JSON_HEDLEY_DEPRECATED_FOR (3.8.0,accept (ptr,ptr+len))bool
acquireGlobalLock	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline bool acquireGlobalLock(std::shared_ptr<L0::GlobalMemorySlot> memorySlot)$/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ bool
acquireGlobalLockImpl	include/backends/ascend/L1/communicationManager.hpp	/^  __USED__ inline bool acquireGlobalLockImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memoryS/;"	f	class:HiCR::backend::ascend::L1::CommunicationManager	typeref:typename:__USED__ bool
acquireGlobalLockImpl	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline bool acquireGlobalLockImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memoryS/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ bool
acquireGlobalLockImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline bool acquireGlobalLockImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memoryS/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ bool
acquireGlobalLockImpl	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline bool acquireGlobalLockImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memoryS/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ bool
actual_object_comparator	extern/nlohmann_json/json.hpp	/^struct actual_object_comparator$/;"	s	namespace:detail
actual_object_comparator_t	extern/nlohmann_json/json.hpp	/^using actual_object_comparator_t = typename actual_object_comparator<BasicJsonType>::type;$/;"	t	namespace:detail	typeref:typename:actual_object_comparator<BasicJsonType>::type
adapter_type	extern/nlohmann_json/json.hpp	/^           using adapter_type = decltype(input_adapter(begin(std::declval<ContainerType>()), end/;"	t	struct:detail::container_input_adapter_factory_impl::container_input_adapter_factory
adapter_type	extern/nlohmann_json/json.hpp	/^    using adapter_type = iterator_input_adapter<iterator_type>;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:iterator_input_adapter<iterator_type>
adapter_type	extern/nlohmann_json/json.hpp	/^    using adapter_type = wide_string_input_adapter<base_adapter_type, char_type>;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:wide_string_input_adapter<base_adapter_type,char_type>
add	extern/nlohmann_json/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
add	extern/nlohmann_json/json.hpp	/^    void add(char_int_type c)$/;"	f	class:detail::lexer	typeref:typename:void
addComputeResource	include/hicr/L0/device.hpp	/^  __USED__ inline void addComputeResource(std::shared_ptr<HiCR::L0::ComputeResource> computeReso/;"	f	class:HiCR::L0::Device	typeref:typename:__USED__ void
addDevice	include/hicr/L0/topology.hpp	/^  __USED__ inline void addDevice(const std::shared_ptr<HiCR::L0::Device> device) { _deviceList.i/;"	f	class:HiCR::L0::Topology	typeref:typename:__USED__ void
addMemorySpace	include/hicr/L0/device.hpp	/^  __USED__ inline void addMemorySpace(std::shared_ptr<HiCR::L0::MemorySpace> memorySpace) { _mem/;"	f	class:HiCR::L0::Device	typeref:typename:__USED__ void
addProcessingUnit	examples/tasking/runtime.hpp	/^  __USED__ inline void addProcessingUnit(std::unique_ptr<HiCR::L0::ProcessingUnit> pu)$/;"	f	class:taskr::Runtime	typeref:typename:__USED__ void
addProcessingUnit	include/frontends/tasking/worker.hpp	/^  __USED__ inline void addProcessingUnit(std::unique_ptr<HiCR::L0::ProcessingUnit> pu) { _proces/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ void
addRPCTarget	include/hicr/L1/instanceManager.hpp	/^  __USED__ inline void addRPCTarget(const std::string &RPCName, const RPCFunction_t fc)$/;"	f	class:HiCR::L1::InstanceManager	typeref:typename:__USED__ void
addTask	examples/tasking/runtime.hpp	/^  __USED__ inline void addTask(HiCR::tasking::Task *task)$/;"	f	class:taskr::Runtime	typeref:typename:__USED__ void
addTaskDependency	include/frontends/tasking/task.hpp	/^  __USED__ inline void addTaskDependency(const label_t task)$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ void
add_const_t	extern/parallel_hashmap/phmap_base.h	/^using add_const_t = typename std::add_const<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::add_const<T>::type
add_cv_t	extern/parallel_hashmap/phmap_base.h	/^using add_cv_t = typename std::add_cv<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::add_cv<T>::type
add_lvalue_reference_t	extern/parallel_hashmap/phmap_base.h	/^using add_lvalue_reference_t = typename std::add_lvalue_reference<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::add_lvalue_reference<T>::type
add_pointer_t	extern/parallel_hashmap/phmap_base.h	/^using add_pointer_t = typename std::add_pointer<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::add_pointer<T>::type
add_rvalue_reference_t	extern/parallel_hashmap/phmap_base.h	/^using add_rvalue_reference_t = typename std::add_rvalue_reference<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::add_rvalue_reference<T>::type
add_volatile_t	extern/parallel_hashmap/phmap_base.h	/^using add_volatile_t = typename std::add_volatile<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::add_volatile<T>::type
address.footer	extern/doxygen-awesome-css/doxygen-awesome.css	/^address.footer {$/;"	c
adl_barrier	extern/parallel_hashmap/phmap_base.h	/^namespace adl_barrier {$/;"	n	namespace:phmap::priv::internal_layout
adl_serializer	extern/nlohmann_json/json.hpp	/^struct adl_serializer$/;"	s
adopt_lock_t	extern/parallel_hashmap/phmap_base.h	/^    using adopt_lock_t  = boost::adopt_lock_t;$/;"	t	namespace:phmap	typeref:typename:boost::adopt_lock_t
advanceHead	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline void advanceHead(const size_t n = 1)$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ void
advancePayloadHead	include/frontends/channel/variableSize/spsc/producer.hpp	/^  void advancePayloadHead(const size_t n = 1)$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:void
advancePayloadTail	include/frontends/channel/variableSize/spsc/producer.hpp	/^  __USED__ inline void advancePayloadTail(const size_t n = 1)$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:__USED__ void
advanceTail	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline void advanceTail(const size_t n = 1)$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ void
algorithm	.vscode/settings.json	/^        "algorithm": "cpp",$/;"	s	object:files.associations
aligned_storage	extern/parallel_hashmap/phmap_base.h	/^struct aligned_storage {$/;"	s	namespace:phmap
aligned_storage_t	extern/parallel_hashmap/phmap_base.h	/^using aligned_storage_t = typename aligned_storage<Len, Align>::type;$/;"	t	namespace:phmap	typeref:typename:aligned_storage<Len,Align>::type
all	docs/Makefile	/^all: doxygen doxysphinx sphinx$/;"	t
all	extern/doxygen-awesome-css/Makefile	/^all:$/;"	t
all_integral	extern/nlohmann_json/json.hpp	/^using all_integral = conjunction<std::is_integral<Types>...>;$/;"	t	namespace:detail	typeref:typename:conjunction<std::is_integral<Types>...>
all_signed	extern/nlohmann_json/json.hpp	/^using all_signed = conjunction<std::is_signed<Types>...>;$/;"	t	namespace:detail	typeref:typename:conjunction<std::is_signed<Types>...>
all_unsigned	extern/nlohmann_json/json.hpp	/^using all_unsigned = conjunction<std::is_unsigned<Types>...>;$/;"	t	namespace:detail	typeref:typename:conjunction<std::is_unsigned<Types>...>
alloc	extern/parallel_hashmap/phmap.h	/^            const allocator_type& alloc;$/;"	m	struct:phmap::priv::parallel_hash_set::Inner::Params	typeref:typename:const allocator_type &
alloc	extern/parallel_hashmap/phmap_base.h	/^    allocator_type* alloc() { return std::addressof(*alloc_); }$/;"	f	class:phmap::priv::node_handle_base	typeref:typename:allocator_type *
alloc_	extern/parallel_hashmap/phmap.h	/^        allocator_type* alloc_;$/;"	m	class:phmap::priv::raw_hash_set::constructor	typeref:typename:allocator_type *
alloc_	extern/parallel_hashmap/phmap_base.h	/^    phmap::optional<allocator_type> alloc_;$/;"	m	class:phmap::priv::node_handle_base	typeref:typename:phmap::optional<allocator_type>
alloc_ref	extern/parallel_hashmap/phmap.h	/^    allocator_type&  alloc_ref()    { return sets_[0].set_.alloc_ref(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:allocator_type &
alloc_ref	extern/parallel_hashmap/phmap.h	/^    allocator_type& alloc_ref() { return settings_.template get<3>(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:allocator_type &
alloc_ref	extern/parallel_hashmap/phmap.h	/^    const allocator_type& alloc_ref() const { $/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const allocator_type &
alloc_ref	extern/parallel_hashmap/phmap.h	/^    const allocator_type& alloc_ref() const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const allocator_type &
allocate	extern/parallel_hashmap/btree.h	/^        node_type *allocate(const size_type sz) {$/;"	f	class:phmap::priv::btree	typeref:typename:node_type *
allocate	extern/parallel_hashmap/phmap_base.h	/^    static pointer allocate(Alloc& a,  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::allocator_traits	typeref:typename:pointer
allocate	extern/parallel_hashmap/phmap_base.h	/^    static pointer allocate(Alloc& a, size_type n,  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::allocator_traits	typeref:typename:pointer
allocateLocalDeviceMemorySlot	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> allocateLocalDeviceMemorySlot(const/;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
allocateLocalHostMemorySlot	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> allocateLocalHostMemorySlot(const s/;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
allocateLocalMemorySlot	include/hicr/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<L0::LocalMemorySlot> allocateLocalMemorySlot(std::shared_ptr<L/;"	f	class:HiCR::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<L0::LocalMemorySlot>
allocateLocalMemorySlotImpl	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> allocateLocalMemorySlotImpl(std::sh/;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
allocateLocalMemorySlotImpl	include/backends/host/hwloc/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> allocateLocalMemorySlotImpl(std::sh/;"	f	class:HiCR::backend::host::hwloc::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
allocateLocalMemorySlotImpl	include/backends/lpf/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> allocateLocalMemorySlotImpl(std::sh/;"	f	class:HiCR::backend::lpf::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
allocateLocalMemorySlotImpl	include/backends/mpi/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> allocateLocalMemorySlotImpl(std::sh/;"	f	class:HiCR::backend::mpi::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
allocate_impl	extern/parallel_hashmap/phmap_base.h	/^    static auto allocate_impl(int, A& a,  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::allocator_traits	typeref:typename:decltype(a.allocate (n,hint))
allocate_impl	extern/parallel_hashmap/phmap_base.h	/^    static pointer allocate_impl(char, Alloc& a,  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::allocator_traits	typeref:typename:pointer
allocator	extern/parallel_hashmap/btree.h	/^        const allocator_type &allocator() const noexcept {$/;"	f	class:phmap::priv::btree	typeref:typename:const allocator_type &
allocator_is_nothrow	extern/parallel_hashmap/phmap_base.h	/^    struct allocator_is_nothrow<std::allocator<T>> : std::true_type {};$/;"	s	namespace:phmap
allocator_is_nothrow	extern/parallel_hashmap/phmap_base.h	/^struct allocator_is_nothrow$/;"	s	namespace:phmap
allocator_traits	extern/parallel_hashmap/phmap_base.h	/^struct allocator_traits $/;"	s	namespace:phmap
allocator_type	extern/nlohmann_json/json.hpp	/^    using allocator_type = AllocatorType<basic_json>;$/;"	t	class:basic_json	typeref:typename:AllocatorType<basic_json>
allocator_type	extern/parallel_hashmap/btree.h	/^        using allocator_type = Alloc;$/;"	t	struct:phmap::priv::common_params	typeref:typename:Alloc
allocator_type	extern/parallel_hashmap/btree.h	/^        using allocator_type = typename Params::allocator_type;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::allocator_type
allocator_type	extern/parallel_hashmap/btree.h	/^        using allocator_type = typename Params::allocator_type;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::allocator_type
allocator_type	extern/parallel_hashmap/btree.h	/^        using allocator_type = typename Tree::allocator_type;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::allocator_type
allocator_type	extern/parallel_hashmap/btree.h	/^        using allocator_type = typename Tree::allocator_type;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:Tree::allocator_type
allocator_type	extern/parallel_hashmap/btree.h	/^        using allocator_type = typename Tree::allocator_type;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:Tree::allocator_type
allocator_type	extern/parallel_hashmap/btree.h	/^        using allocator_type = typename Tree::allocator_type;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:Tree::allocator_type
allocator_type	extern/parallel_hashmap/phmap.h	/^    using allocator_type  = Alloc;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:Alloc
allocator_type	extern/parallel_hashmap/phmap.h	/^    using allocator_type = Alloc;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:Alloc
allocator_type	extern/parallel_hashmap/phmap_base.h	/^    using allocator_type = Alloc;$/;"	t	class:phmap::priv::node_handle_base	typeref:typename:Alloc
allocator_type	extern/parallel_hashmap/phmap_base.h	/^    using allocator_type = Alloc;$/;"	t	struct:phmap::allocator_traits	typeref:typename:Alloc
allow_exceptions	extern/nlohmann_json/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:const bool
allow_exceptions	extern/nlohmann_json/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:const bool
allow_exceptions	extern/nlohmann_json/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:detail::parser	typeref:typename:const bool
anchor	extern/nlohmann_json/json.hpp	/^    IteratorType anchor{};$/;"	m	class:detail::iteration_proxy_value	typeref:typename:IteratorType
any	.vscode/settings.json	/^        "any": "cpp",$/;"	s	object:files.associations
append_exponent	extern/nlohmann_json/json.hpp	/^inline char* append_exponent(char* buf, int e)$/;"	f	namespace:detail::dtoa_impl
apply	extern/parallel_hashmap/phmap.h	/^        apply(F&& f, Args&&... args) {$/;"	f	class:phmap::priv::NodeHashMapPolicy	typeref:typename:decltype(phmap::priv::DecomposePair (std::declval<F> (),std::declval<Args> ()...))
apply	extern/parallel_hashmap/phmap.h	/^        apply(F&& f, Args&&... args) {$/;"	f	struct:phmap::priv::NodeHashSetPolicy	typeref:typename:decltype(phmap::priv::DecomposeValue (std::declval<F> (),std::declval<Args> ()...))
apply	extern/parallel_hashmap/phmap.h	/^    apply(F&& f, Args&&... args) {$/;"	f	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:decltype(phmap::priv::DecomposePair (std::declval<F> (),std::declval<Args> ()...))
apply	extern/parallel_hashmap/phmap.h	/^    apply(F&& f, Args&&... args) {$/;"	f	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:decltype(phmap::priv::DecomposeValue (std::declval<F> (),std::declval<Args> ()...))
apply	extern/parallel_hashmap/phmap.h	/^    static auto apply(Ts&&... ts) -> decltype(P::apply(std::forward<Ts>(ts)...)) {$/;"	f	struct:phmap::priv::node_hash_policy	typeref:typename:decltype(P::apply (std::forward<Ts> (ts)...))
apply	extern/parallel_hashmap/phmap_base.h	/^    static auto apply(F&& f, Ts&&... ts)$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:decltype(P::apply (std::forward<F> (f),std::forward<Ts> (ts)...))
apply	extern/parallel_hashmap/phmap_base.h	/^auto apply(Functor&& functor, Tuple&& t)$/;"	f	namespace:phmap	typeref:typename:decltype(utility_internal::apply_helper (phmap::forward<Functor> (functor),phmap::forward<Tuple> (t),phmap::make_index_sequence<std::tuple_size<typename std::remove_reference<Tuple>::type>::value>{}))
apply_helper	extern/parallel_hashmap/phmap_base.h	/^auto apply_helper(Functor&& functor, Tuple&& t, index_sequence<Indexes...>)$/;"	f	namespace:phmap::utility_internal	typeref:typename:decltype(phmap::base_internal::Invoke (phmap::forward<Functor> (functor),std::get<Indexes> (phmap::forward<Tuple> (t))...))
argument_type	extern/parallel_hashmap/phmap_base.h	/^    using argument_type = phmap::optional<T>;$/;"	t	struct:phmap::optional_internal::optional_hash_base	typeref:typename:phmap::optional<T>
argument_type	extern/parallel_hashmap/phmap_utils.h	/^    typedef ArgumentType argument_type;$/;"	t	struct:phmap::phmap_unary_function	typeref:typename:ArgumentType
array	.vscode/settings.json	/^        "array": "cpp",$/;"	s	object:files.associations
array	extern/nlohmann_json/json.hpp	/^        array_t* array;$/;"	m	union:basic_json::json_value	typeref:typename:array_t *
array	extern/nlohmann_json/json.hpp	/^    array,            \/\/\/< array (ordered collection of values)$/;"	e	enum:detail::value_t
array	extern/nlohmann_json/json.hpp	/^    static basic_json array(initializer_list_t init = {})$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
array	extern/parallel_hashmap/phmap_base.h	/^    using array = std::unique_ptr<T[]>;$/;"	t	struct:phmap::memory_internal::MakeUniqueResult	typeref:typename:std::unique_ptr<T[]>
array_end	extern/nlohmann_json/json.hpp	/^    array_end,$/;"	e	enum:detail::parse_event_t
array_index	extern/nlohmann_json/json.hpp	/^    static typename BasicJsonType::size_type array_index(const string_t& s)$/;"	f	class:json_pointer	typeref:typename:BasicJsonType::size_type
array_index	extern/nlohmann_json/json.hpp	/^    std::size_t array_index = 0;$/;"	m	class:detail::iteration_proxy_value	typeref:typename:std::size_t
array_index_last	extern/nlohmann_json/json.hpp	/^    mutable std::size_t array_index_last = 0;$/;"	m	class:detail::iteration_proxy_value	typeref:typename:std::size_t
array_index_str	extern/nlohmann_json/json.hpp	/^    mutable string_type array_index_str = "0";$/;"	m	class:detail::iteration_proxy_value	typeref:typename:string_type
array_iterator	extern/nlohmann_json/json.hpp	/^    typename BasicJsonType::array_t::iterator array_iterator {};$/;"	m	struct:detail::internal_iterator	typeref:typename:BasicJsonType::array_t::iterator
array_start	extern/nlohmann_json/json.hpp	/^    array_start,$/;"	e	enum:detail::parse_event_t
array_t	extern/nlohmann_json/json.hpp	/^    using array_t = ArrayType<basic_json, AllocatorType<basic_json>>;$/;"	t	class:basic_json	typeref:typename:ArrayType<basic_json,AllocatorType<basic_json>>
array_t	extern/nlohmann_json/json.hpp	/^    using array_t = typename BasicJsonType::array_t;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::array_t
ascend	examples/hicr/kernel/meson.build	/^	  test('ascend', ascend, args : [ ], is_parallel: false, suite: testSuite )$/;"	t
ascend	examples/hicr/kernel/meson.build	/^	ascend = executable('ascend', [ 'source\/ascend.cpp'], dependencies: hicrBuildDep)$/;"	B
ascend	examples/hicr/kernel/meson.build	/^	ascend = executable('ascend', [ 'source\/ascend.cpp'], dependencies: hicrBuildDep)$/;"	V
ascend	examples/hicr/memcpy/meson.build	/^	  test('ascend', ascend, args : [ ], is_parallel: false, timeout: test_timeout, suite: testSuit/;"	t
ascend	examples/hicr/memcpy/meson.build	/^	ascend = executable('ascend', [ 'source\/ascend.cpp'], dependencies: hicrBuildDep)$/;"	B
ascend	examples/hicr/memcpy/meson.build	/^	ascend = executable('ascend', [ 'source\/ascend.cpp'], dependencies: hicrBuildDep)$/;"	V
ascend	examples/hicr/topology/meson.build	/^	  test('ascend', ascend, timeout: test_timeout, suite: testSuite )$/;"	t
ascend	examples/hicr/topology/meson.build	/^	ascend = executable('ascend', [ 'source\/ascend.cpp'], dependencies: hicrBuildDep, include_dire/;"	B
ascend	examples/hicr/topology/meson.build	/^	ascend = executable('ascend', [ 'source\/ascend.cpp'], dependencies: hicrBuildDep, include_dire/;"	V
ascend	include/backends/ascend/L0/computeResource.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L0/device.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L0/executionState.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L0/executionUnit.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L0/localMemorySlot.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L0/memorySpace.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L0/processingUnit.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L1/communicationManager.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L1/computeManager.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L1/memoryManager.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/L1/topologyManager.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/common.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/computationKernel.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/core.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/kernel.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
ascend	include/backends/ascend/memoryKernel.hpp	/^namespace ascend$/;"	n	namespace:HiCR::backend
assert_invariant	extern/nlohmann_json/json.hpp	/^    void assert_invariant(bool check_parents = true) const noexcept$/;"	f	class:basic_json	typeref:typename:void
assign	extern/parallel_hashmap/phmap_base.h	/^    void assign(U&& u) {$/;"	f	class:phmap::optional_internal::optional_data_base	typeref:typename:void
at	extern/nlohmann_json/json.hpp	/^    T & at(KeyType && key)$/;"	f	struct:ordered_map	typeref:typename:T &
at	extern/nlohmann_json/json.hpp	/^    T& at(const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:T &
at	extern/nlohmann_json/json.hpp	/^    const T & at(KeyType && key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
at	extern/nlohmann_json/json.hpp	/^    const T& at(const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
at	extern/nlohmann_json/json.hpp	/^    const_reference at(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/nlohmann_json/json.hpp	/^    const_reference at(const ::nlohmann::json_pointer<BasicJsonType>& ptr) const$/;"	f	class:basic_json
at	extern/nlohmann_json/json.hpp	/^    const_reference at(const json_pointer& ptr) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/nlohmann_json/json.hpp	/^    const_reference at(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/nlohmann_json/json.hpp	/^    const_reference at(size_type idx) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/nlohmann_json/json.hpp	/^    reference at(KeyType && key)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/nlohmann_json/json.hpp	/^    reference at(const ::nlohmann::json_pointer<BasicJsonType>& ptr)$/;"	f	class:basic_json
at	extern/nlohmann_json/json.hpp	/^    reference at(const json_pointer& ptr)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/nlohmann_json/json.hpp	/^    reference at(const typename object_t::key_type& key)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/nlohmann_json/json.hpp	/^    reference at(size_type idx)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/parallel_hashmap/btree.h	/^        const mapped_type &at(const key_arg<K> &key) const {$/;"	f	class:phmap::priv::btree_map_container	typeref:typename:const mapped_type &
at	extern/parallel_hashmap/btree.h	/^        mapped_type &at(const key_arg<K> &key) {$/;"	f	class:phmap::priv::btree_map_container	typeref:typename:mapped_type &
at	extern/parallel_hashmap/phmap.h	/^    MappedConstReference<P> at(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:MappedConstReference<P>
at	extern/parallel_hashmap/phmap.h	/^    MappedConstReference<P> at(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:MappedConstReference<P>
at	extern/parallel_hashmap/phmap.h	/^    MappedReference<P> at(const key_arg<K>& key) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:MappedReference<P>
at	extern/parallel_hashmap/phmap.h	/^    MappedReference<P> at(const key_arg<K>& key) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:MappedReference<P>
at	extern/parallel_hashmap/phmap_base.h	/^    constexpr reference at(size_type i) const {$/;"	f	class:phmap::Span	typeref:typename:reference
atomic	.vscode/settings.json	/^        "atomic": "cpp",$/;"	s	object:files.associations
atomic_queue	extern/atomic_queue/atomic_queue.h	/^namespace atomic_queue {$/;"	n
atomic_queue	extern/atomic_queue/defs.h	/^namespace atomic_queue {$/;"	n
author	docs/source/conf.py	/^author = 'Sergio Martin'$/;"	v
author	extern/doxygen-awesome-css/package.json	/^  "author": {$/;"	o
average_bytes_per_value	extern/parallel_hashmap/btree.h	/^        static double average_bytes_per_value() {$/;"	f	class:phmap::priv::btree	typeref:typename:double
await	include/frontends/tasking/worker.hpp	/^  __USED__ inline void await()$/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ void
await	include/hicr/L0/processingUnit.hpp	/^  __USED__ inline void await()$/;"	f	class:HiCR::L0::ProcessingUnit	typeref:typename:__USED__ void
awaitImpl	include/backends/ascend/L0/processingUnit.hpp	/^  __USED__ inline void awaitImpl() override$/;"	f	class:HiCR::backend::ascend::L0::ProcessingUnit	typeref:typename:__USED__ void
awaitImpl	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ inline void awaitImpl() override$/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ void
back	extern/nlohmann_json/json.hpp	/^    const string_t& back() const$/;"	f	class:json_pointer	typeref:typename:const string_t &
back	extern/nlohmann_json/json.hpp	/^    const_reference back() const$/;"	f	class:basic_json	typeref:typename:const_reference
back	extern/nlohmann_json/json.hpp	/^    reference back()$/;"	f	class:basic_json	typeref:typename:reference
back	extern/parallel_hashmap/phmap_base.h	/^    constexpr reference back() const noexcept {$/;"	f	class:phmap::Span	typeref:typename:reference
backend	include/backends/ascend/L0/computeResource.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L0/device.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L0/executionState.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L0/executionUnit.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L0/localMemorySlot.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L0/memorySpace.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L0/processingUnit.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L1/communicationManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L1/computeManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L1/memoryManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/L1/topologyManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/common.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/computationKernel.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/core.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/kernel.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/ascend/memoryKernel.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/L0/computeResource.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/L0/device.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/L0/executionState.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/L0/executionUnit.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/L0/globalMemorySlot.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/L0/memorySpace.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/L1/computeManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/cache.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/coroutine.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/hwloc/L0/computeResource.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/hwloc/L0/device.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/hwloc/L0/memorySpace.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/hwloc/L1/memoryManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/hwloc/L1/topologyManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/pthreads/L0/processingUnit.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/pthreads/L1/communicationManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/host/pthreads/L1/computeManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/lpf/L0/globalMemorySlot.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/lpf/L0/localMemorySlot.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/lpf/L1/communicationManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/lpf/L1/memoryManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/mpi/L0/globalMemorySlot.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/mpi/L0/instance.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/mpi/L1/communicationManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/mpi/L1/instanceManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backend	include/backends/mpi/L1/memoryManager.hpp	/^namespace backend$/;"	n	namespace:HiCR
backendCppArgs	include/backends/ascend/meson.build	/^backendCppArgs = [$/;"	V
backendCppArgs	include/backends/host/hwloc/meson.build	/^backendCppArgs = [$/;"	V
backendCppArgs	include/backends/host/pthreads/meson.build	/^backendCppArgs = [$/;"	V
backendCppArgs	include/backends/lpf/meson.build	/^backendCppArgs = [$/;"	V
backendCppArgs	include/backends/mpi/meson.build	/^backendCppArgs = [$/;"	V
backendDependencies	include/backends/ascend/meson.build	/^backendDependencies = [ ]$/;"	V
backendDependencies	include/backends/host/hwloc/meson.build	/^backendDependencies = [$/;"	V
backendDependencies	include/backends/host/pthreads/meson.build	/^backendDependencies = [$/;"	V
backendDependencies	include/backends/lpf/meson.build	/^backendDependencies = [$/;"	V
backendDependencies	include/backends/mpi/meson.build	/^backendDependencies = [$/;"	V
backendIncludes	include/backends/ascend/meson.build	/^backendIncludes = include_directories([$/;"	V
backendIncludes	include/backends/host/hwloc/meson.build	/^backendIncludes = include_directories([$/;"	V
backendIncludes	include/backends/host/pthreads/meson.build	/^backendIncludes = include_directories([$/;"	V
backendIncludes	include/backends/lpf/meson.build	/^backendIncludes = include_directories([$/;"	V
backendIncludes	include/backends/mpi/meson.build	/^backendIncludes = include_directories([$/;"	V
backendLinkArgs	include/backends/ascend/meson.build	/^backendLinkArgs = [$/;"	V
backendLinkArgs	include/backends/host/hwloc/meson.build	/^backendLinkArgs = [$/;"	V
backendLinkArgs	include/backends/host/pthreads/meson.build	/^backendLinkArgs = [$/;"	V
backendLinkArgs	include/backends/lpf/meson.build	/^backendLinkArgs = [$/;"	V
backendLinkArgs	include/backends/mpi/meson.build	/^backendLinkArgs = [$/;"	V
backends	meson_options.txt	/^option('backends', type : 'array', choices : ['hwloc', 'pthreads', 'mpi', 'lpf',  'ascend'], $/;"	a
backends	tests/meson.build	/^subdir('backends')$/;"	S
bad_optional_access	extern/parallel_hashmap/phmap_base.h	/^class bad_optional_access : public std::exception $/;"	c	namespace:phmap
barrier	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void barrier()$/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
base	extern/parallel_hashmap/phmap_base.h	/^    using base = optional_data_dtor_base<T>;$/;"	t	class:phmap::optional_internal::optional_data_base	typeref:typename:optional_data_dtor_base<T>
basePeek	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  __USED__ inline size_t basePeek(const size_t pos = 0)$/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:__USED__ size_t
base_adapter	extern/nlohmann_json/json.hpp	/^    BaseInputAdapter base_adapter;$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:BaseInputAdapter
base_adapter_type	extern/nlohmann_json/json.hpp	/^    using base_adapter_type = iterator_input_adapter<iterator_type>;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:iterator_input_adapter<iterator_type>
base_internal	extern/parallel_hashmap/phmap_base.h	/^namespace base_internal {$/;"	n	namespace:phmap
base_internal	extern/parallel_hashmap/phmap_bits.h	/^namespace base_internal {$/;"	n	namespace:phmap
base_iterator	extern/nlohmann_json/json.hpp	/^    using base_iterator = std::reverse_iterator<Base>;$/;"	t	class:detail::json_reverse_iterator	typeref:typename:std::reverse_iterator<Base>
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(CompatibleType && val) noexcept(noexcept( \/\/ NOLINT(bugprone-forwarding-referen/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(InputIT first, InputIT last)$/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(basic_json&& other) noexcept$/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(const BasicJsonType& val)$/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(const JsonRef& ref) : basic_json(ref.moved_or_copied()) {}$/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(const basic_json& other)$/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(const value_t v)$/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(initializer_list_t init,$/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(size_type cnt, const basic_json& val)$/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^    basic_json(std::nullptr_t = nullptr) noexcept \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json
basic_json	extern/nlohmann_json/json.hpp	/^class basic_json \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member-fun/;"	c
basic_json_t	extern/nlohmann_json/json.hpp	/^    using basic_json_t = NLOHMANN_BASIC_JSON_TPL;$/;"	t	class:basic_json	typeref:typename:NLOHMANN_BASIC_JSON_TPL
basics	docs/source/using/basics.rst	/^.. _basics:$/;"	T
begin	extern/nlohmann_json/json.hpp	/^    const_iterator begin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
begin	extern/nlohmann_json/json.hpp	/^    iteration_proxy_value<IteratorType> begin() const noexcept$/;"	f	class:detail::iteration_proxy	typeref:typename:iteration_proxy_value<IteratorType>
begin	extern/nlohmann_json/json.hpp	/^    iterator begin() noexcept$/;"	f	class:basic_json	typeref:typename:iterator
begin	extern/parallel_hashmap/btree.h	/^        const_iterator begin() const           { return tree_.begin(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:const_iterator
begin	extern/parallel_hashmap/btree.h	/^        const_iterator begin() const {$/;"	f	class:phmap::priv::btree	typeref:typename:const_iterator
begin	extern/parallel_hashmap/btree.h	/^        iterator begin()                       { return tree_.begin(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:iterator
begin	extern/parallel_hashmap/btree.h	/^        iterator begin() {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
begin	extern/parallel_hashmap/phmap.h	/^    BitMask begin() const { return *this; }$/;"	f	class:phmap::priv::BitMask	typeref:typename:BitMask
begin	extern/parallel_hashmap/phmap.h	/^    const_iterator begin()  const { return const_cast<parallel_hash_set *>(this)->begin(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const_iterator
begin	extern/parallel_hashmap/phmap.h	/^    const_iterator begin() const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const_iterator
begin	extern/parallel_hashmap/phmap.h	/^    iterator begin() {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
begin	extern/parallel_hashmap/phmap.h	/^    iterator begin() {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
begin	extern/parallel_hashmap/phmap_base.h	/^    constexpr iterator begin() const noexcept { return data(); }$/;"	f	class:phmap::Span	typeref:typename:iterator
begin_array	extern/nlohmann_json/json.hpp	/^        begin_array,      \/\/\/< the character for array begin `[`$/;"	e	enum:detail::lexer_base::token_type
begin_object	extern/nlohmann_json/json.hpp	/^        begin_object,     \/\/\/< the character for object begin `{`$/;"	e	enum:detail::lexer_base::token_type
begin_value	extern/nlohmann_json/json.hpp	/^    static constexpr difference_type begin_value = 0;$/;"	m	class:detail::primitive_iterator_t	typeref:typename:difference_type
big_endian	extern/parallel_hashmap/phmap_bits.h	/^namespace big_endian {$/;"	n	namespace:phmap
binary	extern/nlohmann_json/json.hpp	/^        binary_t* binary;$/;"	m	union:basic_json::json_value	typeref:typename:binary_t *
binary	extern/nlohmann_json/json.hpp	/^    binary,           \/\/\/< binary array (ordered collection of bytes)$/;"	e	enum:detail::value_t
binary	extern/nlohmann_json/json.hpp	/^    bool binary(binary_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
binary	extern/nlohmann_json/json.hpp	/^    bool binary(binary_t& val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
binary	extern/nlohmann_json/json.hpp	/^    bool binary(binary_t& val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
binary	extern/nlohmann_json/json.hpp	/^    static basic_json binary(const typename binary_t::container_type& init)$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/nlohmann_json/json.hpp	/^    static basic_json binary(const typename binary_t::container_type& init, typename binary_t::s/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/nlohmann_json/json.hpp	/^    static basic_json binary(typename binary_t::container_type&& init)$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/nlohmann_json/json.hpp	/^    static basic_json binary(typename binary_t::container_type&& init, typename binary_t::subtyp/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary_char_t	extern/nlohmann_json/json.hpp	/^    using binary_char_t = typename BasicJsonType::binary_t::value_type;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::binary_t::value_type
binary_function_t	extern/nlohmann_json/json.hpp	/^using binary_function_t =$/;"	t	namespace:detail
binary_reader	extern/nlohmann_json/json.hpp	/^    explicit binary_reader(InputAdapterType&& adapter, const input_format_t format = input_forma/;"	f	class:detail::binary_reader
binary_reader	extern/nlohmann_json/json.hpp	/^    using binary_reader = ::nlohmann::detail::binary_reader<basic_json, InputType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::binary_reader<basic_json,InputType>
binary_reader	extern/nlohmann_json/json.hpp	/^class binary_reader$/;"	c	namespace:detail
binary_search	extern/parallel_hashmap/btree.h	/^        binary_search(const K &k, const Compare &comp) const {$/;"	f	class:phmap::priv::btree_node	typeref:typename:SearchResult<int,btree_is_key_compare_to<Compare,key_type>::value>
binary_search_impl	extern/parallel_hashmap/btree.h	/^        SearchResult<int, false> binary_search_impl($/;"	f	class:phmap::priv::btree_node	typeref:typename:SearchResult<int,false>
binary_search_impl	extern/parallel_hashmap/btree.h	/^        SearchResult<int, true> binary_search_impl($/;"	f	class:phmap::priv::btree_node	typeref:typename:SearchResult<int,true>
binary_t	extern/nlohmann_json/json.hpp	/^    using binary_t = nlohmann::byte_container_with_subtype<BinaryType>;$/;"	t	class:basic_json	typeref:typename:nlohmann::byte_container_with_subtype<BinaryType>
binary_t	extern/nlohmann_json/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::binary_t
binary_t	extern/nlohmann_json/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::binary_writer	typeref:typename:BasicJsonType::binary_t
binary_t	extern/nlohmann_json/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::binary_t
binary_t	extern/nlohmann_json/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::binary_t
binary_t	extern/nlohmann_json/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::binary_t
binary_t	extern/nlohmann_json/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::binary_t
binary_t	extern/nlohmann_json/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::binary_t
binary_t	extern/nlohmann_json/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::binary_t
binary_writer	extern/nlohmann_json/json.hpp	/^    explicit binary_writer(output_adapter_t<CharType> adapter) : oa(std::move(adapter))$/;"	f	class:detail::binary_writer
binary_writer	extern/nlohmann_json/json.hpp	/^    template<typename CharType> using binary_writer = ::nlohmann::detail::binary_writer<basic_js/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::binary_writer<basic_json,CharType>
binary_writer	extern/nlohmann_json/json.hpp	/^class binary_writer$/;"	c	namespace:detail
binding_type	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^  enum binding_type$/;"	g	class:HiCR::backend::host::hwloc::L0::LocalMemorySlot
bit	.vscode/settings.json	/^        "bit": "cpp",$/;"	s	object:files.associations
bits	extern/atomic_queue/atomic_queue.h	/^    static int constexpr bits = GetCacheLineIndexBits<elements_per_cache_line>::value;$/;"	m	struct:atomic_queue::details::GetIndexShuffleBits	typeref:typename:int 
bits	extern/parallel_hashmap/phmap_bits.h	/^namespace bits {$/;"	n	namespace:phmap
bits_type	extern/nlohmann_json/json.hpp	/^    using bits_type = typename std::conditional<kPrecision == 24, std::uint32_t, std::uint64_t >/;"	t	function:detail::dtoa_impl::compute_boundaries	typeref:typename:std::conditional<kPrecision==24,std::uint32_t,std::uint64_t>::type
bitset	.vscode/settings.json	/^        "bitset": "cpp",$/;"	s	object:files.associations
bjd_type	extern/nlohmann_json/json.hpp	/^    using bjd_type = std::pair<char_int_type, string_t>;$/;"	t	class:detail::binary_reader	typeref:typename:std::pair<char_int_type,string_t>
bjdata	extern/nlohmann_json/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
blockquote	extern/doxygen-awesome-css/doxygen-awesome.css	/^blockquote {$/;"	s
blockquote p	extern/doxygen-awesome-css/doxygen-awesome.css	/^blockquote p {$/;"	s
blockquote::after	extern/doxygen-awesome-css/doxygen-awesome.css	/^blockquote::after {$/;"	s
blockquote::after	extern/doxygen-awesome-css/doxygen-awesome.css	/^blockquote::before, blockquote::after {$/;"	s
blockquote::before	extern/doxygen-awesome-css/doxygen-awesome.css	/^blockquote::before {$/;"	s
blockquote::before	extern/doxygen-awesome-css/doxygen-awesome.css	/^blockquote::before, blockquote::after {$/;"	s
blue	extern/doxygen-awesome-css/include/MyLibrary/example.hpp	/^  blue$/;"	e	enum:MyLibrary::Color
body	extern/doxygen-awesome-css/doxygen-awesome.css	/^body {$/;"	s
body	extern/doxygen-awesome-css/doxygen-awesome.css	/^body, table, div, p, dl, #nav-tree .label, .title,$/;"	s
bold	extern/run-clang-format/run-clang-format.py	/^    def bold(s):$/;"	f	function:colorize	file:
bold_red	extern/run-clang-format/run-clang-format.py	/^def bold_red(s):$/;"	f
bool_constant	extern/nlohmann_json/json.hpp	/^using bool_constant = std::integral_constant<bool, Value>;$/;"	t	namespace:detail	typeref:typename:std::integral_constant<bool,Value>
boolean	extern/nlohmann_json/json.hpp	/^        boolean_t boolean;$/;"	m	union:basic_json::json_value	typeref:typename:boolean_t
boolean	extern/nlohmann_json/json.hpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
boolean	extern/nlohmann_json/json.hpp	/^    bool boolean(bool val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
boolean	extern/nlohmann_json/json.hpp	/^    bool boolean(bool val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
boolean	extern/nlohmann_json/json.hpp	/^    boolean,          \/\/\/< boolean value$/;"	e	enum:detail::value_t
boolean_function_t	extern/nlohmann_json/json.hpp	/^using boolean_function_t =$/;"	t	namespace:detail
boolean_t	extern/nlohmann_json/json.hpp	/^    using boolean_t = BooleanType;$/;"	t	class:basic_json	typeref:typename:BooleanType
boundaries	extern/nlohmann_json/json.hpp	/^struct boundaries$/;"	s	namespace:detail::dtoa_impl
bson	extern/nlohmann_json/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
btree	extern/parallel_hashmap/btree.h	/^        btree(btree &&x) noexcept$/;"	f	class:phmap::priv::btree
btree	extern/parallel_hashmap/btree.h	/^    btree<P>::btree(const btree &x) : btree(x.key_comp(), x.allocator()) {$/;"	f	class:phmap::priv::btree
btree	extern/parallel_hashmap/btree.h	/^    btree<P>::btree(const key_compare &comp, const allocator_type &alloc)$/;"	f	class:phmap::priv::btree
btree	extern/parallel_hashmap/btree.h	/^    class btree {$/;"	c	namespace:phmap::priv
btree_container	extern/parallel_hashmap/btree.h	/^        btree_container() : tree_(key_compare(), allocator_type()) {}$/;"	f	class:phmap::priv::btree_container
btree_container	extern/parallel_hashmap/btree.h	/^        explicit btree_container(const key_compare &comp,$/;"	f	class:phmap::priv::btree_container
btree_container	extern/parallel_hashmap/btree.h	/^    class btree_container {$/;"	c	namespace:phmap::priv
btree_is_key_compare_to	extern/parallel_hashmap/btree.h	/^    using btree_is_key_compare_to =$/;"	t	namespace:phmap::priv	typeref:typename:std::is_convertible<phmap::invoke_result_t<Compare,const T &,const T &>,phmap::weak_ordering>
btree_iterator	extern/parallel_hashmap/btree.h	/^            btree_iterator(const btree_iterator<N, R, P> &x)  \/\/ NOLINT$/;"	f	struct:phmap::priv::btree_iterator
btree_iterator	extern/parallel_hashmap/btree.h	/^            explicit btree_iterator(const btree_iterator<N, R, P> &x)$/;"	f	struct:phmap::priv::btree_iterator
btree_iterator	extern/parallel_hashmap/btree.h	/^        btree_iterator() : node(nullptr), position(-1) {}$/;"	f	struct:phmap::priv::btree_iterator
btree_iterator	extern/parallel_hashmap/btree.h	/^        btree_iterator(Node *n, int p) : node(n), position(p) {}$/;"	f	struct:phmap::priv::btree_iterator
btree_iterator	extern/parallel_hashmap/btree.h	/^    struct btree_iterator {$/;"	s	namespace:phmap::priv
btree_map	extern/parallel_hashmap/btree.h	/^        btree_map() {}$/;"	f	class:phmap::btree_map
btree_map	extern/parallel_hashmap/btree.h	/^        class btree_map : public priv::btree_map_container<$/;"	c	namespace:phmap
btree_map_container	extern/parallel_hashmap/btree.h	/^        btree_map_container() {}$/;"	f	class:phmap::priv::btree_map_container
btree_map_container	extern/parallel_hashmap/btree.h	/^    class btree_map_container : public btree_set_container<Tree> {$/;"	c	namespace:phmap::priv
btree_multimap	extern/parallel_hashmap/btree.h	/^        btree_multimap() {}$/;"	f	class:phmap::btree_multimap
btree_multimap	extern/parallel_hashmap/btree.h	/^        class btree_multimap : public priv::btree_multimap_container<$/;"	c	namespace:phmap
btree_multimap_container	extern/parallel_hashmap/btree.h	/^        btree_multimap_container() {}$/;"	f	class:phmap::priv::btree_multimap_container
btree_multimap_container	extern/parallel_hashmap/btree.h	/^    class btree_multimap_container : public btree_multiset_container<Tree> {$/;"	c	namespace:phmap::priv
btree_multiset	extern/parallel_hashmap/btree.h	/^        btree_multiset() {}$/;"	f	class:phmap::btree_multiset
btree_multiset	extern/parallel_hashmap/btree.h	/^        class btree_multiset : public priv::btree_multiset_container<$/;"	c	namespace:phmap
btree_multiset_container	extern/parallel_hashmap/btree.h	/^        btree_multiset_container() {}$/;"	f	class:phmap::priv::btree_multiset_container
btree_multiset_container	extern/parallel_hashmap/btree.h	/^        btree_multiset_container(InputIterator b, InputIterator e,$/;"	f	class:phmap::priv::btree_multiset_container
btree_multiset_container	extern/parallel_hashmap/btree.h	/^        btree_multiset_container(std::initializer_list<init_type> init,$/;"	f	class:phmap::priv::btree_multiset_container
btree_multiset_container	extern/parallel_hashmap/btree.h	/^    class btree_multiset_container : public btree_container<Tree> {$/;"	c	namespace:phmap::priv
btree_node	extern/parallel_hashmap/btree.h	/^    class btree_node {$/;"	c	namespace:phmap::priv
btree_set	extern/parallel_hashmap/btree.h	/^        btree_set() {}$/;"	f	class:phmap::btree_set
btree_set	extern/parallel_hashmap/btree.h	/^    class btree_set : public priv::btree_set_container<$/;"	c	namespace:phmap
btree_set_container	extern/parallel_hashmap/btree.h	/^        btree_set_container() {}$/;"	f	class:phmap::priv::btree_set_container
btree_set_container	extern/parallel_hashmap/btree.h	/^        btree_set_container(InputIterator b, InputIterator e,$/;"	f	class:phmap::priv::btree_set_container
btree_set_container	extern/parallel_hashmap/btree.h	/^        btree_set_container(std::initializer_list<init_type> init,$/;"	f	class:phmap::priv::btree_set_container
btree_set_container	extern/parallel_hashmap/btree.h	/^    class btree_set_container : public btree_container<Tree> {$/;"	c	namespace:phmap::priv
bucket_cnt	extern/parallel_hashmap/phmap.h	/^            size_t bucket_cnt;$/;"	m	struct:phmap::priv::parallel_hash_set::Inner::Params	typeref:typename:size_t
bucket_count	extern/parallel_hashmap/phmap.h	/^    size_t bucket_count() const { return capacity_; }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:size_t
bucket_count	extern/parallel_hashmap/phmap.h	/^    size_t bucket_count() const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
bugs	extern/doxygen-awesome-css/package.json	/^  "bugs": {$/;"	o
buildExamples	meson_options.txt	/^option('buildExamples', type : 'boolean', value : false,$/;"	b
buildTests	meson_options.txt	/^option('buildTests', type : 'boolean', value : false,$/;"	b
byte	extern/nlohmann_json/json.hpp	/^            const auto byte = static_cast<std::uint8_t>(s[i]);$/;"	m	class:detail::serializer	typeref:typename:const auto
byte	extern/nlohmann_json/json.hpp	/^    const std::size_t byte;$/;"	m	class:detail::parse_error	typeref:typename:const std::size_t
byte_container_with_subtype	extern/nlohmann_json/json.hpp	/^    byte_container_with_subtype() noexcept(noexcept(container_type()))$/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/nlohmann_json/json.hpp	/^    byte_container_with_subtype(const container_type& b) noexcept(noexcept(container_type(b)))$/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/nlohmann_json/json.hpp	/^    byte_container_with_subtype(const container_type& b, subtype_type subtype_) noexcept(noexcep/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/nlohmann_json/json.hpp	/^    byte_container_with_subtype(container_type&& b) noexcept(noexcept(container_type(std::move(b/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/nlohmann_json/json.hpp	/^    byte_container_with_subtype(container_type&& b, subtype_type subtype_) noexcept(noexcept(con/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/nlohmann_json/json.hpp	/^class byte_container_with_subtype : public BinaryType$/;"	c
bytes	extern/nlohmann_json/json.hpp	/^        std::size_t bytes = 0;  \/\/ number of bytes written to string_buffer$/;"	m	class:detail::serializer	typeref:typename:std::size_t
bytes_after_last_accept	extern/nlohmann_json/json.hpp	/^        std::size_t bytes_after_last_accept = 0;$/;"	m	class:detail::serializer	typeref:typename:std::size_t
bytes_used	extern/parallel_hashmap/btree.h	/^        size_type bytes_used() const {$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
cStandard	.vscode/c_cpp_properties.json	/^            "cStandard": "c17",$/;"	s	object:configurations.0
cacheLevel_t	include/backends/host/cache.hpp	/^  typedef unsigned int cacheLevel_t;$/;"	t	class:HiCR::backend::host::Cache	typeref:typename:unsigned int
cached_power	extern/nlohmann_json/json.hpp	/^struct cached_power \/\/ c = f * 2^e ~= 10^k$/;"	s	namespace:detail::dtoa_impl
calc_bson_array_size	extern/nlohmann_json/json.hpp	/^    static std::size_t calc_bson_array_size(const typename BasicJsonType::array_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_binary_size	extern/nlohmann_json/json.hpp	/^    static std::size_t calc_bson_binary_size(const typename BasicJsonType::binary_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_element_size	extern/nlohmann_json/json.hpp	/^    static std::size_t calc_bson_element_size(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_entry_header_size	extern/nlohmann_json/json.hpp	/^    static std::size_t calc_bson_entry_header_size(const string_t& name, const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_integer_size	extern/nlohmann_json/json.hpp	/^    static std::size_t calc_bson_integer_size(const std::int64_t value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_object_size	extern/nlohmann_json/json.hpp	/^    static std::size_t calc_bson_object_size(const typename BasicJsonType::object_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_string_size	extern/nlohmann_json/json.hpp	/^    static std::size_t calc_bson_string_size(const string_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_unsigned_size	extern/nlohmann_json/json.hpp	/^    static constexpr std::size_t calc_bson_unsigned_size(const std::uint64_t value) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calculateDepth	include/frontends/channel/circularBuffer.hpp	/^  __USED__ static inline size_t calculateDepth(const size_t headAdvanceCounter, const size_t tai/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ size_t
callback	extern/nlohmann_json/json.hpp	/^    const parser_callback_t callback = nullptr;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:const parser_callback_t
callback	extern/nlohmann_json/json.hpp	/^    const parser_callback_t<BasicJsonType> callback = nullptr;$/;"	m	class:detail::parser	typeref:typename:const parser_callback_t<BasicJsonType>
capacity	extern/atomic_queue/atomic_queue.h	/^    unsigned capacity() const noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:unsigned
capacity	extern/parallel_hashmap/phmap.h	/^    size_t capacity() const { $/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
capacity	extern/parallel_hashmap/phmap.h	/^    size_t capacity() const { return capacity_; }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:size_t
capacity_	extern/parallel_hashmap/phmap.h	/^    size_t capacity_ = 0;            \/\/ total number of slots$/;"	m	class:phmap::priv::raw_hash_set	typeref:typename:size_t
catchSuspendResumeSignal	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ inline static void catchSuspendResumeSignal(int sig)$/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ void
cbegin	extern/nlohmann_json/json.hpp	/^    const_iterator cbegin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
cbegin	extern/parallel_hashmap/btree.h	/^        const_iterator cbegin() const          { return tree_.begin(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:const_iterator
cbegin	extern/parallel_hashmap/phmap.h	/^    const_iterator cbegin() const { return begin(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const_iterator
cbegin	extern/parallel_hashmap/phmap.h	/^    const_iterator cbegin() const { return begin(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const_iterator
cbegin	extern/parallel_hashmap/phmap_base.h	/^    constexpr const_iterator cbegin() const noexcept { return begin(); }$/;"	f	class:phmap::Span	typeref:typename:const_iterator
cbor	extern/nlohmann_json/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
cbor_tag_handler_t	extern/nlohmann_json/json.hpp	/^    using cbor_tag_handler_t = detail::cbor_tag_handler_t;$/;"	t	class:basic_json	typeref:typename:detail::cbor_tag_handler_t
cbor_tag_handler_t	extern/nlohmann_json/json.hpp	/^enum class cbor_tag_handler_t$/;"	g	namespace:detail
cc	include/backends/lpf/meson.build	/^cc = meson.get_compiler('cpp')$/;"	V
cctype	.vscode/settings.json	/^        "cctype": "cpp",$/;"	s	object:files.associations
cend	extern/nlohmann_json/json.hpp	/^    const_iterator cend() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
cend	extern/parallel_hashmap/btree.h	/^        const_iterator cend() const            { return tree_.end(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:const_iterator
cend	extern/parallel_hashmap/phmap.h	/^    const_iterator cend()   const { return end(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const_iterator
cend	extern/parallel_hashmap/phmap.h	/^    const_iterator cend() const { return end(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const_iterator
cend	extern/parallel_hashmap/phmap_base.h	/^    constexpr const_iterator cend() const noexcept { return end(); }$/;"	f	class:phmap::Span	typeref:typename:const_iterator
cereal	extern/parallel_hashmap/phmap_dump.h	/^namespace cereal$/;"	n
channel	include/frontends/channel/base.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	include/frontends/channel/circularBuffer.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	include/frontends/channel/fixedSize/base.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	include/frontends/channel/fixedSize/mpsc/consumer.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	include/frontends/channel/fixedSize/mpsc/producer.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	include/frontends/channel/fixedSize/spsc/producer.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	include/frontends/channel/variableSize/base.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	include/frontends/channel/variableSize/spsc/consumer.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	include/frontends/channel/variableSize/spsc/producer.hpp	/^namespace channel$/;"	n	namespace:HiCR
channel	tests/frontends/meson.build	/^subdir('channel')$/;"	S
channels	examples/meson.build	/^subdir('channels')$/;"	S
char_int_type	extern/nlohmann_json/json.hpp	/^    using char_int_type = typename std::char_traits<char_type>::int_type;$/;"	t	class:detail::binary_reader	typeref:typename:std::char_traits<char_type>::int_type
char_int_type	extern/nlohmann_json/json.hpp	/^    using char_int_type = typename std::char_traits<char_type>::int_type;$/;"	t	class:detail::lexer	typeref:typename:std::char_traits<char_type>::int_type
char_type	extern/nlohmann_json/json.hpp	/^    using char_type = char;$/;"	t	class:detail::file_input_adapter	typeref:typename:char
char_type	extern/nlohmann_json/json.hpp	/^    using char_type = char;$/;"	t	class:detail::input_stream_adapter	typeref:typename:char
char_type	extern/nlohmann_json/json.hpp	/^    using char_type = char;$/;"	t	class:detail::wide_string_input_adapter	typeref:typename:char
char_type	extern/nlohmann_json/json.hpp	/^    using char_type = typename InputAdapterType::char_type;$/;"	t	class:detail::binary_reader	typeref:typename:InputAdapterType::char_type
char_type	extern/nlohmann_json/json.hpp	/^    using char_type = typename InputAdapterType::char_type;$/;"	t	class:detail::lexer	typeref:typename:InputAdapterType::char_type
char_type	extern/nlohmann_json/json.hpp	/^    using char_type = typename std::iterator_traits<IteratorType>::value_type;$/;"	t	class:detail::iterator_input_adapter	typeref:typename:std::iterator_traits<IteratorType>::value_type
char_type	extern/nlohmann_json/json.hpp	/^    using char_type = typename std::iterator_traits<iterator_type>::value_type;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:std::iterator_traits<iterator_type>::value_type
chars_read	extern/nlohmann_json/json.hpp	/^    std::size_t chars_read = 0;$/;"	m	class:detail::binary_reader	typeref:typename:std::size_t
chars_read_current_line	extern/nlohmann_json/json.hpp	/^    std::size_t chars_read_current_line = 0;$/;"	m	struct:detail::position_t	typeref:typename:std::size_t
chars_read_total	extern/nlohmann_json/json.hpp	/^    std::size_t chars_read_total = 0;$/;"	m	struct:detail::position_t	typeref:typename:std::size_t
check	.build-tools/style/check-style.sh	/^function check()$/;"	f
checkFinalization	include/hicr/L0/executionState.hpp	/^  __USED__ inline bool checkFinalization()$/;"	f	class:HiCR::L0::ExecutionState	typeref:typename:__USED__ bool
checkFinalizationImpl	include/backends/ascend/L0/executionState.hpp	/^  __USED__ inline bool checkFinalizationImpl() override$/;"	f	class:HiCR::backend::ascend::L0::ExecutionState	typeref:typename:__USED__ bool
checkFinalizationImpl	include/backends/host/L0/executionState.hpp	/^  __USED__ inline bool checkFinalizationImpl() override$/;"	f	class:HiCR::backend::host::L0::ExecutionState	typeref:typename:__USED__ bool
checkMaximumActiveWorkerCount	examples/tasking/runtime.hpp	/^  __USED__ inline void checkMaximumActiveWorkerCount()$/;"	f	class:taskr::Runtime	typeref:typename:__USED__ void
checkPendingOperations	include/frontends/tasking/task.hpp	/^  __USED__ inline bool checkPendingOperations()$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ bool
checkTaskReady	examples/tasking/runtime.hpp	/^  __USED__ inline bool checkTaskReady(HiCR::tasking::Task *task)$/;"	f	class:taskr::Runtime	typeref:typename:__USED__ bool
checkWaitingTasks	examples/tasking/runtime.hpp	/^  __USED__ inline HiCR::tasking::Task *checkWaitingTasks()$/;"	f	class:taskr::Runtime	typeref:typename:__USED__ HiCR::tasking::Task *
check_syntax	.build-tools/style/check-style.sh	/^function check_syntax()$/;"	f
child	extern/parallel_hashmap/btree.h	/^        btree_node *child(size_type i) const { return GetField<3>()[i]; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:btree_node *
chrono	.vscode/settings.json	/^        "chrono": "cpp",$/;"	s	object:files.associations
cinttypes	.vscode/settings.json	/^        "cinttypes": "cpp",$/;"	s	object:files.associations
clean	docs/Makefile	/^clean:$/;"	t
clean	extern/doxygen-awesome-css/Makefile	/^clean:$/;"	t
clear	extern/nlohmann_json/json.hpp	/^    void clear() noexcept$/;"	f	class:basic_json	typeref:typename:void
clear	extern/parallel_hashmap/btree.h	/^        void clear() { tree_.clear(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:void
clear	extern/parallel_hashmap/btree.h	/^    void btree<P>::clear() {$/;"	f	class:phmap::priv::btree	typeref:typename:void
clear	extern/parallel_hashmap/phmap.h	/^    PHMAP_ATTRIBUTE_REINITIALIZES void clear() {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:PHMAP_ATTRIBUTE_REINITIALIZES void
clear	extern/parallel_hashmap/phmap.h	/^    PHMAP_ATTRIBUTE_REINITIALIZES void clear() {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:PHMAP_ATTRIBUTE_REINITIALIZES void
clear	extern/parallel_hashmap/phmap.h	/^    void clear(std::size_t submap_index) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
clear	include/frontends/tasking/eventMap.hpp	/^  __USED__ inline void clear()$/;"	f	class:HiCR::tasking::EventMap	typeref:typename:__USED__ void
clear_child	extern/parallel_hashmap/btree.h	/^        void clear_child(size_type i) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
clear_subtype	extern/nlohmann_json/json.hpp	/^    void clear_subtype() noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:void
clocale	.vscode/settings.json	/^        "clocale": "cpp",$/;"	s	object:files.associations
cmath	.vscode/settings.json	/^        "cmath": "cpp",$/;"	s	object:files.associations
code	extern/doxygen-awesome-css/doxygen-awesome.css	/^code {$/;"	s
code	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, code a, pre.fragment, div.fragment, div.fragment .line, div.fragment span, div.fragment .l/;"	s
code	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, div.fragment, pre.fragment {$/;"	s
code a	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, code a, pre.fragment, div.fragment, div.fragment .line, div.fragment span, div.fragment .l/;"	s
codecvt	.vscode/settings.json	/^        "codecvt": "cpp",$/;"	s	object:files.associations
codepoint	extern/nlohmann_json/json.hpp	/^        std::uint32_t codepoint{};$/;"	m	class:detail::serializer	typeref:typename:std::uint32_t
colorize	extern/run-clang-format/run-clang-format.py	/^def colorize(diff_lines):$/;"	f
combine	extern/nlohmann_json/json.hpp	/^inline std::size_t combine(std::size_t seed, std::size_t h) noexcept$/;"	f	namespace:detail	typeref:typename:std::size_t
combine	extern/parallel_hashmap/phmap_utils.h	/^    static H combine(H state) { return state; }$/;"	f	class:phmap::HashStateBase	typeref:typename:H
combine	extern/parallel_hashmap/phmap_utils.h	/^H HashStateBase<H>::combine(H seed, const T& v, const Ts&... vs)$/;"	f	class:phmap::HashStateBase	typeref:typename:H
common	include/hicr/common/concurrentQueue.hpp	/^namespace common$/;"	n	namespace:HiCR
common	include/hicr/common/parallelHashMap.hpp	/^namespace common$/;"	n	namespace:HiCR
common	include/hicr/common/parallelHashSet.hpp	/^namespace common$/;"	n	namespace:HiCR
common_params	extern/parallel_hashmap/btree.h	/^    struct common_params {$/;"	s	namespace:phmap::priv
common_type_t	extern/parallel_hashmap/phmap_base.h	/^using common_type_t = typename std::common_type<T...>::type;$/;"	t	namespace:phmap	typeref:typename:std::common_type<T...>::type
comp	extern/parallel_hashmap/btree.h	/^        Compare comp;$/;"	m	struct:phmap::priv::upper_bound_adapter	typeref:typename:Compare
compare	.vscode/settings.json	/^        "compare": "cpp",$/;"	s	object:files.associations
compare_internal	extern/parallel_hashmap/btree.h	/^    namespace compare_internal {$/;"	n	namespace:phmap
compare_keys	extern/parallel_hashmap/btree.h	/^        bool compare_keys(const K &x, const LK &y) const {$/;"	f	class:phmap::priv::btree	typeref:typename:bool
compare_result_as_less_than	extern/parallel_hashmap/btree.h	/^        constexpr bool compare_result_as_less_than(const BoolType r) { return r; }$/;"	f	namespace:phmap::compare_internal	typeref:typename:bool
compare_result_as_less_than	extern/parallel_hashmap/btree.h	/^        constexpr bool compare_result_as_less_than(const phmap::weak_ordering r) {$/;"	f	namespace:phmap::compare_internal	typeref:typename:bool
compare_result_as_ordering	extern/parallel_hashmap/btree.h	/^        constexpr phmap::weak_ordering compare_result_as_ordering($/;"	f	namespace:phmap::compare_internal	typeref:typename:phmap::weak_ordering
compare_result_as_ordering	extern/parallel_hashmap/btree.h	/^        constexpr phmap::weak_ordering compare_result_as_ordering(const Int c) {$/;"	f	namespace:phmap::compare_internal	typeref:typename:phmap::weak_ordering
compare_result_type	extern/parallel_hashmap/btree.h	/^        using compare_result_type =$/;"	t	function:phmap::priv::btree::static_assert_validation	typeref:typename:phmap::invoke_result_t<key_compare,key_type,key_type>
compares_unordered	extern/nlohmann_json/json.hpp	/^    bool compares_unordered(const_reference rhs, bool inverse = false) const noexcept$/;"	f	class:basic_json	typeref:typename:bool
compileWarningsAsErrors	meson_options.txt	/^option('compileWarningsAsErrors', type : 'boolean', value : false,$/;"	b
compilerPath	.vscode/c_cpp_properties.json	/^            "compilerPath": "\/usr\/bin\/gcc",$/;"	s	object:configurations.0
complex	.vscode/settings.json	/^        "complex": "cpp",$/;"	s	object:files.associations
computeResourceList_t	include/hicr/L0/device.hpp	/^  typedef std::unordered_set<std::shared_ptr<L0::ComputeResource>> computeResourceList_t;$/;"	t	class:HiCR::L0::Device	typeref:typename:std::unordered_set<std::shared_ptr<L0::ComputeResource>>
compute_boundaries	extern/nlohmann_json/json.hpp	/^boundaries compute_boundaries(FloatType value)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:boundaries
concat	extern/nlohmann_json/json.hpp	/^inline OutStringType concat(Args && ... args)$/;"	f	namespace:detail	typeref:typename:OutStringType
concat_into	extern/nlohmann_json/json.hpp	/^inline void concat_into(OutStringType& \/*out*\/)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/nlohmann_json/json.hpp	/^inline void concat_into(OutStringType& out, Arg && arg, Args && ... rest)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/nlohmann_json/json.hpp	/^inline void concat_into(OutStringType& out, Arg&& arg, Args&& ... rest)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/nlohmann_json/json.hpp	/^inline void concat_into(OutStringType& out, const Arg& arg, Args&& ... rest)$/;"	f	namespace:detail	typeref:typename:void
concat_length	extern/nlohmann_json/json.hpp	/^inline std::size_t concat_length()$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/nlohmann_json/json.hpp	/^inline std::size_t concat_length(const StringType& str, Args&& ... rest)$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/nlohmann_json/json.hpp	/^inline std::size_t concat_length(const char \/*c*\/, Args&& ... rest)$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/nlohmann_json/json.hpp	/^inline std::size_t concat_length(const char* cstr, Args&& ... rest)$/;"	f	namespace:detail	typeref:typename:std::size_t
concepts	.vscode/settings.json	/^        "concepts": "cpp",$/;"	s	object:files.associations
condition_variable	.vscode/settings.json	/^        "condition_variable": "cpp",$/;"	s	object:files.associations
conditional_t	extern/parallel_hashmap/phmap_base.h	/^using conditional_t = typename std::conditional<B, T, F>::type;$/;"	t	namespace:phmap	typeref:typename:std::conditional<B,T,F>::type
config	extern/doxygen-awesome-css/package.json	/^  "config": {},$/;"	o
configurations	.vscode/c_cpp_properties.json	/^    "configurations": [$/;"	a
conjunction	extern/nlohmann_json/json.hpp	/^struct conjunction<B, Bn...>$/;"	s	namespace:detail
conjunction	extern/nlohmann_json/json.hpp	/^template<class B> struct conjunction<B> : B { };$/;"	s	namespace:detail
conjunction	extern/nlohmann_json/json.hpp	/^template<class...> struct conjunction : std::true_type { };$/;"	s	namespace:detail
conjunction	extern/parallel_hashmap/phmap_base.h	/^struct conjunction<> : std::true_type {};$/;"	s	namespace:phmap
conjunction	extern/parallel_hashmap/phmap_base.h	/^struct conjunction<T, Ts...>$/;"	s	namespace:phmap
conjunction	extern/parallel_hashmap/phmap_base.h	/^struct conjunction<T> : T {};$/;"	s	namespace:phmap
const_iterator	extern/nlohmann_json/json.hpp	/^    using const_iterator = iter_impl<const basic_json>;$/;"	t	class:basic_json	typeref:typename:iter_impl<const basic_json>
const_iterator	extern/nlohmann_json/json.hpp	/^    using const_iterator = typename Container::const_iterator;$/;"	t	struct:ordered_map	typeref:typename:Container::const_iterator
const_iterator	extern/parallel_hashmap/btree.h	/^        using const_iterator = typename Tree::const_iterator;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::const_iterator
const_iterator	extern/parallel_hashmap/btree.h	/^        using const_iterator = typename Tree::const_iterator;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:Tree::const_iterator
const_iterator	extern/parallel_hashmap/btree.h	/^        using const_iterator = typename Tree::const_iterator;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:Tree::const_iterator
const_iterator	extern/parallel_hashmap/btree.h	/^        using const_iterator = typename Tree::const_iterator;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:Tree::const_iterator
const_iterator	extern/parallel_hashmap/btree.h	/^        using const_iterator = typename iterator::const_iterator;$/;"	t	class:phmap::priv::btree	typeref:typename:iterator::const_iterator
const_iterator	extern/parallel_hashmap/btree.h	/^        using const_iterator =$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:btree_iterator<const_node,const_reference,const_pointer>
const_iterator	extern/parallel_hashmap/phmap.h	/^        const_iterator() {}$/;"	f	class:phmap::priv::parallel_hash_set::const_iterator
const_iterator	extern/parallel_hashmap/phmap.h	/^        const_iterator() {}$/;"	f	class:phmap::priv::raw_hash_set::const_iterator
const_iterator	extern/parallel_hashmap/phmap.h	/^        const_iterator(const Inner *inner, const Inner *inner_end, const EmbeddedIterator& it)$/;"	f	class:phmap::priv::parallel_hash_set::const_iterator
const_iterator	extern/parallel_hashmap/phmap.h	/^        const_iterator(const ctrl_t* ctrl, const slot_type* slot)$/;"	f	class:phmap::priv::raw_hash_set::const_iterator
const_iterator	extern/parallel_hashmap/phmap.h	/^        const_iterator(iterator i) : inner_(std::move(i)) {}$/;"	f	class:phmap::priv::raw_hash_set::const_iterator
const_iterator	extern/parallel_hashmap/phmap.h	/^        const_iterator(iterator i) : iter_(std::move(i)) {}$/;"	f	class:phmap::priv::parallel_hash_set::const_iterator
const_iterator	extern/parallel_hashmap/phmap.h	/^    class const_iterator $/;"	c	class:phmap::priv::parallel_hash_set
const_iterator	extern/parallel_hashmap/phmap.h	/^    class const_iterator $/;"	c	class:phmap::priv::raw_hash_set
const_iterator	extern/parallel_hashmap/phmap.h	/^    using const_iterator = BitMask;$/;"	t	class:phmap::priv::BitMask	typeref:typename:BitMask
const_iterator	extern/parallel_hashmap/phmap.h	/^    using const_iterator = typename parallel_hash_map::parallel_hash_set::const_iterator;$/;"	t	class:phmap::priv::parallel_hash_map	typeref:typename:parallel_hash_map::parallel_hash_set::const_iterator
const_iterator	extern/parallel_hashmap/phmap.h	/^    using const_iterator = typename raw_hash_map::raw_hash_set::const_iterator;$/;"	t	class:phmap::priv::raw_hash_map	typeref:typename:raw_hash_map::raw_hash_set::const_iterator
const_iterator	extern/parallel_hashmap/phmap_base.h	/^    using const_iterator = const_pointer;$/;"	t	class:phmap::Span	typeref:typename:const_pointer
const_node	extern/parallel_hashmap/btree.h	/^        using const_node = const Node;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:const Node
const_pointer	extern/nlohmann_json/json.hpp	/^    using const_pointer = typename std::allocator_traits<allocator_type>::const_pointer;$/;"	t	class:basic_json	typeref:typename:std::allocator_traits<allocator_type>::const_pointer
const_pointer	extern/parallel_hashmap/btree.h	/^        using const_pointer = const value_type *;$/;"	t	struct:phmap::priv::common_params	typeref:typename:const value_type *
const_pointer	extern/parallel_hashmap/btree.h	/^        using const_pointer = typename Params::const_pointer;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::const_pointer
const_pointer	extern/parallel_hashmap/btree.h	/^        using const_pointer = typename Params::const_pointer;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::const_pointer
const_pointer	extern/parallel_hashmap/btree.h	/^        using const_pointer = typename Tree::const_pointer;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::const_pointer
const_pointer	extern/parallel_hashmap/btree.h	/^        using const_pointer = typename params_type::const_pointer;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:params_type::const_pointer
const_pointer	extern/parallel_hashmap/phmap.h	/^    using const_pointer   = typename phmap::allocator_traits<$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:phmap::allocator_traits<allocator_type>::template rebind_traits<value_type>::const_pointer
const_pointer	extern/parallel_hashmap/phmap.h	/^    using const_pointer = typename phmap::allocator_traits<$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:phmap::allocator_traits<allocator_type>::template rebind_traits<value_type>::const_pointer
const_pointer	extern/parallel_hashmap/phmap_base.h	/^    using const_pointer = const T*;$/;"	t	class:phmap::Span	typeref:typename:const T *
const_pointer	extern/parallel_hashmap/phmap_base.h	/^    using const_pointer =$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetConstPointer,Alloc,typename phmap::pointer_traits<pointer>::template rebind<const value_type>>
const_reference	extern/nlohmann_json/json.hpp	/^    using const_reference = const value_type&;$/;"	t	class:basic_json	typeref:typename:const value_type &
const_reference	extern/parallel_hashmap/btree.h	/^        using const_reference = const value_type &;$/;"	t	struct:phmap::priv::common_params	typeref:typename:const value_type &
const_reference	extern/parallel_hashmap/btree.h	/^        using const_reference = typename Params::const_reference;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::const_reference
const_reference	extern/parallel_hashmap/btree.h	/^        using const_reference = typename Params::const_reference;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::const_reference
const_reference	extern/parallel_hashmap/btree.h	/^        using const_reference = typename Tree::const_reference;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::const_reference
const_reference	extern/parallel_hashmap/btree.h	/^        using const_reference = typename params_type::const_reference;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:params_type::const_reference
const_reference	extern/parallel_hashmap/phmap.h	/^    using const_reference = const value_type&;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:const value_type &
const_reference	extern/parallel_hashmap/phmap.h	/^    using const_reference = const value_type&;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:const value_type &
const_reference	extern/parallel_hashmap/phmap_base.h	/^    using const_reference = const T&;$/;"	t	class:phmap::Span	typeref:typename:const T &
const_reverse_iterator	extern/nlohmann_json/json.hpp	/^    using const_reverse_iterator = json_reverse_iterator<typename basic_json::const_iterator>;$/;"	t	class:basic_json	typeref:typename:json_reverse_iterator<typename basic_json::const_iterator>
const_reverse_iterator	extern/parallel_hashmap/btree.h	/^        using const_reverse_iterator = std::reverse_iterator<const_iterator>;$/;"	t	class:phmap::priv::btree	typeref:typename:std::reverse_iterator<const_iterator>
const_reverse_iterator	extern/parallel_hashmap/btree.h	/^        using const_reverse_iterator = typename Tree::const_reverse_iterator;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::const_reverse_iterator
const_reverse_iterator	extern/parallel_hashmap/phmap_base.h	/^    using const_reverse_iterator = std::reverse_iterator<const_iterator>;$/;"	t	class:phmap::Span	typeref:typename:std::reverse_iterator<const_iterator>
const_void_pointer	extern/parallel_hashmap/phmap_base.h	/^    using const_void_pointer = memory_internal::ExtractOrT<$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetConstVoidPointer,Alloc,typename phmap::pointer_traits<pointer>::template rebind<const void>>
constant_iterators	extern/parallel_hashmap/phmap.h	/^    using constant_iterators = std::true_type;$/;"	t	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:std::true_type
constant_iterators	extern/parallel_hashmap/phmap.h	/^    using constant_iterators = std::true_type;$/;"	t	struct:phmap::priv::NodeHashSetPolicy	typeref:typename:std::true_type
constant_iterators	extern/parallel_hashmap/phmap_base.h	/^    using constant_iterators = ConstantIteratorsImpl<>;$/;"	t	struct:phmap::priv::hash_policy_traits	typeref:typename:ConstantIteratorsImpl<>
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleStringType& str)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, const std::vector<bool>& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::array_t& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::binary_t& b)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::object_t& obj)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::string_t& s)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::binary_t&& b)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::boolean_t b) noexcept$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_float_t val) noexcept$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_integer_t val) noexce/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_unsigned_t val) noexc/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/nlohmann_json/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/parallel_hashmap/btree.h	/^        static void construct(Alloc *alloc, slot_type *slot, Args &&... args) {$/;"	f	struct:phmap::priv::common_params	typeref:typename:void
construct	extern/parallel_hashmap/btree.h	/^        static void construct(Alloc *alloc, slot_type *slot, Args &&... args) {$/;"	f	struct:phmap::priv::set_slot_policy	typeref:typename:void
construct	extern/parallel_hashmap/btree.h	/^        static void construct(Alloc *alloc, slot_type *slot, slot_type *other) {$/;"	f	struct:phmap::priv::common_params	typeref:typename:void
construct	extern/parallel_hashmap/btree.h	/^        static void construct(Alloc *alloc, slot_type *slot, slot_type *other) {$/;"	f	struct:phmap::priv::set_slot_policy	typeref:typename:void
construct	extern/parallel_hashmap/phmap.h	/^    static void construct(Alloc* alloc, slot_type* slot, Args&&... args) {$/;"	f	struct:phmap::priv::node_hash_policy	typeref:typename:void
construct	extern/parallel_hashmap/phmap.h	/^    static void construct(Allocator* alloc, slot_type* slot, Args&&... args) {$/;"	f	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:void
construct	extern/parallel_hashmap/phmap.h	/^    static void construct(Allocator* alloc, slot_type* slot, Args&&... args) {$/;"	f	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:void
construct	extern/parallel_hashmap/phmap_base.h	/^    static void construct(Alloc& a, T* p,  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::allocator_traits	typeref:typename:void
construct	extern/parallel_hashmap/phmap_base.h	/^    static void construct(Alloc* alloc, slot_type* slot, Args&&... args) {$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:void
construct	extern/parallel_hashmap/phmap_base.h	/^    static void construct(Allocator* alloc, slot_type* slot, Args&&... args) {$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:void
construct	extern/parallel_hashmap/phmap_base.h	/^    static void construct(Allocator* alloc, slot_type* slot, slot_type* other) {$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:void
construct	extern/parallel_hashmap/phmap_base.h	/^    void construct(Args&&... args) {$/;"	f	class:phmap::optional_internal::optional_data_base	typeref:typename:void
construct_impl	extern/parallel_hashmap/phmap_base.h	/^    static auto construct_impl(int, A& a,  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::allocator_traits	typeref:typename:decltype(std::allocator_traits<A>::construct (a,std::forward<Args> (args)...))
construct_impl	extern/parallel_hashmap/phmap_base.h	/^    static void construct_impl(char, Alloc&, T* p, Args&&... args) {$/;"	f	struct:phmap::allocator_traits	typeref:typename:void
constructor	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    constructor() {$/;"	m	class:DoxygenAwesomeDarkModeToggle
constructor	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^    constructor() {$/;"	m	class:DoxygenAwesomeFragmentCopyButton
constructor	extern/parallel_hashmap/phmap.h	/^        constructor(allocator_type* a, slot_type** slot) : alloc_(a), slot_(slot) {}$/;"	f	class:phmap::priv::raw_hash_set::constructor
constructor	extern/parallel_hashmap/phmap.h	/^    class constructor $/;"	c	class:phmap::priv::raw_hash_set
constructor	extern/parallel_hashmap/phmap.h	/^    using constructor     = typename EmbeddedSet::constructor;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:EmbeddedSet::constructor
consumer	tests/frontends/channel/fixedSize/spsc/meson.build	/^ test('consumer', executable('consumer', 'consumer.cpp', dependencies: HiCRTestBuildDependencies/;"	B
consumer	tests/frontends/channel/fixedSize/spsc/meson.build	/^ test('consumer', executable('consumer', 'consumer.cpp', dependencies: HiCRTestBuildDependencies/;"	t
consumerFc	examples/channels/fixedSize/mpsc/include/consumer.hpp	/^void consumerFc(HiCR::L1::MemoryManager &memoryManager, HiCR::L1::CommunicationManager &communic/;"	f	typeref:typename:void
consumerFc	examples/channels/fixedSize/spsc/include/consumer.hpp	/^void consumerFc(HiCR::L1::MemoryManager &memoryManager, HiCR::L1::CommunicationManager &communic/;"	f	typeref:typename:void
consumerFc	examples/channels/variableSize/spsc/include/consumer.hpp	/^void consumerFc(HiCR::L1::MemoryManager &memoryManager, HiCR::L1::CommunicationManager &communic/;"	f	typeref:typename:void
container	extern/nlohmann_json/json.hpp	/^    typename IteratorType::pointer container = nullptr;$/;"	m	class:detail::iteration_proxy	typeref:typename:IteratorType::pointer
container_input_adapter_factory	extern/nlohmann_json/json.hpp	/^struct container_input_adapter_factory {};$/;"	s	namespace:detail::container_input_adapter_factory_impl
container_input_adapter_factory	extern/nlohmann_json/json.hpp	/^struct container_input_adapter_factory< ContainerType,$/;"	s	namespace:detail::container_input_adapter_factory_impl
container_input_adapter_factory_impl	extern/nlohmann_json/json.hpp	/^namespace container_input_adapter_factory_impl$/;"	n	namespace:detail
container_type	extern/nlohmann_json/json.hpp	/^    using container_type = BinaryType;$/;"	t	class:byte_container_with_subtype	typeref:typename:BinaryType
contains	extern/nlohmann_json/json.hpp	/^    bool contains(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:bool
contains	extern/nlohmann_json/json.hpp	/^    bool contains(const BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:bool
contains	extern/nlohmann_json/json.hpp	/^    bool contains(const json_pointer& ptr) const$/;"	f	class:basic_json	typeref:typename:bool
contains	extern/nlohmann_json/json.hpp	/^    bool contains(const typename ::nlohmann::json_pointer<BasicJsonType>& ptr) const$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,basic_json::json_pointer or nlohmann::json_pointer<basic_json::string_t>)bool
contains	extern/nlohmann_json/json.hpp	/^    bool contains(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:bool
contains	extern/parallel_hashmap/btree.h	/^        bool contains(const key_arg<K> &key) const { return find(key) != end(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:bool
contains	extern/parallel_hashmap/phmap.h	/^    bool contains(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
contains	extern/parallel_hashmap/phmap.h	/^    bool contains(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
contains	extern/parallel_hashmap/phmap.h	/^    bool contains(const key_arg<K>& key, size_t hashval) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
contains	extern/parallel_hashmap/phmap.h	/^    bool contains(const key_arg<K>& key, size_t hashval) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
contiguous_bytes_input_adapter	extern/nlohmann_json/json.hpp	/^using contiguous_bytes_input_adapter = decltype(input_adapter(std::declval<const char*>(), std::/;"	t	namespace:detail
convert	extern/nlohmann_json/json.hpp	/^    json_pointer<string_t> convert() const&$/;"	f	class:json_pointer	typeref:typename:json_pointer<string_t>
convert	extern/nlohmann_json/json.hpp	/^    json_pointer<string_t> convert()&&$/;"	f	class:json_pointer	typeref:typename:json_pointer<string_t>
coordinatorFc	examples/hicr/topologyRPC/source/include/coordinator.hpp	/^void coordinatorFc(HiCR::L1::InstanceManager &instanceManager)$/;"	f	typeref:typename:void
coordinatorFc	examples/machineModel/source/include/coordinator.hpp	/^void coordinatorFc(HiCR::L1::InstanceManager &instanceManager, const std::string &machineModelFi/;"	f	typeref:typename:void
copy	extern/nlohmann_json/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
copyContent	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^    copyContent() {$/;"	m	class:DoxygenAwesomeFragmentCopyButton
copyIcon	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^    static copyIcon = `<svg xmlns="http:\/\/www.w3.org\/2000\/svg" viewBox="0 0 24 24" width="24/;"	M	class:DoxygenAwesomeFragmentCopyButton
copy_or_move_values_in_order	extern/parallel_hashmap/btree.h	/^    void btree<P>::copy_or_move_values_in_order(Btree *x) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
copy_traits	extern/parallel_hashmap/phmap_base.h	/^enum class copy_traits { copyable = 0, movable = 1, non_movable = 2 };$/;"	g	namespace:phmap::optional_internal
copyable	extern/parallel_hashmap/phmap_base.h	/^enum class copy_traits { copyable = 0, movable = 1, non_movable = 2 };$/;"	e	enum:phmap::optional_internal::copy_traits
copyright	docs/source/conf.py	/^copyright = 'Huawei Technologies Switzerland AG'$/;"	v
coroutine	tests/backends/host/meson.build	/^test('coroutine', executable('coroutine', 'coroutine.cpp', dependencies: HiCRTestBuildDependenci/;"	B
coroutine	tests/backends/host/meson.build	/^test('coroutine', executable('coroutine', 'coroutine.cpp', dependencies: HiCRTestBuildDependenci/;"	t
coroutineFc_t	include/backends/host/coroutine.hpp	/^  typedef std::function<void()> coroutineFc_t;$/;"	t	class:HiCR::backend::host::Coroutine
coroutines	tests/backends/host/coroutine.cpp	/^HiCR::backend::host::Coroutine *coroutines[COROUTINE_COUNT];$/;"	v	typeref:typename:HiCR::backend::host::Coroutine * []
count	extern/nlohmann_json/json.hpp	/^    size_type count(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:size_type
count	extern/nlohmann_json/json.hpp	/^    size_type count(KeyType && key) const$/;"	f	struct:ordered_map	typeref:typename:size_type
count	extern/nlohmann_json/json.hpp	/^    size_type count(const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:size_type
count	extern/nlohmann_json/json.hpp	/^    size_type count(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:size_type
count	extern/parallel_hashmap/btree.h	/^            field_type count = 0;$/;"	m	struct:phmap::priv::btree::EmptyNodeType	typeref:typename:field_type
count	extern/parallel_hashmap/btree.h	/^        field_type count() const { return GetField<1>()[2]; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:field_type
count	extern/parallel_hashmap/btree.h	/^        size_type count(const key_arg<K> &key) const {$/;"	f	class:phmap::priv::btree_container	typeref:typename:size_type
count	extern/parallel_hashmap/btree.h	/^        size_type count(const key_arg<K> &key) const {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:size_type
count	extern/parallel_hashmap/btree.h	/^        size_type count(const key_arg<K> &key) const {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:size_type
count	extern/parallel_hashmap/phmap.h	/^    size_t count(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
count	extern/parallel_hashmap/phmap.h	/^    size_t count(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:size_t
count_digits	extern/nlohmann_json/json.hpp	/^    inline unsigned int count_digits(number_unsigned_t x) noexcept$/;"	f	class:detail::serializer	typeref:typename:unsigned int
count_multi	extern/parallel_hashmap/btree.h	/^        size_type count_multi(const K &key) const {$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
count_unique	extern/parallel_hashmap/btree.h	/^        size_type count_unique(const K &key) const {$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
cpp	include/hicr/meson.build	/^cpp = meson.get_compiler('cpp')$/;"	V
cppStandard	.vscode/c_cpp_properties.json	/^            "cppStandard": "gnu++17",$/;"	s	object:configurations.0
crbegin	extern/nlohmann_json/json.hpp	/^    const_reverse_iterator crbegin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
crbegin	extern/parallel_hashmap/btree.h	/^        const_reverse_iterator crbegin() const { return tree_.rbegin(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:const_reverse_iterator
crbegin	extern/parallel_hashmap/phmap_base.h	/^    constexpr const_reverse_iterator crbegin() const noexcept { return rbegin(); }$/;"	f	class:phmap::Span	typeref:typename:const_reverse_iterator
create	extern/nlohmann_json/json.hpp	/^           static adapter_type create(const ContainerType& container)$/;"	f	struct:detail::container_input_adapter_factory_impl::container_input_adapter_factory	typeref:typename:adapter_type
create	extern/nlohmann_json/json.hpp	/^    static T* create(Args&& ... args)$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL T *
create	extern/nlohmann_json/json.hpp	/^    static adapter_type create(IteratorType first, IteratorType last)$/;"	f	struct:detail::iterator_input_adapter_factory	typeref:typename:adapter_type
create	extern/nlohmann_json/json.hpp	/^    static invalid_iterator create(int id_, const std::string& what_arg, BasicJsonContext contex/;"	f	class:detail::invalid_iterator	typeref:typename:invalid_iterator
create	extern/nlohmann_json/json.hpp	/^    static other_error create(int id_, const std::string& what_arg, BasicJsonContext context)$/;"	f	class:detail::other_error	typeref:typename:other_error
create	extern/nlohmann_json/json.hpp	/^    static out_of_range create(int id_, const std::string& what_arg, BasicJsonContext context)$/;"	f	class:detail::out_of_range	typeref:typename:out_of_range
create	extern/nlohmann_json/json.hpp	/^    static parse_error create(int id_, const position_t& pos, const std::string& what_arg, Basic/;"	f	class:detail::parse_error	typeref:typename:parse_error
create	extern/nlohmann_json/json.hpp	/^    static parse_error create(int id_, std::size_t byte_, const std::string& what_arg, BasicJson/;"	f	class:detail::parse_error	typeref:typename:parse_error
create	extern/nlohmann_json/json.hpp	/^    static type_error create(int id_, const std::string& what_arg, BasicJsonContext context)$/;"	f	class:detail::type_error	typeref:typename:type_error
createComputeKernelFromDirectory	examples/hicr/kernel/source/ascend.cpp	/^ascend::ComputationKernel createComputeKernelFromDirectory(std::string path,$/;"	f	typeref:typename:ascend::ComputationKernel
createComputeKernelFromFile	examples/hicr/kernel/source/ascend.cpp	/^ascend::ComputationKernel createComputeKernelFromFile($/;"	f	typeref:typename:ascend::ComputationKernel
createContexts	include/backends/ascend/core.hpp	/^  __USED__ inline void createContexts()$/;"	f	class:HiCR::backend::ascend::Core	typeref:typename:__USED__ void
createDataObject	include/frontends/runtime/instance.hpp	/^  __USED__ inline std::shared_ptr<DataObject> createDataObject(void *buffer, const size_t size)$/;"	f	class:HiCR::runtime::Instance	typeref:typename:__USED__ std::shared_ptr<DataObject>
createDefault	include/backends/ascend/L1/topologyManager.hpp	/^  __USED__ static inline std::unique_ptr<HiCR::L1::TopologyManager> createDefault()$/;"	f	class:HiCR::backend::ascend::L1::TopologyManager	typeref:typename:__USED__ std::unique_ptr<HiCR::L1::TopologyManager>
createDefault	include/backends/host/hwloc/L1/topologyManager.hpp	/^  __USED__ static inline std::unique_ptr<HiCR::L1::TopologyManager> createDefault()$/;"	f	class:HiCR::backend::host::hwloc::L1::TopologyManager	typeref:typename:__USED__ std::unique_ptr<HiCR::L1::TopologyManager>
createDefault	include/backends/mpi/L1/instanceManager.hpp	/^  __USED__ static inline std::unique_ptr<HiCR::L1::InstanceManager> createDefault(int *argc, cha/;"	f	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:__USED__ std::unique_ptr<HiCR::L1::InstanceManager>
createExecutionState	include/backends/ascend/L1/computeManager.hpp	/^  __USED__ inline std::unique_ptr<HiCR::L0::ExecutionState> createExecutionState(std::shared_ptr/;"	f	class:HiCR::backend::ascend::L1::ComputeManager	typeref:typename:__USED__ std::unique_ptr<HiCR::L0::ExecutionState>
createExecutionState	include/backends/host/L1/computeManager.hpp	/^  __USED__ inline std::unique_ptr<HiCR::L0::ExecutionState> createExecutionState(std::shared_ptr/;"	f	class:HiCR::backend::host::L1::ComputeManager	typeref:typename:__USED__ std::unique_ptr<HiCR::L0::ExecutionState>
createExecutionUnit	include/backends/ascend/L1/computeManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::ExecutionUnit> createExecutionUnit(const std::vector/;"	f	class:HiCR::backend::ascend::L1::ComputeManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::ExecutionUnit>
createExecutionUnit	include/backends/host/L1/computeManager.hpp	/^  __USED__ static inline std::shared_ptr<HiCR::L0::ExecutionUnit> createExecutionUnit(Coroutine:/;"	f	class:HiCR::backend::host::L1::ComputeManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::ExecutionUnit>
createInstance	include/hicr/L1/instanceManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::Instance> createInstance(const HiCR::L0::Topology &r/;"	f	class:HiCR::L1::InstanceManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::Instance>
createInstanceImpl	include/backends/mpi/L1/instanceManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::Instance> createInstanceImpl [[noreturn]] (const HiC/;"	f	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::Instance>
createProcessingUnit	include/backends/ascend/L1/computeManager.hpp	/^  __USED__ inline std::unique_ptr<HiCR::L0::ProcessingUnit> createProcessingUnit(std::shared_ptr/;"	f	class:HiCR::backend::ascend::L1::ComputeManager	typeref:typename:__USED__ std::unique_ptr<HiCR::L0::ProcessingUnit>
createProcessingUnit	include/backends/host/pthreads/L1/computeManager.hpp	/^  __USED__ inline std::unique_ptr<HiCR::L0::ProcessingUnit> createProcessingUnit(std::shared_ptr/;"	f	class:HiCR::backend::host::pthreads::L1::ComputeManager	typeref:typename:__USED__ std::unique_ptr<HiCR::L0::ProcessingUnit>
createTensorData	include/backends/ascend/computationKernel.hpp	/^  static tensorData_t createTensorData(std::shared_ptr<HiCR::L0::LocalMemorySlot> memorySlot, ac/;"	f	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:tensorData_t
crend	extern/nlohmann_json/json.hpp	/^    const_reverse_iterator crend() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
crend	extern/parallel_hashmap/btree.h	/^        const_reverse_iterator crend() const   { return tree_.rend(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:const_reverse_iterator
crend	extern/parallel_hashmap/phmap_base.h	/^    constexpr const_reverse_iterator crend() const noexcept { return rend(); }$/;"	f	class:phmap::Span	typeref:typename:const_reverse_iterator
csignal	.vscode/settings.json	/^        "csignal": "cpp",$/;"	s	object:files.associations
cstdarg	.vscode/settings.json	/^        "cstdarg": "cpp",$/;"	s	object:files.associations
cstddef	.vscode/settings.json	/^        "cstddef": "cpp",$/;"	s	object:files.associations
cstdint	.vscode/settings.json	/^        "cstdint": "cpp",$/;"	s	object:files.associations
cstdio	.vscode/settings.json	/^        "cstdio": "cpp",$/;"	s	object:files.associations
cstdlib	.vscode/settings.json	/^        "cstdlib": "cpp",$/;"	s	object:files.associations
cstring	.vscode/settings.json	/^        "cstring": "cpp",$/;"	s	object:files.associations
ctime	.vscode/settings.json	/^        "ctime": "cpp",$/;"	s	object:files.associations
ctrl	extern/parallel_hashmap/phmap.h	/^    __m128i ctrl;$/;"	m	struct:phmap::priv::GroupSse2Impl	typeref:typename:__m128i
ctrl	extern/parallel_hashmap/phmap.h	/^    uint64_t ctrl;$/;"	m	struct:phmap::priv::GroupPortableImpl	typeref:typename:uint64_t
ctrl_	extern/parallel_hashmap/phmap.h	/^        ctrl_t* ctrl_ = nullptr;$/;"	m	class:phmap::priv::raw_hash_set::iterator	typeref:typename:ctrl_t *
ctrl_	extern/parallel_hashmap/phmap.h	/^    ctrl_t* ctrl_ = EmptyGroup();    \/\/ [(capacity + 1) * ctrl_t]$/;"	m	class:phmap::priv::raw_hash_set	typeref:typename:ctrl_t *
ctrl_t	extern/parallel_hashmap/phmap.h	/^using ctrl_t = signed char;$/;"	t	namespace:phmap::priv	typeref:typename:signed char
current	extern/nlohmann_json/json.hpp	/^    IteratorType current;$/;"	m	class:detail::iterator_input_adapter	typeref:typename:IteratorType
current	extern/nlohmann_json/json.hpp	/^    char_int_type current = std::char_traits<char_type>::eof();$/;"	m	class:detail::binary_reader	typeref:typename:char_int_type
current	extern/nlohmann_json/json.hpp	/^    char_int_type current = std::char_traits<char_type>::eof();$/;"	m	class:detail::lexer	typeref:typename:char_int_type
cwchar	.vscode/settings.json	/^        "cwchar": "cpp",$/;"	s	object:files.associations
cwctype	.vscode/settings.json	/^        "cwctype": "cpp",$/;"	s	object:files.associations
cyan	extern/run-clang-format/run-clang-format.py	/^    def cyan(s):$/;"	f	function:colorize	file:
darkModeIcon	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static darkModeIcon = `<svg xmlns="http:\/\/www.w3.org\/2000\/svg" enable-background="new 0 /;"	M	class:DoxygenAwesomeDarkModeToggle
data	extern/parallel_hashmap/phmap_base.h	/^        empty_struct data[sizeof(T) \/ sizeof(empty_struct)];$/;"	m	struct:phmap::optional_internal::optional_data_dtor_base::dummy_type	typeref:typename:empty_struct[]
data	extern/parallel_hashmap/phmap_base.h	/^    constexpr pointer data() const noexcept { return ptr_; }$/;"	f	class:phmap::Span	typeref:typename:pointer
dataBuffer	include/backends/ascend/computationKernel.hpp	/^    const aclDataBuffer *dataBuffer;$/;"	m	struct:HiCR::backend::ascend::ComputationKernel::tensorData_t	typeref:typename:const aclDataBuffer *
dataObjectId_t	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  typedef uint32_t dataObjectId_t;$/;"	t	class:HiCR::runtime::DataObject	typeref:typename:uint32_t
data_	extern/parallel_hashmap/phmap_base.h	/^        T data_;$/;"	m	union:phmap::optional_internal::optional_data_dtor_base::__anon32d953ed020a	typeref:typename:T
data_	extern/parallel_hashmap/phmap_base.h	/^        T data_;$/;"	m	union:phmap::optional_internal::optional_data_dtor_base::__anon32d953ed030a	typeref:typename:T
data_base	extern/parallel_hashmap/phmap_base.h	/^    using data_base = optional_internal::optional_data<T>;$/;"	t	class:phmap::optional	typeref:typename:optional_internal::optional_data<T>
deallocate	extern/parallel_hashmap/btree.h	/^        void deallocate(const size_type sz, node_type *node) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
deallocate	extern/parallel_hashmap/phmap_base.h	/^    static void deallocate(Alloc& a, pointer p,  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::allocator_traits	typeref:typename:void
decay_t	extern/parallel_hashmap/phmap_base.h	/^using decay_t = typename std::decay<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::decay<T>::type
decimal_point	extern/nlohmann_json/json.hpp	/^    const char decimal_point = '\\0';$/;"	m	class:detail::serializer	typeref:typename:const char
decimal_point_char	extern/nlohmann_json/json.hpp	/^    const char_int_type decimal_point_char = '.';$/;"	m	class:detail::lexer	typeref:typename:const char_int_type
decode	extern/nlohmann_json/json.hpp	/^    static std::uint8_t decode(std::uint8_t& state, std::uint32_t& codep, const std::uint8_t byt/;"	f	class:detail::serializer	typeref:typename:std::uint8_t
decreaseUsage	include/hicr/L0/memorySpace.hpp	/^  __USED__ inline void decreaseUsage(const size_t delta)$/;"	f	class:HiCR::L0::MemorySpace	typeref:typename:__USED__ void
decrement	extern/atomic_queue/atomic_queue.h	/^constexpr T decrement(T x) noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:T
decrement	extern/parallel_hashmap/btree.h	/^        void decrement() {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:void
decrement_slow	extern/parallel_hashmap/btree.h	/^    void btree_iterator<N, R, P>::decrement_slow() {$/;"	f	class:phmap::priv::btree_iterator	typeref:typename:void
default_allocator_is_nothrow	extern/parallel_hashmap/phmap_base.h	/^    struct default_allocator_is_nothrow : std::false_type {};$/;"	s	namespace:phmap
default_allocator_is_nothrow	extern/parallel_hashmap/phmap_base.h	/^    struct default_allocator_is_nothrow : std::true_type {};$/;"	s	namespace:phmap
default_object_comparator_t	extern/nlohmann_json/json.hpp	/^    using default_object_comparator_t = std::less<>;$/;"	t	class:basic_json	typeref:typename:std::less<>
default_object_comparator_t	extern/nlohmann_json/json.hpp	/^    using default_object_comparator_t = std::less<StringType>;$/;"	t	class:basic_json	typeref:typename:std::less<StringType>
defer_lock_t	extern/parallel_hashmap/phmap_base.h	/^    using defer_lock_t  = boost::defer_lock_t;$/;"	t	namespace:phmap	typeref:typename:boost::defer_lock_t
defines	.vscode/c_cpp_properties.json	/^            "defines": [],$/;"	a	object:configurations.0
delete_element	extern/parallel_hashmap/phmap.h	/^        static void delete_element(Allocator* alloc, T* elem) {$/;"	f	struct:phmap::priv::NodeHashSetPolicy	typeref:typename:void
delete_element	extern/parallel_hashmap/phmap.h	/^        static void delete_element(Allocator* alloc, value_type* pair) {$/;"	f	class:phmap::priv::NodeHashMapPolicy	typeref:typename:void
delete_internal_node	extern/parallel_hashmap/btree.h	/^        void delete_internal_node(node_type *node) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
delete_leaf_node	extern/parallel_hashmap/btree.h	/^        void delete_leaf_node(node_type *node) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
dependencies	extern/doxygen-awesome-css/package.json	/^  "dependencies": {},$/;"	o
deploy	include/frontends/machineModel/machineModel.hpp	/^  void deploy(std::vector<request_t> &requests, topologyAcceptanceCriteriaFc_t acceptanceCriteri/;"	f	class:HiCR::MachineModel	typeref:typename:void
deploy	include/frontends/runtime/coordinator.hpp	/^  __USED__ inline void deploy(std::vector<HiCR::MachineModel::request_t> &requests, HiCR::Machin/;"	f	class:HiCR::runtime::Coordinator	typeref:typename:__USED__ void
deploy	include/frontends/runtime/runtime.hpp	/^  __USED__ inline void deploy(std::vector<HiCR::MachineModel::request_t> &requests, HiCR::Machin/;"	f	class:HiCR::Runtime	typeref:typename:__USED__ void
deque	.vscode/settings.json	/^        "deque": "cpp",$/;"	s	object:files.associations
deregisterGlobalMemorySlot	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void deregisterGlobalMemorySlot(std::shared_ptr<L0::GlobalMemorySlot> memorySl/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
deregisterGlobalMemorySlotImpl	include/backends/ascend/L1/communicationManager.hpp	/^  __USED__ inline void deregisterGlobalMemorySlotImpl(const std::shared_ptr<HiCR::L0::GlobalMemo/;"	f	class:HiCR::backend::ascend::L1::CommunicationManager	typeref:typename:__USED__ void
deregisterGlobalMemorySlotImpl	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void deregisterGlobalMemorySlotImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
deregisterGlobalMemorySlotImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void deregisterGlobalMemorySlotImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
deregisterGlobalMemorySlotImpl	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void deregisterGlobalMemorySlotImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
deregisterLocalMemorySlot	include/hicr/L1/memoryManager.hpp	/^  __USED__ inline void deregisterLocalMemorySlot(std::shared_ptr<HiCR::L0::LocalMemorySlot> memo/;"	f	class:HiCR::L1::MemoryManager	typeref:typename:__USED__ void
deregisterLocalMemorySlotImpl	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline void deregisterLocalMemorySlotImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> /;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ void
deregisterLocalMemorySlotImpl	include/backends/host/hwloc/L1/memoryManager.hpp	/^  __USED__ inline void deregisterLocalMemorySlotImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> /;"	f	class:HiCR::backend::host::hwloc::L1::MemoryManager	typeref:typename:__USED__ void
deregisterLocalMemorySlotImpl	include/backends/lpf/L1/memoryManager.hpp	/^  __USED__ inline void deregisterLocalMemorySlotImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> /;"	f	class:HiCR::backend::lpf::L1::MemoryManager	typeref:typename:__USED__ void
deregisterLocalMemorySlotImpl	include/backends/mpi/L1/memoryManager.hpp	/^  __USED__ inline void deregisterLocalMemorySlotImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> /;"	f	class:HiCR::backend::mpi::L1::MemoryManager	typeref:typename:__USED__ void
description	extern/doxygen-awesome-css/package.json	/^  "description": "Custom CSS theme for doxygen html-documentation with lots of customization par/;"	s
deserialize	include/backends/host/cache.hpp	/^  __USED__ inline void deserialize(const nlohmann::json &input)$/;"	f	class:HiCR::backend::host::Cache	typeref:typename:__USED__ void
deserialize	include/hicr/L0/computeResource.hpp	/^  __USED__ inline void deserialize(const nlohmann::json &input)$/;"	f	class:HiCR::L0::ComputeResource	typeref:typename:__USED__ void
deserialize	include/hicr/L0/device.hpp	/^  __USED__ inline void deserialize(const nlohmann::json &input)$/;"	f	class:HiCR::L0::Device	typeref:typename:__USED__ void
deserialize	include/hicr/L0/memorySpace.hpp	/^  __USED__ inline void deserialize(const nlohmann::json &input)$/;"	f	class:HiCR::L0::MemorySpace	typeref:typename:__USED__ void
deserializeImpl	include/backends/ascend/L0/computeResource.hpp	/^  __USED__ inline void deserializeImpl(const nlohmann::json &input) override$/;"	f	class:HiCR::backend::ascend::L0::ComputeResource	typeref:typename:__USED__ void
deserializeImpl	include/backends/ascend/L0/device.hpp	/^  __USED__ inline void deserializeImpl(const nlohmann::json &input) override$/;"	f	class:HiCR::backend::ascend::L0::Device	typeref:typename:__USED__ void
deserializeImpl	include/backends/ascend/L0/memorySpace.hpp	/^  __USED__ inline void deserializeImpl(const nlohmann::json &input) override$/;"	f	class:HiCR::backend::ascend::L0::MemorySpace	typeref:typename:__USED__ void
deserializeImpl	include/backends/host/L0/computeResource.hpp	/^  __USED__ inline void deserializeImpl(const nlohmann::json &input) override$/;"	f	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:__USED__ void
deserializeImpl	include/backends/host/L0/device.hpp	/^  __USED__ inline void deserializeImpl(const nlohmann::json &input) override$/;"	f	class:HiCR::backend::host::L0::Device	typeref:typename:__USED__ void
deserializeImpl	include/backends/host/L0/memorySpace.hpp	/^  __USED__ inline void deserializeImpl(const nlohmann::json &input) override$/;"	f	class:HiCR::backend::host::L0::MemorySpace	typeref:typename:__USED__ void
deserializeImpl	include/backends/host/hwloc/L0/computeResource.hpp	/^  __USED__ inline void deserializeImpl(const nlohmann::json &input) override$/;"	f	class:HiCR::backend::host::hwloc::L0::ComputeResource	typeref:typename:__USED__ void
deserializeImpl	include/backends/host/hwloc/L0/device.hpp	/^  __USED__ inline void deserializeImpl(const nlohmann::json &input) override$/;"	f	class:HiCR::backend::host::hwloc::L0::Device	typeref:typename:__USED__ void
deserializeImpl	include/backends/host/hwloc/L0/memorySpace.hpp	/^  __USED__ inline void deserializeImpl(const nlohmann::json &input) override$/;"	f	class:HiCR::backend::host::hwloc::L0::MemorySpace	typeref:typename:__USED__ void
deserializeTopology	include/backends/ascend/L1/topologyManager.hpp	/^  __USED__ static inline HiCR::L0::Topology deserializeTopology(const nlohmann::json &topology)$/;"	f	class:HiCR::backend::ascend::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Topology
deserializeTopology	include/backends/host/hwloc/L1/topologyManager.hpp	/^  __USED__ static inline HiCR::L0::Topology deserializeTopology(const nlohmann::json &topology)$/;"	f	class:HiCR::backend::host::hwloc::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Topology
destroy	extern/nlohmann_json/json.hpp	/^        void destroy(value_t t)$/;"	f	union:basic_json::json_value	typeref:typename:void
destroy	extern/parallel_hashmap/btree.h	/^        static void destroy(Alloc *alloc, slot_type *slot) {$/;"	f	struct:phmap::priv::common_params	typeref:typename:void
destroy	extern/parallel_hashmap/btree.h	/^        static void destroy(Alloc *alloc, slot_type *slot) {$/;"	f	struct:phmap::priv::set_slot_policy	typeref:typename:void
destroy	extern/parallel_hashmap/btree.h	/^        void destroy(allocator_type *alloc) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
destroy	extern/parallel_hashmap/phmap.h	/^    static void destroy(Alloc* alloc, slot_type* slot) {$/;"	f	struct:phmap::priv::node_hash_policy	typeref:typename:void
destroy	extern/parallel_hashmap/phmap.h	/^    static void destroy(Allocator* alloc, slot_type* slot) {$/;"	f	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:void
destroy	extern/parallel_hashmap/phmap.h	/^    static void destroy(Allocator* alloc, slot_type* slot) {$/;"	f	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:void
destroy	extern/parallel_hashmap/phmap_base.h	/^    static void destroy(Alloc& a, T* p) {  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::allocator_traits	typeref:typename:void
destroy	extern/parallel_hashmap/phmap_base.h	/^    static void destroy(Alloc* alloc, slot_type* slot) {$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:void
destroy	extern/parallel_hashmap/phmap_base.h	/^    static void destroy(Allocator* alloc, slot_type* slot) {$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:void
destroy	extern/parallel_hashmap/phmap_base.h	/^    void destroy() {$/;"	f	class:phmap::priv::node_handle_base	typeref:typename:void
destroyBuffer	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  __USED__ inline void destroyBuffer()$/;"	f	class:HiCR::runtime::DataObject	typeref:typename:__USED__ void
destroy_impl	extern/parallel_hashmap/phmap_base.h	/^    static auto destroy_impl(int, A& a,  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::allocator_traits	typeref:typename:decltype(std::allocator_traits<A>::destroy (a,p))
destroy_impl	extern/parallel_hashmap/phmap_base.h	/^    static void destroy_impl(char, Alloc&, T* p) {$/;"	f	struct:phmap::allocator_traits	typeref:typename:void
destroy_slots	extern/parallel_hashmap/phmap.h	/^    void destroy_slots() {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
destruct	extern/parallel_hashmap/phmap_base.h	/^    void destruct() noexcept { engaged_ = false; }$/;"	f	class:phmap::optional_internal::optional_data_dtor_base	typeref:typename:void
destruct	extern/parallel_hashmap/phmap_base.h	/^    void destruct() noexcept {$/;"	f	class:phmap::optional_internal::optional_data_dtor_base	typeref:typename:void
detail	extern/nlohmann_json/json.hpp	/^namespace detail$/;"	n
details	extern/atomic_queue/atomic_queue.h	/^namespace details {$/;"	n	namespace:atomic_queue
detectCoreNUMAffinity	include/backends/host/hwloc/L0/computeResource.hpp	/^  __USED__ static numaAffinity_t detectCoreNUMAffinity(hwloc_topology_t topology, const logicalP/;"	f	class:HiCR::backend::host::hwloc::L0::ComputeResource	typeref:typename:__USED__ numaAffinity_t
detectCpuCaches	include/backends/host/hwloc/L0/computeResource.hpp	/^  __USED__ static inline std::unordered_set<std::shared_ptr<backend::host::Cache>> detectCpuCach/;"	f	class:HiCR::backend::host::hwloc::L0::ComputeResource	typeref:typename:__USED__ std::unordered_set<std::shared_ptr<backend::host::Cache>>
detectInstances	include/frontends/machineModel/machineModel.hpp	/^  std::vector<detectedInstance_t> detectInstances(HiCR::L1::InstanceManager &instanceManager)$/;"	f	class:HiCR::MachineModel	typeref:typename:std::vector<detectedInstance_t>
detectPhysicalProcessorId	include/backends/host/hwloc/L0/computeResource.hpp	/^  __USED__ inline static physicalProcessorId_t detectPhysicalProcessorId(hwloc_topology_t topolo/;"	f	class:HiCR::backend::host::hwloc::L0::ComputeResource	typeref:typename:__USED__ physicalProcessorId_t
detectThreadPUs	include/backends/host/hwloc/L0/computeResource.hpp	/^  __USED__ inline static void detectThreadPUs(hwloc_topology_t topology, hwloc_obj_t obj, int de/;"	f	class:HiCR::backend::host::hwloc::L0::ComputeResource	typeref:typename:__USED__ void
detect_erase_with_key_type	extern/nlohmann_json/json.hpp	/^using detect_erase_with_key_type = decltype(std::declval<ObjectType&>().erase(std::declval<KeyTy/;"	t	namespace:detail
detect_is_transparent	extern/nlohmann_json/json.hpp	/^using detect_is_transparent = typename T::is_transparent;$/;"	t	namespace:detail	typeref:typename:T::is_transparent
detect_key_compare	extern/nlohmann_json/json.hpp	/^using detect_key_compare = typename T::key_compare;$/;"	t	namespace:detail	typeref:typename:T::key_compare
detect_string_can_append	extern/nlohmann_json/json.hpp	/^using detect_string_can_append = is_detected<string_can_append, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append,StringType,Arg>
detect_string_can_append_data	extern/nlohmann_json/json.hpp	/^using detect_string_can_append_data = is_detected<string_can_append_data, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append_data,StringType,Arg>
detect_string_can_append_iter	extern/nlohmann_json/json.hpp	/^using detect_string_can_append_iter = is_detected<string_can_append_iter, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append_iter,StringType,Arg>
detect_string_can_append_op	extern/nlohmann_json/json.hpp	/^using detect_string_can_append_op = is_detected<string_can_append_op, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append_op,StringType,Arg>
detectedInstance_t	include/frontends/machineModel/machineModel.hpp	/^  struct detectedInstance_t$/;"	s	class:HiCR::MachineModel
detected_or	extern/nlohmann_json/json.hpp	/^using detected_or = detector<Default, void, Op, Args...>;$/;"	t	namespace:detail	typeref:typename:detector<Default,void,Op,Args...>
detected_or_t	extern/nlohmann_json/json.hpp	/^using detected_or_t = typename detected_or<Default, Op, Args...>::type;$/;"	t	namespace:detail	typeref:typename:detected_or<Default,Op,Args...>::type
detected_t	extern/nlohmann_json/json.hpp	/^using detected_t = typename detector<nonesuch, void, Op, Args...>::type;$/;"	t	namespace:detail	typeref:typename:detector<nonesuch,void,Op,Args...>::type
detector	extern/nlohmann_json/json.hpp	/^struct detector$/;"	s	namespace:detail
detector	extern/nlohmann_json/json.hpp	/^struct detector<Default, void_t<Op<Args...>>, Op, Args...>$/;"	s	namespace:detail
devDependencies	extern/doxygen-awesome-css/package.json	/^  "devDependencies": {},$/;"	o
device	include/backends/ascend/L1/communicationManager.hpp	/^    device$/;"	e	enum:HiCR::backend::ascend::L1::CommunicationManager::deviceType_t
deviceAlloc	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline void *deviceAlloc(std::shared_ptr<ascend::L0::MemorySpace> memorySpace, const /;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ void *
deviceIdentifier_t	include/backends/ascend/L0/device.hpp	/^  typedef uint64_t deviceIdentifier_t;$/;"	t	class:HiCR::backend::ascend::L0::Device	typeref:typename:uint64_t
deviceList_t	include/hicr/L0/topology.hpp	/^  typedef std::unordered_set<std::shared_ptr<L0::Device>> deviceList_t;$/;"	t	class:HiCR::L0::Topology	typeref:typename:std::unordered_set<std::shared_ptr<L0::Device>>
deviceType_t	include/backends/ascend/L1/communicationManager.hpp	/^  enum deviceType_t$/;"	g	class:HiCR::backend::ascend::L1::CommunicationManager
diagnostics	extern/nlohmann_json/json.hpp	/^    static std::string diagnostics(const BasicJsonType* leaf_element)$/;"	f	class:detail::exception	typeref:typename:std::string
diagnostics	extern/nlohmann_json/json.hpp	/^    static std::string diagnostics(std::nullptr_t \/*leaf_element*\/)$/;"	f	class:detail::exception	typeref:typename:std::string
diff	extern/nlohmann_json/json.hpp	/^    static basic_json diff(const basic_json& source, const basic_json& target,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
difference_type	extern/nlohmann_json/json.hpp	/^    using difference_type = ptrdiff_t;$/;"	t	struct:detail::iterator_traits	typeref:typename:ptrdiff_t
difference_type	extern/nlohmann_json/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:basic_json	typeref:typename:std::ptrdiff_t
difference_type	extern/nlohmann_json/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:std::ptrdiff_t
difference_type	extern/nlohmann_json/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:detail::json_reverse_iterator	typeref:typename:std::ptrdiff_t
difference_type	extern/nlohmann_json/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:detail::primitive_iterator_t	typeref:typename:std::ptrdiff_t
difference_type	extern/nlohmann_json/json.hpp	/^    using difference_type = typename BasicJsonType::difference_type;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::difference_type
difference_type	extern/nlohmann_json/json.hpp	/^    using difference_type = typename It::difference_type;$/;"	t	struct:detail::iterator_types	typeref:typename:It::difference_type
difference_type	extern/parallel_hashmap/btree.h	/^        using difference_type = ptrdiff_t;$/;"	t	struct:phmap::priv::common_params	typeref:typename:ptrdiff_t
difference_type	extern/parallel_hashmap/btree.h	/^        using difference_type = typename Node::difference_type;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:Node::difference_type
difference_type	extern/parallel_hashmap/btree.h	/^        using difference_type = typename Params::difference_type;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::difference_type
difference_type	extern/parallel_hashmap/btree.h	/^        using difference_type = typename Params::difference_type;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::difference_type
difference_type	extern/parallel_hashmap/btree.h	/^        using difference_type = typename Tree::difference_type;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::difference_type
difference_type	extern/parallel_hashmap/phmap.h	/^        using difference_type   = typename parallel_hash_set::difference_type;$/;"	t	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:parallel_hash_set::difference_type
difference_type	extern/parallel_hashmap/phmap.h	/^        using difference_type   = typename parallel_hash_set::difference_type;$/;"	t	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:parallel_hash_set::difference_type
difference_type	extern/parallel_hashmap/phmap.h	/^        using difference_type = typename raw_hash_set::difference_type;$/;"	t	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:raw_hash_set::difference_type
difference_type	extern/parallel_hashmap/phmap.h	/^        using difference_type = typename raw_hash_set::difference_type;$/;"	t	class:phmap::priv::raw_hash_set::iterator	typeref:typename:raw_hash_set::difference_type
difference_type	extern/parallel_hashmap/phmap.h	/^    using difference_type = ptrdiff_t;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:ptrdiff_t
difference_type	extern/parallel_hashmap/phmap.h	/^    using difference_type = ptrdiff_t;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:ptrdiff_t
difference_type	extern/parallel_hashmap/phmap_base.h	/^    using difference_type = memory_internal::ExtractOrT<$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetDifferenceType,Alloc,typename phmap::pointer_traits<pointer>::difference_type>
difference_type	extern/parallel_hashmap/phmap_base.h	/^    using difference_type = ptrdiff_t;$/;"	t	class:phmap::Span	typeref:typename:ptrdiff_t
difference_type	extern/parallel_hashmap/phmap_base.h	/^    using difference_type = std::ptrdiff_t;$/;"	t	struct:phmap::pointer_traits	typeref:typename:std::ptrdiff_t
difference_type	extern/parallel_hashmap/phmap_base.h	/^    using difference_type =$/;"	t	struct:phmap::pointer_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetDifferenceType,Ptr,std::ptrdiff_t>
difference_type_t	extern/nlohmann_json/json.hpp	/^using difference_type_t = typename T::difference_type;$/;"	t	namespace:detail	typeref:typename:T::difference_type
discarded	extern/nlohmann_json/json.hpp	/^    BasicJsonType discarded = BasicJsonType::value_t::discarded;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType
discarded	extern/nlohmann_json/json.hpp	/^    discarded         \/\/\/< discarded by the parser callback function$/;"	e	enum:detail::value_t
disjunction	extern/parallel_hashmap/phmap_base.h	/^struct disjunction<> : std::false_type {};$/;"	s	namespace:phmap
disjunction	extern/parallel_hashmap/phmap_base.h	/^struct disjunction<T, Ts...> :$/;"	s	namespace:phmap
disjunction	extern/parallel_hashmap/phmap_base.h	/^struct disjunction<T> : T {};$/;"	s	namespace:phmap
dispatcher	tests/frontends/tasking/meson.build	/^    test('dispatcher', executable('dispatcher', 'dispatcher.cpp', dependencies: HiCRTestBuildDep/;"	B
dispatcher	tests/frontends/tasking/meson.build	/^    test('dispatcher', executable('dispatcher', 'dispatcher.cpp', dependencies: HiCRTestBuildDep/;"	t
dispatcherSet_t	include/frontends/tasking/worker.hpp	/^typedef std::set<HiCR::tasking::Dispatcher *> dispatcherSet_t;$/;"	t	namespace:HiCR::tasking	typeref:typename:std::set<HiCR::tasking::Dispatcher * >
div	extern/doxygen-awesome-css/doxygen-awesome.css	/^body, table, div, p, dl, #nav-tree .label, .title,$/;"	s
div	extern/doxygen-awesome-css/doxygen-awesome.css	/^p, div, table, dl, p.reference, p.definition {$/;"	s
div.contents	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents {$/;"	c
div.contents	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents, div.header .title  {$/;"	c
div.contents	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents, div.header .title, div.header .summary {$/;"	c
div.contents .textblock	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .textblock {$/;"	c
div.contents .toc	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .toc {$/;"	c
div.contents .toc	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents .toc {$/;"	c
div.contents .toc	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents .toc,$/;"	c
div.contents .toc > h3	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .toc > h3 {$/;"	s
div.contents .toc a	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .toc a, div.contents .toc a.active {$/;"	s
div.contents .toc a.active	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .toc a, div.contents .toc a.active {$/;"	c
div.contents .toc a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .toc a:hover {$/;"	s
div.contents .toc.interactive	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .toc.interactive {$/;"	c
div.contents .toc.interactive > h3::before	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .toc.interactive > h3::before {$/;"	s
div.contents .toc.interactive.open	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .toc.interactive.open {$/;"	c
div.contents .toc.interactive.open > h3::before	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.contents .toc.interactive.open > h3::before {$/;"	s
div.contents .toc::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents .toc::-webkit-scrollbar,$/;"	c
div.contents .toc::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents .toc::-webkit-scrollbar-thumb,$/;"	c
div.contents .toc::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents .toc::-webkit-scrollbar-track,$/;"	c
div.contents .toc:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents .toc:hover::-webkit-scrollbar-thumb,$/;"	c
div.contents div.dyncontent	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents div.dyncontent {$/;"	c
div.contents li	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents p, div.contents li {$/;"	s
div.contents p	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents p, div.contents li {$/;"	s
div.directory	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.directory {$/;"	c
div.directory	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.directory {$/;"	c
div.dynheader img[src="closed.png"]	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.dynheader img[src="closed.png"] {$/;"	s
div.dynheader img[src="open.png"]	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.dynheader img[src="open.png"],$/;"	s
div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.fragment, pre.fragment {$/;"	c
div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, code a, pre.fragment, div.fragment, div.fragment .line, div.fragment span, div.fragment .l/;"	c
div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, div.fragment, pre.fragment {$/;"	c
div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment, pre.fragment {$/;"	c
div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment,$/;"	c
div.fragment .line	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, code a, pre.fragment, div.fragment, div.fragment .line, div.fragment span, div.fragment .l/;"	c
div.fragment .line	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment .line, pre.fragment {$/;"	c
div.fragment .line a	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, code a, pre.fragment, div.fragment, div.fragment .line, div.fragment span, div.fragment .l/;"	s
div.fragment .line span	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, code a, pre.fragment, div.fragment, div.fragment .line, div.fragment span, div.fragment .l/;"	s
div.fragment .line:first-child .lineno	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment .line:first-child .lineno {$/;"	c
div.fragment a.code	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment a.code {$/;"	c
div.fragment span	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, code a, pre.fragment, div.fragment, div.fragment .line, div.fragment span, div.fragment .l/;"	s
div.fragment span.comment	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment span.comment {$/;"	c
div.fragment span.keyword	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment span.keyword {$/;"	c
div.fragment span.keywordflow	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment span.keywordflow {$/;"	c
div.fragment span.keywordtype	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment span.keywordtype {$/;"	c
div.fragment span.lineno	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment span.lineno {$/;"	c
div.fragment span.lineno a	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment span.lineno a {$/;"	s
div.fragment span.preprocessor	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment span.preprocessor {$/;"	c
div.fragment span.stringliteral	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment span.stringliteral {$/;"	c
div.fragment::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment::-webkit-scrollbar,$/;"	c
div.fragment::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment::-webkit-scrollbar-thumb,$/;"	c
div.fragment::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment::-webkit-scrollbar-track,$/;"	c
div.fragment:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment:hover::-webkit-scrollbar-thumb,$/;"	c
div.header	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.header {$/;"	c
div.header .summary	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents, div.header .title, div.header .summary {$/;"	c
div.header .summary	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.header .summary {$/;"	c
div.header .title	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents, div.header .title  {$/;"	c
div.header .title	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.contents, div.header .title, div.header .summary {$/;"	c
div.header .title	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.header .title {$/;"	c
div.headertitle	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.headertitle {$/;"	c
div.line	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.line {$/;"	c
div.line.glow	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.line.glow {$/;"	c
div.line:after	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.line:after {$/;"	c
div.memdoc	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memdoc {$/;"	c
div.memdoc	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memdoc, div.memproto, h2.memtitle {$/;"	c
div.memitem	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memitem {$/;"	c
div.memitem	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2.memtitle, div.memitem {$/;"	c
div.memproto	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memdoc, div.memproto, h2.memtitle {$/;"	c
div.memproto	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto {$/;"	c
div.memproto	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto, h2.memtitle {$/;"	c
div.memproto	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto,$/;"	c
div.memproto div.memtemplate	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto div.memtemplate {$/;"	c
div.memproto table.memname	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto table.memname {$/;"	c
div.memproto::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto::-webkit-scrollbar,$/;"	c
div.memproto::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto::-webkit-scrollbar-thumb,$/;"	c
div.memproto::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto::-webkit-scrollbar-track,$/;"	c
div.memproto:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto:hover::-webkit-scrollbar-thumb,$/;"	c
div.memtitle	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memtitle {$/;"	c
div.qindex	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.qindex {$/;"	c
div.toc h3	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.toc h3 {$/;"	s
div.toc li	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.toc li {$/;"	s
div.toc li a	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.toc li a {$/;"	s
div.toc li a.aboveActive	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.toc li a.aboveActive {$/;"	c
div.toc li a.active	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.toc li a:hover, div.toc li a.active {$/;"	c
div.toc li a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.toc li a:hover, div.toc li a.active {$/;"	s
div.toc li::before	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.toc li::before {$/;"	s
div.toc ul	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.toc ul {$/;"	s
diyfp	extern/nlohmann_json/json.hpp	/^    constexpr diyfp(std::uint64_t f_, int e_) noexcept : f(f_), e(e_) {}$/;"	f	struct:detail::dtoa_impl::diyfp
diyfp	extern/nlohmann_json/json.hpp	/^struct diyfp \/\/ f * 2^e$/;"	s	namespace:detail::dtoa_impl
dl	extern/doxygen-awesome-css/doxygen-awesome.css	/^body, table, div, p, dl, #nav-tree .label, .title,$/;"	s
dl	extern/doxygen-awesome-css/doxygen-awesome.css	/^p, div, table, dl, p.reference, p.definition {$/;"	s
dl dd .doxygen-awesome-fragment-wrapper > pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    dl dd .doxygen-awesome-fragment-wrapper > pre.fragment {$/;"	c
dl dd > .doxygen-awesome-fragment-wrapper > div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    dl dd > .doxygen-awesome-fragment-wrapper > div.fragment,$/;"	c
dl dd > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button	extern/doxygen-awesome-css/doxygen-awesome.css	/^    dl dd > .doxygen-awesome-fragment-wrapper > doxygen-awesome-fragment-copy-button {$/;"	s
dl dd > div.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    dl dd > div.fragment,$/;"	c
dl dd pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    dl dd pre.fragment,$/;"	c
dl.attention	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention {$/;"	c
dl.attention	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.attention dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning dt, dl.attention dt {$/;"	s
dl.bug	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.bug {$/;"	c
dl.bug	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.bug dd	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.section dd, dl.bug dd, dl.deprecated dd, dl.todo dd {$/;"	s
dl.bug dt a	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.bug dt a {$/;"	s
dl.bug dt a	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.bug dt a, dl.deprecated dt a, dl.todo dt a {$/;"	s
dl.deprecated	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.deprecated {$/;"	c
dl.deprecated	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.deprecated dd	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.section dd, dl.bug dd, dl.deprecated dd, dl.todo dd {$/;"	s
dl.deprecated dt a	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.bug dt a, dl.deprecated dt a, dl.todo dt a {$/;"	s
dl.deprecated dt a	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.deprecated dt a {$/;"	s
dl.invariant	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.invariant, dl.pre, dl.post {$/;"	c
dl.invariant	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.invariant dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.invariant dt, dl.pre dt, dl.post dt {$/;"	s
dl.note	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.note, dl.remark {$/;"	c
dl.note	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.note dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.note dt, dl.remark dt {$/;"	s
dl.post	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.invariant, dl.pre, dl.post {$/;"	c
dl.post	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.post dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.invariant dt, dl.pre dt, dl.post dt {$/;"	s
dl.pre	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.invariant, dl.pre, dl.post {$/;"	c
dl.pre	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.pre dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.invariant dt, dl.pre dt, dl.post dt {$/;"	s
dl.reflist	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.reflist {$/;"	c
dl.reflist dd	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.reflist dd {$/;"	s
dl.reflist dd	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.reflist dt, dl.reflist dd {$/;"	s
dl.reflist dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.reflist dt {$/;"	s
dl.reflist dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.reflist dt, dl.reflist dd {$/;"	s
dl.remark	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.note, dl.remark {$/;"	c
dl.remark	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.remark dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.note dt, dl.remark dt {$/;"	s
dl.section dd	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.section dd {$/;"	s
dl.section dd	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.section dd, dl.bug dd, dl.deprecated dd, dl.todo dd {$/;"	s
dl.todo	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.todo {$/;"	c
dl.todo	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.todo dd	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.section dd, dl.bug dd, dl.deprecated dd, dl.todo dd {$/;"	s
dl.todo dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.todo dt {$/;"	s
dl.todo dt a	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.bug dt a, dl.deprecated dt a, dl.todo dt a {$/;"	s
dl.warning	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention {$/;"	c
dl.warning	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning, dl.attention, dl.note, dl.deprecated, dl.bug, dl.invariant, dl.pre, dl.post, dl.todo/;"	c
dl.warning dt	extern/doxygen-awesome-css/doxygen-awesome.css	/^dl.warning dt, dl.attention dt {$/;"	s
do_less_than_comparison	extern/parallel_hashmap/btree.h	/^        constexpr bool do_less_than_comparison(const Compare &compare, const K &x,$/;"	f	namespace:phmap::compare_internal	typeref:typename:bool
do_pop	extern/atomic_queue/atomic_queue.h	/^    T do_pop(unsigned tail) noexcept {$/;"	f	class:atomic_queue::AtomicQueue	typeref:typename:T
do_pop	extern/atomic_queue/atomic_queue.h	/^    T do_pop(unsigned tail) noexcept {$/;"	f	class:atomic_queue::AtomicQueue2	typeref:typename:T
do_pop	extern/atomic_queue/atomic_queue.h	/^    T do_pop(unsigned tail) noexcept {$/;"	f	class:atomic_queue::AtomicQueueB	typeref:typename:T
do_pop	extern/atomic_queue/atomic_queue.h	/^    T do_pop(unsigned tail) noexcept {$/;"	f	class:atomic_queue::AtomicQueueB2	typeref:typename:T
do_pop_any	extern/atomic_queue/atomic_queue.h	/^    static T do_pop_any(std::atomic<unsigned char>& state, T& q_element) noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:T
do_pop_atomic	extern/atomic_queue/atomic_queue.h	/^    static T do_pop_atomic(std::atomic<T>& q_element) noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:T
do_push	extern/atomic_queue/atomic_queue.h	/^    void do_push(T element, unsigned head) noexcept {$/;"	f	class:atomic_queue::AtomicQueue	typeref:typename:void
do_push	extern/atomic_queue/atomic_queue.h	/^    void do_push(T element, unsigned head) noexcept {$/;"	f	class:atomic_queue::AtomicQueueB	typeref:typename:void
do_push	extern/atomic_queue/atomic_queue.h	/^    void do_push(U&& element, unsigned head) noexcept {$/;"	f	class:atomic_queue::AtomicQueue2	typeref:typename:void
do_push	extern/atomic_queue/atomic_queue.h	/^    void do_push(U&& element, unsigned head) noexcept {$/;"	f	class:atomic_queue::AtomicQueueB2	typeref:typename:void
do_push_any	extern/atomic_queue/atomic_queue.h	/^    static void do_push_any(U&& element, std::atomic<unsigned char>& state, T& q_element) noexce/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:void
do_push_atomic	extern/atomic_queue/atomic_queue.h	/^    static void do_push_atomic(T element, std::atomic<T>& q_element) noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:void
do_three_way_comparison	extern/parallel_hashmap/btree.h	/^            constexpr phmap::weak_ordering do_three_way_comparison(const Compare &compare,$/;"	f	namespace:phmap::compare_internal	typeref:typename:phmap::weak_ordering
doxygen	docs/Makefile	/^doxygen:$/;"	t
doxygen-awesome-dark-mode-toggle	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-dark-mode-toggle {$/;"	s
doxygen-awesome-dark-mode-toggle > svg	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-dark-mode-toggle > svg {$/;"	s
doxygen-awesome-dark-mode-toggle:active > svg	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-dark-mode-toggle:active > svg {$/;"	s
doxygen-awesome-dark-mode-toggle:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-dark-mode-toggle:hover {$/;"	s
doxygen-awesome-fragment-copy-button	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-fragment-copy-button {$/;"	s
doxygen-awesome-fragment-copy-button svg	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-fragment-copy-button svg {$/;"	s
doxygen-awesome-fragment-copy-button.success	extern/doxygen-awesome-css/doxygen-awesome.css	/^.doxygen-awesome-fragment-wrapper:hover doxygen-awesome-fragment-copy-button, doxygen-awesome-fr/;"	c
doxygen-awesome-fragment-copy-button.success	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-fragment-copy-button.success {$/;"	c
doxygen-awesome-fragment-copy-button.success	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-fragment-copy-button:hover, doxygen-awesome-fragment-copy-button.success {$/;"	c
doxygen-awesome-fragment-copy-button.success svg	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-fragment-copy-button.success svg {$/;"	s
doxygen-awesome-fragment-copy-button:active:not([class~=success] ) svg	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-fragment-copy-button:active:not([class~=success]) svg {$/;"	s
doxygen-awesome-fragment-copy-button:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^doxygen-awesome-fragment-copy-button:hover, doxygen-awesome-fragment-copy-button.success {$/;"	s
doxygen_root	docs/source/conf.py	/^doxygen_root = "source\/doxygen"$/;"	v
doxylink	docs/source/conf.py	/^doxylink = {$/;"	v
doxysphinx	docs/Makefile	/^doxysphinx:$/;"	t
drop_deletes_without_resize	extern/parallel_hashmap/phmap.h	/^    void drop_deletes_without_resize() PHMAP_ATTRIBUTE_NOINLINE {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
drop_deletes_without_resize	extern/parallel_hashmap/phmap.h	/^    void drop_deletes_without_resize() PHMAP_ATTRIBUTE_NOINLINE {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
dtoa_impl	extern/nlohmann_json/json.hpp	/^namespace dtoa_impl$/;"	n	namespace:detail
dummy_	extern/parallel_hashmap/phmap_base.h	/^        dummy_type dummy_;$/;"	m	union:phmap::optional_internal::optional_data_dtor_base::__anon32d953ed020a	typeref:typename:dummy_type
dummy_	extern/parallel_hashmap/phmap_base.h	/^        dummy_type dummy_;$/;"	m	union:phmap::optional_internal::optional_data_dtor_base::__anon32d953ed030a	typeref:typename:dummy_type
dummy_type	extern/parallel_hashmap/phmap_base.h	/^    struct dummy_type {$/;"	s	class:phmap::optional_internal::optional_data_dtor_base
dump	extern/nlohmann_json/json.hpp	/^    string_t dump(const int indent = -1,$/;"	f	class:basic_json	typeref:typename:string_t
dump	extern/nlohmann_json/json.hpp	/^    void dump(const BasicJsonType& val,$/;"	f	class:detail::serializer	typeref:typename:void
dump_float	extern/nlohmann_json/json.hpp	/^    void dump_float(number_float_t x)$/;"	f	class:detail::serializer	typeref:typename:void
dump_float	extern/nlohmann_json/json.hpp	/^    void dump_float(number_float_t x, std::false_type \/*is_ieee_single_or_double*\/)$/;"	f	class:detail::serializer	typeref:typename:void
dump_float	extern/nlohmann_json/json.hpp	/^    void dump_float(number_float_t x, std::true_type \/*is_ieee_single_or_double*\/)$/;"	f	class:detail::serializer	typeref:typename:void
dump_integer	extern/nlohmann_json/json.hpp	/^    void dump_integer(NumberType x)$/;"	f	class:detail::serializer	typeref:typename:void
e	extern/nlohmann_json/json.hpp	/^    int e = 0;$/;"	m	struct:detail::dtoa_impl::diyfp	typeref:typename:int
e	extern/nlohmann_json/json.hpp	/^    int e;$/;"	m	struct:detail::dtoa_impl::cached_power	typeref:typename:int
el	extern/parallel_hashmap/phmap_utils.h	/^        const auto &el = std::get<I>(t);$/;"	m	struct:phmap::Hash	typeref:typename:const auto &
el_type	extern/parallel_hashmap/phmap_utils.h	/^        using el_type = typename std::remove_cv<typename std::remove_reference<decltype(el)>::ty/;"	t	struct:phmap::Hash
element	extern/parallel_hashmap/btree.h	/^        static const value_type &element(const slot_type *slot) { return *slot; }$/;"	f	struct:phmap::priv::set_slot_policy	typeref:typename:const value_type &
element	extern/parallel_hashmap/btree.h	/^        static const value_type &element(const slot_type *slot) {$/;"	f	struct:phmap::priv::common_params	typeref:typename:const value_type &
element	extern/parallel_hashmap/btree.h	/^        static value_type &element(slot_type *slot) { return *slot; }$/;"	f	struct:phmap::priv::set_slot_policy	typeref:typename:value_type &
element	extern/parallel_hashmap/btree.h	/^        static value_type &element(slot_type *slot) {$/;"	f	struct:phmap::priv::common_params	typeref:typename:value_type &
element	extern/parallel_hashmap/phmap.h	/^    static Reference element(slot_type* slot) { return **slot; }$/;"	f	struct:phmap::priv::node_hash_policy	typeref:typename:Reference
element	extern/parallel_hashmap/phmap.h	/^    static T& element(slot_type* slot) { return *slot; }$/;"	f	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:T &
element	extern/parallel_hashmap/phmap.h	/^    static std::pair<const K, V>& element(slot_type* slot) { return slot->value; }$/;"	f	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:std::pair<const K,V> &
element	extern/parallel_hashmap/phmap_base.h	/^    static auto element(slot_type* slot) -> decltype(P::element(slot)) {$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:decltype(P::element (slot))
element	extern/parallel_hashmap/phmap_base.h	/^    static const value_type& element(const slot_type* slot) {$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:const value_type &
element	extern/parallel_hashmap/phmap_base.h	/^    static value_type& element(slot_type* slot) { return slot->value; }$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:value_type &
element_space_used	extern/parallel_hashmap/phmap.h	/^    static size_t element_space_used(const T*) { return sizeof(T); }$/;"	f	struct:phmap::priv::NodeHashSetPolicy	typeref:typename:size_t
element_space_used	extern/parallel_hashmap/phmap.h	/^    static size_t element_space_used(const value_type*) {$/;"	f	class:phmap::priv::NodeHashMapPolicy	typeref:typename:size_t
element_type	extern/parallel_hashmap/phmap_base.h	/^    using element_type = T;$/;"	t	struct:phmap::pointer_traits	typeref:typename:T
element_type	extern/parallel_hashmap/phmap_base.h	/^    using element_type = typename memory_internal::ElementType<Ptr>::type;$/;"	t	struct:phmap::pointer_traits	typeref:typename:memory_internal::ElementType<Ptr>::type
elements_	extern/atomic_queue/atomic_queue.h	/^    T* elements_;$/;"	m	class:atomic_queue::AtomicQueueB2	typeref:typename:T *
elements_	extern/atomic_queue/atomic_queue.h	/^    std::atomic<T>* elements_;$/;"	m	class:atomic_queue::AtomicQueueB	typeref:typename:std::atomic<T> *
emplace	extern/nlohmann_json/json.hpp	/^    std::pair<iterator, bool> emplace(Args&& ... args)$/;"	f	class:basic_json	typeref:typename:std::pair<iterator,bool>
emplace	extern/nlohmann_json/json.hpp	/^    std::pair<iterator, bool> emplace(KeyType && key, T && t)$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
emplace	extern/nlohmann_json/json.hpp	/^    std::pair<iterator, bool> emplace(const key_type& key, T&& t)$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
emplace	extern/parallel_hashmap/btree.h	/^        iterator emplace(Args &&... args) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:iterator
emplace	extern/parallel_hashmap/btree.h	/^        std::pair<iterator, bool> emplace(Args &&... args) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:std::pair<iterator,bool>
emplace	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> emplace(Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<iterator,bool>
emplace	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> emplace(Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<iterator,bool>
emplace	extern/parallel_hashmap/phmap_base.h	/^        T& emplace(Args&&... args) {$/;"	f	class:phmap::optional	typeref:typename:T &
emplace	extern/parallel_hashmap/phmap_base.h	/^        T& emplace(std::initializer_list<U> il, Args&&... args) {$/;"	f	class:phmap::optional	typeref:typename:T &
emplace	extern/parallel_hashmap/phmap_base.h	/^    static void emplace(slot_type* slot) {$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:void
emplace_at	extern/parallel_hashmap/phmap.h	/^    void emplace_at(size_t i, Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
emplace_back	extern/nlohmann_json/json.hpp	/^    reference emplace_back(Args&& ... args)$/;"	f	class:basic_json	typeref:typename:reference
emplace_decomposable	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> emplace_decomposable(const K& key, Args&&... args)$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<iterator,bool>
emplace_decomposable	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> emplace_decomposable(const K& key, size_t hashval, $/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<iterator,bool>
emplace_decomposable_with_hash	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> emplace_decomposable_with_hash(const K& key, size_t hashval, Args&/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<iterator,bool>
emplace_hint	extern/parallel_hashmap/btree.h	/^        iterator emplace_hint(const_iterator hint, Args &&... args) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:iterator
emplace_hint	extern/parallel_hashmap/btree.h	/^        iterator emplace_hint(const_iterator hint, Args &&... args) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:iterator
emplace_hint	extern/parallel_hashmap/phmap.h	/^    iterator emplace_hint(const_iterator, Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
emplace_hint	extern/parallel_hashmap/phmap.h	/^    iterator emplace_hint(const_iterator, Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
emplace_hint_with_hash	extern/parallel_hashmap/phmap.h	/^    iterator emplace_hint_with_hash(size_t hashval, const_iterator, Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
emplace_hint_with_hash	extern/parallel_hashmap/phmap.h	/^    iterator emplace_hint_with_hash(size_t hashval, const_iterator, Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
emplace_single	extern/parallel_hashmap/phmap.h	/^    void emplace_single(const key_arg<K>& key, F&& f) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
emplace_single_with_hash	extern/parallel_hashmap/phmap.h	/^    void emplace_single_with_hash(const key_arg<K>& key, size_t hashval, F&& f) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
emplace_single_with_hash	extern/parallel_hashmap/phmap.h	/^    void emplace_single_with_hash(const key_arg<K>& key, size_t hashval, F&& f) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
emplace_value	extern/parallel_hashmap/btree.h	/^    inline void btree_node<P>::emplace_value(const size_type i,$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
emplace_with_hash	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> emplace_with_hash(size_t hashval, Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<iterator,bool>
emplace_with_hash	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> emplace_with_hash(size_t hashval, Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<iterator,bool>
empty	extern/nlohmann_json/json.hpp	/^    bool empty() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
empty	extern/nlohmann_json/json.hpp	/^    bool empty() const noexcept$/;"	f	class:json_pointer	typeref:typename:bool
empty	extern/nlohmann_json/json.hpp	/^    bool empty() const$/;"	f	class:detail::iterator_input_adapter	typeref:typename:bool
empty	extern/parallel_hashmap/btree.h	/^        bool empty() const { return size_ == 0; }$/;"	f	class:phmap::priv::btree	typeref:typename:bool
empty	extern/parallel_hashmap/btree.h	/^        bool empty() const { return tree_.empty(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:bool
empty	extern/parallel_hashmap/phmap.h	/^    bool empty() const { return !size(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
empty	extern/parallel_hashmap/phmap.h	/^    bool empty() const { return !size(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
empty	extern/parallel_hashmap/phmap_base.h	/^    bool empty() const noexcept { return !alloc_; }$/;"	f	class:phmap::priv::node_handle_base	typeref:typename:bool
empty	extern/parallel_hashmap/phmap_base.h	/^    constexpr bool empty() const noexcept { return size() == 0; }$/;"	f	class:phmap::Span	typeref:typename:bool
empty_str	extern/nlohmann_json/json.hpp	/^    string_type empty_str{};$/;"	m	class:detail::iteration_proxy_value	typeref:typename:string_type
empty_struct	extern/parallel_hashmap/phmap_base.h	/^struct empty_struct {};$/;"	s	namespace:phmap::optional_internal
enableDarkMode	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static enableDarkMode(enable) {$/;"	m	class:DoxygenAwesomeDarkModeToggle
enable_if_t	extern/nlohmann_json/json.hpp	/^using enable_if_t = typename std::enable_if<B, T>::type;$/;"	t	namespace:detail	typeref:typename:std::enable_if<B,T>::type
enable_if_t	extern/parallel_hashmap/phmap_base.h	/^using enable_if_t = typename std::enable_if<B, T>::type;$/;"	t	namespace:phmap	typeref:typename:std::enable_if<B,T>::type
enabledBackends	meson.build	/^enabledBackends = get_option('backends')$/;"	V
end	extern/nlohmann_json/json.hpp	/^    IteratorType end;$/;"	m	class:detail::iterator_input_adapter	typeref:typename:IteratorType
end	extern/nlohmann_json/json.hpp	/^    const_iterator end() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
end	extern/nlohmann_json/json.hpp	/^    iteration_proxy_value<IteratorType> end() const noexcept$/;"	f	class:detail::iteration_proxy	typeref:typename:iteration_proxy_value<IteratorType>
end	extern/nlohmann_json/json.hpp	/^    iterator end() noexcept$/;"	f	class:basic_json	typeref:typename:iterator
end	extern/parallel_hashmap/btree.h	/^        const_iterator end() const             { return tree_.end(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:const_iterator
end	extern/parallel_hashmap/btree.h	/^        const_iterator end() const {$/;"	f	class:phmap::priv::btree	typeref:typename:const_iterator
end	extern/parallel_hashmap/btree.h	/^        iterator end()                         { return tree_.end(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:iterator
end	extern/parallel_hashmap/btree.h	/^        iterator end() { return iterator(rightmost_, rightmost_->count()); }$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
end	extern/parallel_hashmap/phmap.h	/^    BitMask end() const { return BitMask(0); }$/;"	f	class:phmap::priv::BitMask	typeref:typename:BitMask
end	extern/parallel_hashmap/phmap.h	/^    const_iterator end()    const { return const_cast<parallel_hash_set *>(this)->end(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const_iterator
end	extern/parallel_hashmap/phmap.h	/^    const_iterator end() const { return const_cast<raw_hash_set*>(this)->end(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const_iterator
end	extern/parallel_hashmap/phmap.h	/^    iterator       end()          { return iterator(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
end	extern/parallel_hashmap/phmap.h	/^    iterator end() $/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
end	extern/parallel_hashmap/phmap_base.h	/^    constexpr iterator end() const noexcept { return data() + size(); }$/;"	f	class:phmap::Span	typeref:typename:iterator
end_array	extern/nlohmann_json/json.hpp	/^        end_array,        \/\/\/< the character for array end `]`$/;"	e	enum:detail::lexer_base::token_type
end_array	extern/nlohmann_json/json.hpp	/^    bool end_array()$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
end_array	extern/nlohmann_json/json.hpp	/^    bool end_array()$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
end_array	extern/nlohmann_json/json.hpp	/^    bool end_array()$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
end_array_function_t	extern/nlohmann_json/json.hpp	/^using end_array_function_t = decltype(std::declval<T&>().end_array());$/;"	t	namespace:detail
end_object	extern/nlohmann_json/json.hpp	/^        end_object,       \/\/\/< the character for object end `}`$/;"	e	enum:detail::lexer_base::token_type
end_object	extern/nlohmann_json/json.hpp	/^    bool end_object()$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
end_object	extern/nlohmann_json/json.hpp	/^    bool end_object()$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
end_object	extern/nlohmann_json/json.hpp	/^    bool end_object()$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
end_object_function_t	extern/nlohmann_json/json.hpp	/^using end_object_function_t = decltype(std::declval<T&>().end_object());$/;"	t	namespace:detail
end_of_input	extern/nlohmann_json/json.hpp	/^        end_of_input,     \/\/\/< indicating the end of the input buffer$/;"	e	enum:detail::lexer_base::token_type
end_value	extern/nlohmann_json/json.hpp	/^    static constexpr difference_type end_value = begin_value + 1;$/;"	m	class:detail::primitive_iterator_t	typeref:typename:difference_type
energySaver	examples/tasking/energySaver/meson.build	/^	  test('energySaver', energySaver, args : [ '10', '1', '100' ], suite: testSuite)$/;"	t
energySaver	examples/tasking/energySaver/meson.build	/^	energySaver = executable('energySaver', [ 'source\/main.cpp'], dependencies: hicrBuildDep)$/;"	B
energySaver	examples/tasking/energySaver/meson.build	/^	energySaver = executable('energySaver', [ 'source\/main.cpp'], dependencies: hicrBuildDep)$/;"	V
energySaver	examples/tasking/meson.build	/^subdir('energySaver')$/;"	S
engaged_	extern/parallel_hashmap/phmap_base.h	/^    bool engaged_;$/;"	m	class:phmap::optional_internal::optional_data_dtor_base	typeref:typename:bool
entryPointFc	examples/runtime/source/main.cpp	/^void entryPointFc(HiCR::Runtime &runtime, const std::string &entryPointName)$/;"	f	typeref:typename:void
entryPointName	include/frontends/machineModel/machineModel.hpp	/^    std::string entryPointName;$/;"	m	struct:HiCR::MachineModel::request_t	typeref:typename:std::string
entryPoint_t	include/frontends/runtime/runtime.hpp	/^  typedef std::pair<const std::string, const HiCR::L1::InstanceManager::RPCFunction_t> entryPoin/;"	t	class:HiCR::Runtime	typeref:typename:std::pair<const std::string,const HiCR::L1::InstanceManager::RPCFunction_t>
eq	extern/parallel_hashmap/btree.h	/^        enum class eq : value_type {$/;"	g	namespace:phmap::compare_internal	typeref:typename:value_type
eq	extern/parallel_hashmap/phmap.h	/^            const key_equal& eq;$/;"	m	struct:phmap::priv::parallel_hash_set::Inner::Params	typeref:typename:const key_equal &
eq	extern/parallel_hashmap/phmap.h	/^        const key_equal& eq;$/;"	m	struct:phmap::priv::parallel_hash_set::EqualElement	typeref:typename:const key_equal &
eq	extern/parallel_hashmap/phmap.h	/^        const key_equal& eq;$/;"	m	struct:phmap::priv::raw_hash_set::EqualElement	typeref:typename:const key_equal &
eq_ref	extern/parallel_hashmap/phmap.h	/^    const key_equal& eq_ref() const { return sets_[0].set_.eq_ref(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const key_equal &
eq_ref	extern/parallel_hashmap/phmap.h	/^    const key_equal& eq_ref() const { return settings_.template get<2>(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const key_equal &
eq_ref	extern/parallel_hashmap/phmap.h	/^    key_equal&       eq_ref()       { return sets_[0].set_.eq_ref(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:key_equal &
eq_ref	extern/parallel_hashmap/phmap.h	/^    key_equal& eq_ref() { return settings_.template get<2>(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:key_equal &
equal	extern/parallel_hashmap/btree.h	/^            equal = 0,$/;"	e	enum:phmap::compare_internal::eq
equal_range	extern/parallel_hashmap/btree.h	/^        std::pair<const_iterator, const_iterator> equal_range($/;"	f	class:phmap::priv::btree_container	typeref:typename:std::pair<const_iterator,const_iterator>
equal_range	extern/parallel_hashmap/btree.h	/^        std::pair<const_iterator, const_iterator> equal_range(const K &key) const {$/;"	f	class:phmap::priv::btree	typeref:typename:std::pair<const_iterator,const_iterator>
equal_range	extern/parallel_hashmap/btree.h	/^        std::pair<iterator, iterator> equal_range(const K &key) {$/;"	f	class:phmap::priv::btree	typeref:typename:std::pair<iterator,iterator>
equal_range	extern/parallel_hashmap/btree.h	/^        std::pair<iterator, iterator> equal_range(const key_arg<K> &key) { return tree_.equal_ra/;"	f	class:phmap::priv::btree_container	typeref:typename:std::pair<iterator,iterator>
equal_range	extern/parallel_hashmap/phmap.h	/^    std::pair<const_iterator, const_iterator> equal_range($/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<const_iterator,const_iterator>
equal_range	extern/parallel_hashmap/phmap.h	/^    std::pair<const_iterator, const_iterator> equal_range($/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<const_iterator,const_iterator>
equal_range	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, iterator> equal_range(const key_arg<K>& key) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<iterator,iterator>
equal_range	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, iterator> equal_range(const key_arg<K>& key) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<iterator,iterator>
equivalent	extern/parallel_hashmap/btree.h	/^                equivalent = equal,$/;"	e	enum:phmap::compare_internal::eq
erase	extern/nlohmann_json/json.hpp	/^    iterator erase(iterator first, iterator last)$/;"	f	struct:ordered_map	typeref:typename:iterator
erase	extern/nlohmann_json/json.hpp	/^    iterator erase(iterator pos)$/;"	f	struct:ordered_map	typeref:typename:iterator
erase	extern/nlohmann_json/json.hpp	/^    size_type erase(KeyType && key)$/;"	f	class:basic_json	typeref:typename:size_type
erase	extern/nlohmann_json/json.hpp	/^    size_type erase(KeyType && key)$/;"	f	struct:ordered_map	typeref:typename:size_type
erase	extern/nlohmann_json/json.hpp	/^    size_type erase(const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:size_type
erase	extern/nlohmann_json/json.hpp	/^    size_type erase(const typename object_t::key_type& key)$/;"	f	class:basic_json	typeref:typename:size_type
erase	extern/nlohmann_json/json.hpp	/^    void erase(const size_type idx)$/;"	f	class:basic_json	typeref:typename:void
erase	extern/parallel_hashmap/btree.h	/^        iterator erase(const_iterator first, const_iterator last) {$/;"	f	class:phmap::priv::btree_container	typeref:typename:iterator
erase	extern/parallel_hashmap/btree.h	/^        iterator erase(const_iterator iter) { return tree_.erase(iterator(iter)); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:iterator
erase	extern/parallel_hashmap/btree.h	/^        iterator erase(iterator iter)       { return tree_.erase(iter); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:iterator
erase	extern/parallel_hashmap/btree.h	/^        size_type erase(const key_arg<K> &key) { return this->tree_.erase_unique(key); }$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:size_type
erase	extern/parallel_hashmap/btree.h	/^        size_type erase(const key_arg<K> &key) {$/;"	f	class:phmap::priv::btree_container	typeref:typename:size_type
erase	extern/parallel_hashmap/btree.h	/^        size_type erase(const key_arg<K> &key) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:size_type
erase	extern/parallel_hashmap/btree.h	/^    auto btree<P>::erase(iterator _begin, iterator _end)$/;"	f	class:phmap::priv::btree	typeref:typename:std::pair<size_type,iterator>
erase	extern/parallel_hashmap/btree.h	/^    auto btree<P>::erase(iterator iter) -> iterator {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
erase	extern/parallel_hashmap/phmap.h	/^    iterator erase(const_iterator cit) { return erase(cit.inner_); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
erase	extern/parallel_hashmap/phmap.h	/^    iterator erase(const_iterator cit) { return erase(cit.iter_); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
erase	extern/parallel_hashmap/phmap.h	/^    iterator erase(const_iterator first, const_iterator last) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
erase	extern/parallel_hashmap/phmap.h	/^    iterator erase(const_iterator first, const_iterator last) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
erase	extern/parallel_hashmap/phmap.h	/^    iterator erase(iterator it) { _erase(it++); return it; }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
erase	extern/parallel_hashmap/phmap.h	/^    iterator erase(iterator it) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
erase	extern/parallel_hashmap/phmap.h	/^    size_type erase(const key_arg<K>& key) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_type
erase	extern/parallel_hashmap/phmap.h	/^    size_type erase(const key_arg<K>& key) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:size_type
erase_from_leaf_node	extern/parallel_hashmap/btree.h	/^    auto btree<P>::erase_from_leaf_node(iterator _begin, size_type to_erase)$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
erase_if	extern/parallel_hashmap/btree.h	/^    void erase_if(btree_map<K, V, C, A> &map, Pred pred) {$/;"	f	namespace:phmap	typeref:typename:void
erase_if	extern/parallel_hashmap/btree.h	/^    void erase_if(btree_multimap<K, V, C, A> &map, Pred pred) {$/;"	f	namespace:phmap	typeref:typename:void
erase_if	extern/parallel_hashmap/btree.h	/^    void erase_if(btree_multiset<K, C, A> &set, Pred pred) {$/;"	f	namespace:phmap	typeref:typename:void
erase_if	extern/parallel_hashmap/btree.h	/^    void erase_if(btree_set<K, C, A> &set, Pred pred) {$/;"	f	namespace:phmap	typeref:typename:void
erase_if	extern/parallel_hashmap/phmap.h	/^        std::size_t erase_if(C &c, Pred pred) {$/;"	f	namespace:phmap::priv	typeref:typename:std::size_t
erase_if	extern/parallel_hashmap/phmap.h	/^    bool erase_if(const key_arg<K>& key, F&& f) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
erase_if	extern/parallel_hashmap/phmap.h	/^    std::size_t erase_if(phmap::flat_hash_map<K, V, Hash, Eq, Alloc>& c, Pred pred) {$/;"	f	namespace:phmap	typeref:typename:std::size_t
erase_if	extern/parallel_hashmap/phmap.h	/^    std::size_t erase_if(phmap::flat_hash_set<T, Hash, Eq, Alloc>& c, Pred pred) {$/;"	f	namespace:phmap	typeref:typename:std::size_t
erase_if	extern/parallel_hashmap/phmap.h	/^    std::size_t erase_if(phmap::node_hash_map<K, V, Hash, Eq, Alloc>& c, Pred pred) {$/;"	f	namespace:phmap	typeref:typename:std::size_t
erase_if	extern/parallel_hashmap/phmap.h	/^    std::size_t erase_if(phmap::node_hash_set<T, Hash, Eq, Alloc>& c, Pred pred) {$/;"	f	namespace:phmap	typeref:typename:std::size_t
erase_if	extern/parallel_hashmap/phmap.h	/^    std::size_t erase_if(phmap::parallel_flat_hash_map<K, V, Hash, Eq, Alloc, N, Mtx_>& c, Pred /;"	f	namespace:phmap	typeref:typename:std::size_t
erase_if	extern/parallel_hashmap/phmap.h	/^    std::size_t erase_if(phmap::parallel_flat_hash_set<T, Hash, Eq, Alloc, N, Mtx_>& c, Pred pre/;"	f	namespace:phmap	typeref:typename:std::size_t
erase_if	extern/parallel_hashmap/phmap.h	/^    std::size_t erase_if(phmap::parallel_node_hash_map<K, V, Hash, Eq, Alloc, N, Mtx_>& c, Pred /;"	f	namespace:phmap	typeref:typename:std::size_t
erase_if	extern/parallel_hashmap/phmap.h	/^    std::size_t erase_if(phmap::parallel_node_hash_set<T, Hash, Eq, Alloc, N, Mtx_>& c, Pred pre/;"	f	namespace:phmap	typeref:typename:std::size_t
erase_if_impl	extern/parallel_hashmap/phmap.h	/^    bool erase_if_impl(const key_arg<K>& key, F&& f) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
erase_internal	extern/nlohmann_json/json.hpp	/^    size_type erase_internal(KeyType && key)$/;"	f	class:basic_json	typeref:typename:size_type
erase_meta_only	extern/parallel_hashmap/phmap.h	/^    void erase_meta_only(const_iterator cit) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
erase_meta_only	extern/parallel_hashmap/phmap.h	/^    void erase_meta_only(const_iterator it) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
erase_multi	extern/parallel_hashmap/btree.h	/^    auto btree<P>::erase_multi(const K &key) -> size_type {$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
erase_same_node	extern/parallel_hashmap/btree.h	/^    void btree<P>::erase_same_node(iterator _begin, iterator _end) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
erase_unique	extern/parallel_hashmap/btree.h	/^    auto btree<P>::erase_unique(const K &key) -> size_type {$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
error	extern/nlohmann_json/json.hpp	/^    error,   \/\/\/< throw a parse_error exception in case of a tag$/;"	e	enum:detail::cbor_tag_handler_t
error_handler	extern/nlohmann_json/json.hpp	/^    const error_handler_t error_handler;$/;"	m	class:detail::serializer	typeref:typename:const error_handler_t
error_handler_t	extern/nlohmann_json/json.hpp	/^    using error_handler_t = detail::error_handler_t;$/;"	t	class:basic_json	typeref:typename:detail::error_handler_t
error_handler_t	extern/nlohmann_json/json.hpp	/^enum class error_handler_t$/;"	g	namespace:detail
error_message	extern/nlohmann_json/json.hpp	/^    const char* error_message = "";$/;"	m	class:detail::lexer	typeref:typename:const char *
errored	extern/nlohmann_json/json.hpp	/^    bool errored = false;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
errored	extern/nlohmann_json/json.hpp	/^    bool errored = false;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:bool
escape	extern/nlohmann_json/json.hpp	/^inline StringType escape(StringType s)$/;"	f	namespace:detail	typeref:typename:StringType
eventCallback_t	include/frontends/tasking/eventMap.hpp	/^using eventCallback_t = std::function<void(T *)>;$/;"	t	namespace:HiCR::tasking
event_t	include/frontends/tasking/task.hpp	/^  enum event_t$/;"	g	class:HiCR::tasking::Task
exampleBuildIncludes	examples/channels/fixedSize/mpsc/meson.build	/^exampleBuildIncludes = include_directories([$/;"	V
exampleBuildIncludes	examples/channels/fixedSize/spsc/meson.build	/^exampleBuildIncludes = include_directories([$/;"	V
exampleBuildIncludes	examples/channels/variableSize/spsc/meson.build	/^exampleBuildIncludes = include_directories([$/;"	V
examples	meson.build	/^  subdir('examples')$/;"	S
exception	.vscode/settings.json	/^        "exception": "cpp",$/;"	s	object:files.associations
exception	extern/nlohmann_json/json.hpp	/^    exception(int id_, const char* what_arg) : id(id_), m(what_arg) {} \/\/ NOLINT(bugprone-thro/;"	f	class:detail::exception
exception	extern/nlohmann_json/json.hpp	/^    using exception = detail::exception;$/;"	t	class:basic_json	typeref:typename:detail::exception
exception	extern/nlohmann_json/json.hpp	/^class exception : public std::exception$/;"	c	namespace:detail
exceptionModel	include/hicr/meson.build	/^exceptionModel = get_option('exceptionModel')$/;"	V
exceptionModel	meson_options.txt	/^option('exceptionModel', type : 'combo', choices : [ 'stdexception', 'abort' ], value : 'stdexce/;"	c
exception_message	extern/nlohmann_json/json.hpp	/^    std::string exception_message(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:std::string
exception_message	extern/nlohmann_json/json.hpp	/^    std::string exception_message(const token_type expected, const std::string& context)$/;"	f	class:detail::parser	typeref:typename:std::string
exception_t	extern/nlohmann_json/json.hpp	/^    using exception_t = typename BasicJsonType::exception;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::exception
exception_t	extern/nlohmann_json/json.hpp	/^    using exception_t = typename BasicJsonType::exception;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::exception
exception_t	include/hicr/exceptions.hpp	/^enum exception_t$/;"	g	namespace:HiCR::exceptions
exceptions	include/hicr/exceptions.hpp	/^namespace exceptions$/;"	n	namespace:HiCR
exchangeGlobalMemorySlots	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void exchangeGlobalMemorySlots(const L0::GlobalMemorySlot::tag_t tag, const st/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
exchangeGlobalMemorySlotsImpl	include/backends/ascend/L1/communicationManager.hpp	/^  __USED__ inline void exchangeGlobalMemorySlotsImpl(const HiCR::L0::GlobalMemorySlot::tag_t tag/;"	f	class:HiCR::backend::ascend::L1::CommunicationManager	typeref:typename:__USED__ void
exchangeGlobalMemorySlotsImpl	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void exchangeGlobalMemorySlotsImpl(const HiCR::L0::GlobalMemorySlot::tag_t tag/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
exchangeGlobalMemorySlotsImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void exchangeGlobalMemorySlotsImpl(const HiCR::L0::GlobalMemorySlot::tag_t tag/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
exchangeGlobalMemorySlotsImpl	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void exchangeGlobalMemorySlotsImpl(const HiCR::L0::GlobalMemorySlot::tag_t tag/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
exclude_patterns	docs/source/conf.py	/^exclude_patterns = []$/;"	v
excludes_from_file	extern/run-clang-format/run-clang-format.py	/^def excludes_from_file(ignore_file):$/;"	f
executeKernel	examples/hicr/kernel/source/ascend.cpp	/^void executeKernel($/;"	f	typeref:typename:void
executeRPC	include/hicr/L1/instanceManager.hpp	/^  __USED__ inline void executeRPC(const RPCTargetIndex_t rpcIdx)$/;"	f	class:HiCR::L1::InstanceManager	typeref:typename:__USED__ void
extensions	docs/source/conf.py	/^extensions = [$/;"	v
external_constructor	extern/nlohmann_json/json.hpp	/^struct external_constructor<value_t::array>$/;"	s	namespace:detail
external_constructor	extern/nlohmann_json/json.hpp	/^struct external_constructor<value_t::binary>$/;"	s	namespace:detail
external_constructor	extern/nlohmann_json/json.hpp	/^struct external_constructor<value_t::boolean>$/;"	s	namespace:detail
external_constructor	extern/nlohmann_json/json.hpp	/^struct external_constructor<value_t::number_float>$/;"	s	namespace:detail
external_constructor	extern/nlohmann_json/json.hpp	/^struct external_constructor<value_t::number_integer>$/;"	s	namespace:detail
external_constructor	extern/nlohmann_json/json.hpp	/^struct external_constructor<value_t::number_unsigned>$/;"	s	namespace:detail
external_constructor	extern/nlohmann_json/json.hpp	/^struct external_constructor<value_t::object>$/;"	s	namespace:detail
external_constructor	extern/nlohmann_json/json.hpp	/^struct external_constructor<value_t::string>$/;"	s	namespace:detail
extract	extern/parallel_hashmap/btree.h	/^        node_type extract(const key_arg<K> &key) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:node_type
extract	extern/parallel_hashmap/btree.h	/^        node_type extract(const key_arg<K> &key) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:node_type
extract	extern/parallel_hashmap/btree.h	/^        node_type extract(const_iterator position) {$/;"	f	class:phmap::priv::btree_container	typeref:typename:node_type
extract	extern/parallel_hashmap/btree.h	/^        node_type extract(iterator position) {$/;"	f	class:phmap::priv::btree_container	typeref:typename:node_type
extract	extern/parallel_hashmap/phmap.h	/^    node_type extract(const key_arg<K>& key) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:node_type
extract	extern/parallel_hashmap/phmap.h	/^    node_type extract(const key_arg<K>& key) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:node_type
extract	extern/parallel_hashmap/phmap.h	/^    node_type extract(const_iterator position) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:node_type
extract	extern/parallel_hashmap/phmap.h	/^    node_type extract(const_iterator position) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:node_type
f	extern/nlohmann_json/json.hpp	/^    std::uint64_t f = 0;$/;"	m	struct:detail::dtoa_impl::diyfp	typeref:typename:std::uint64_t
f	extern/nlohmann_json/json.hpp	/^    std::uint64_t f;$/;"	m	struct:detail::dtoa_impl::cached_power	typeref:typename:std::uint64_t
factory_type	extern/nlohmann_json/json.hpp	/^    using factory_type = iterator_input_adapter_factory<IteratorType>;$/;"	t	function:detail::input_adapter	typeref:typename:iterator_input_adapter_factory<IteratorType>
falseRead	tests/backends/host/coroutine.cpp	/^bool falseRead = false;$/;"	v	typeref:typename:bool
fatal	include/hicr/exceptions.hpp	/^  fatal$/;"	e	enum:HiCR::exceptions::exception_t
fence	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void fence(const L0::GlobalMemorySlot::tag_t tag)$/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
fence	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void fence(std::shared_ptr<L0::GlobalMemorySlot> slot, size_t expectedSent, si/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
fence	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void fence(std::shared_ptr<L0::LocalMemorySlot> slot, size_t expectedSent, siz/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
fenceImpl	include/backends/ascend/L1/communicationManager.hpp	/^  __USED__ inline void fenceImpl(const HiCR::L0::GlobalMemorySlot::tag_t tag) override$/;"	f	class:HiCR::backend::ascend::L1::CommunicationManager	typeref:typename:__USED__ void
fenceImpl	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void fenceImpl(const HiCR::L0::GlobalMemorySlot::tag_t tag) override$/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
fenceImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void fenceImpl(const HiCR::L0::GlobalMemorySlot::tag_t tag) override$/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
fenceImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void fenceImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> hicrSlot)$/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
fenceImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void fenceImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> slot, size_t expect/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
fenceImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void fenceImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> slot, size_t expecte/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
fenceImpl	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void fenceImpl(const HiCR::L0::GlobalMemorySlot::tag_t tag) override$/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
fenceImpl	include/hicr/L1/communicationManager.hpp	/^  virtual void fenceImpl(std::shared_ptr<L0::GlobalMemorySlot> slot, size_t expectedSent, size_t/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:void
fenceImpl	include/hicr/L1/communicationManager.hpp	/^  virtual void fenceImpl(std::shared_ptr<L0::LocalMemorySlot> slot, size_t expectedSent, size_t /;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:void
field_type	extern/parallel_hashmap/btree.h	/^            using field_type = typename node_type::field_type;$/;"	t	struct:phmap::priv::btree::EmptyNodeType	typeref:typename:node_type::field_type
field_type	extern/parallel_hashmap/btree.h	/^        using field_type = typename Params::node_count_type;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::node_count_type
file_input_adapter	extern/nlohmann_json/json.hpp	/^    explicit file_input_adapter(std::FILE* f) noexcept$/;"	f	class:detail::file_input_adapter
file_input_adapter	extern/nlohmann_json/json.hpp	/^class file_input_adapter$/;"	c	namespace:detail
files.associations	.vscode/settings.json	/^    "files.associations": {$/;"	o
fill_buffer	extern/nlohmann_json/json.hpp	/^    static void fill_buffer(BaseInputAdapter& input,$/;"	f	struct:detail::wide_string_input_helper	typeref:typename:void
fill_buffer	extern/nlohmann_json/json.hpp	/^    void fill_buffer()$/;"	f	class:detail::wide_string_input_adapter	typeref:typename:void
finalize	include/backends/ascend/core.hpp	/^  __USED__ inline void finalize()$/;"	f	class:HiCR::backend::ascend::Core	typeref:typename:__USED__ void
finalize	include/backends/mpi/L1/instanceManager.hpp	/^  __USED__ inline void finalize() override$/;"	f	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:__USED__ void
finalize	include/frontends/runtime/coordinator.hpp	/^  __USED__ inline void finalize()$/;"	f	class:HiCR::runtime::Coordinator	typeref:typename:__USED__ void
finalize	include/frontends/runtime/runtime.hpp	/^  __USED__ inline void finalize()$/;"	f	class:HiCR::Runtime	typeref:typename:__USED__ void
finalize	include/frontends/runtime/worker.hpp	/^  __USED__ inline void finalize() override$/;"	f	class:HiCR::runtime::Worker	typeref:typename:__USED__ void
finalize	include/frontends/tasking/tasking.hpp	/^__USED__ inline void finalize()$/;"	f	namespace:HiCR::tasking	typeref:typename:__USED__ void
finalizeExecution	examples/machineModel/source/include/coordinator.hpp	/^void finalizeExecution(HiCR::L1::InstanceManager &instanceManager, const int returnCode = 0)$/;"	f	typeref:typename:void
finalizeStream	include/backends/ascend/L0/executionState.hpp	/^  __USED__ inline void finalizeStream()$/;"	f	class:HiCR::backend::ascend::L0::ExecutionState	typeref:typename:__USED__ void
find	extern/nlohmann_json/json.hpp	/^    const_iterator find(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:const_iterator
find	extern/nlohmann_json/json.hpp	/^    const_iterator find(const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:const_iterator
find	extern/nlohmann_json/json.hpp	/^    const_iterator find(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:const_iterator
find	extern/nlohmann_json/json.hpp	/^    iterator find(KeyType && key)$/;"	f	class:basic_json	typeref:typename:iterator
find	extern/nlohmann_json/json.hpp	/^    iterator find(KeyType && key)$/;"	f	struct:ordered_map	typeref:typename:iterator
find	extern/nlohmann_json/json.hpp	/^    iterator find(const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:iterator
find	extern/nlohmann_json/json.hpp	/^    iterator find(const typename object_t::key_type& key)$/;"	f	class:basic_json	typeref:typename:iterator
find	extern/parallel_hashmap/btree.h	/^        const_iterator find(const K &key) const {$/;"	f	class:phmap::priv::btree	typeref:typename:const_iterator
find	extern/parallel_hashmap/btree.h	/^        const_iterator find(const key_arg<K> &key) const { return tree_.find(key); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:const_iterator
find	extern/parallel_hashmap/btree.h	/^        iterator find(const K &key) {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
find	extern/parallel_hashmap/btree.h	/^        iterator find(const key_arg<K> &key) {$/;"	f	class:phmap::priv::btree_container	typeref:typename:iterator
find	extern/parallel_hashmap/phmap.h	/^    const_iterator find(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const_iterator
find	extern/parallel_hashmap/phmap.h	/^    const_iterator find(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const_iterator
find	extern/parallel_hashmap/phmap.h	/^    const_iterator find(const key_arg<K>& key, size_t hashval) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const_iterator
find	extern/parallel_hashmap/phmap.h	/^    const_iterator find(const key_arg<K>& key, size_t hashval) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const_iterator
find	extern/parallel_hashmap/phmap.h	/^    iterator find(const key_arg<K>& key) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
find	extern/parallel_hashmap/phmap.h	/^    iterator find(const key_arg<K>& key) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
find	extern/parallel_hashmap/phmap.h	/^    iterator find(const key_arg<K>& key, size_t hashval) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
find	extern/parallel_hashmap/phmap.h	/^    iterator find(const key_arg<K>& key, size_t hashval) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
find	extern/parallel_hashmap/phmap.h	/^    iterator find(const key_arg<K>& key, size_t hashval, L& mutexlock) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
find_first_non_full	extern/parallel_hashmap/phmap.h	/^    FindInfo find_first_non_full(size_t hashval) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:FindInfo
find_impl	extern/parallel_hashmap/phmap.h	/^    bool find_impl(const key_arg<K>& key, size_t hashval, size_t& offset) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
find_largest_pow10	extern/nlohmann_json/json.hpp	/^inline int find_largest_pow10(const std::uint32_t n, std::uint32_t& pow10)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:int
find_or_prepare_insert	extern/parallel_hashmap/phmap.h	/^    find_or_prepare_insert(const K& key, typename Lockable::UniqueLock &mutexlock) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::tuple<Inner *,size_t,bool>
find_or_prepare_insert	extern/parallel_hashmap/phmap.h	/^    std::pair<size_t, bool> find_or_prepare_insert(const K& key) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<size_t,bool>
find_or_prepare_insert	extern/parallel_hashmap/phmap.h	/^    std::pair<size_t, bool> find_or_prepare_insert(const K& key, size_t hashval) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<size_t,bool>
find_or_prepare_insert_with_hash	extern/parallel_hashmap/phmap.h	/^    find_or_prepare_insert_with_hash(size_t hashval, const K& key, typename Lockable::UniqueLock/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::tuple<Inner *,size_t,bool>
find_ptr	extern/parallel_hashmap/phmap.h	/^    pointer find_ptr(const key_arg<K>& key, size_t hashval) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:pointer
find_ptr	extern/parallel_hashmap/phmap.h	/^    pointer find_ptr(const key_arg<K>& key, size_t hashval, L& mutexlock)$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:pointer
finished	include/hicr/L0/executionState.hpp	/^    finished$/;"	e	enum:HiCR::L0::ExecutionState::state_t
first	extern/parallel_hashmap/phmap_base.h	/^        K first;$/;"	m	struct:phmap::priv::memory_internal::IsLayoutCompatible::Pair	typeref:typename:K
first	extern/parallel_hashmap/phmap_base.h	/^    constexpr Span first(size_type len) const {$/;"	f	class:phmap::Span	typeref:typename:Span
fix_syntax	.build-tools/style/check-style.sh	/^function fix_syntax()$/;"	f
fixedSize	examples/channels/meson.build	/^subdir('fixedSize')$/;"	S
fixedSize	include/frontends/channel/fixedSize/base.hpp	/^namespace fixedSize$/;"	n	namespace:HiCR::channel
fixedSize	include/frontends/channel/fixedSize/mpsc/consumer.hpp	/^namespace fixedSize$/;"	n	namespace:HiCR::channel
fixedSize	include/frontends/channel/fixedSize/mpsc/producer.hpp	/^namespace fixedSize$/;"	n	namespace:HiCR::channel
fixedSize	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^namespace fixedSize$/;"	n	namespace:HiCR::channel
fixedSize	include/frontends/channel/fixedSize/spsc/producer.hpp	/^namespace fixedSize$/;"	n	namespace:HiCR::channel
fixedSize	tests/frontends/channel/meson.build	/^subdir('fixedSize')$/;"	S
flat_hash_map	extern/parallel_hashmap/phmap.h	/^    flat_hash_map() {}$/;"	f	class:phmap::flat_hash_map
flat_hash_map	extern/parallel_hashmap/phmap.h	/^class flat_hash_map : public phmap::priv::raw_hash_map<$/;"	c	namespace:phmap
flat_hash_set	extern/parallel_hashmap/phmap.h	/^    flat_hash_set() {}$/;"	f	class:phmap::flat_hash_set
flat_hash_set	extern/parallel_hashmap/phmap.h	/^class flat_hash_set$/;"	c	namespace:phmap
flatten	extern/nlohmann_json/json.hpp	/^    basic_json flatten() const$/;"	f	class:basic_json	typeref:typename:basic_json
flatten	extern/nlohmann_json/json.hpp	/^    static void flatten(const string_t& reference_string,$/;"	f	class:json_pointer	typeref:typename:void
flush	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void flush() override$/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
flush	include/hicr/L1/communicationManager.hpp	/^  __USED__ virtual inline void flush() {}$/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
fold_if_needed	extern/parallel_hashmap/phmap_utils.h	/^struct fold_if_needed$/;"	s	namespace:phmap
fold_if_needed	extern/parallel_hashmap/phmap_utils.h	/^struct fold_if_needed<4>$/;"	s	namespace:phmap
fold_if_needed	extern/parallel_hashmap/phmap_utils.h	/^struct fold_if_needed<8>$/;"	s	namespace:phmap
foo	extern/run-clang-format/src/foo.cpp	/^std::string foo(const std::string &a, const std::string &b) {$/;"	f	typeref:typename:std::string
for_each	extern/parallel_hashmap/phmap.h	/^    void for_each(ExecutionPolicy&& policy, F&& fCallback) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
for_each	extern/parallel_hashmap/phmap.h	/^    void for_each(F&& fCallback) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
for_each_m	extern/parallel_hashmap/phmap.h	/^    void for_each_m(ExecutionPolicy&& policy, F&& fCallback) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
for_each_m	extern/parallel_hashmap/phmap.h	/^    void for_each_m(F&& fCallback) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
format_buffer	extern/nlohmann_json/json.hpp	/^inline char* format_buffer(char* buf, int len, int decimal_exponent,$/;"	f	namespace:detail::dtoa_impl
forward	extern/parallel_hashmap/phmap_base.h	/^constexpr T&& forward($/;"	f	namespace:phmap	typeref:typename:T &&
forward_list	.vscode/settings.json	/^        "forward_list": "cpp",$/;"	s	object:files.associations
freeLocalDeviceMemorySlot	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline void freeLocalDeviceMemorySlot(std::shared_ptr<L0::LocalMemorySlot> memorySlot/;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ void
freeLocalHostMemorySlot	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline void freeLocalHostMemorySlot(std::shared_ptr<HiCR::L0::LocalMemorySlot> memory/;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ void
freeLocalMemorySlot	include/hicr/L1/memoryManager.hpp	/^  __USED__ inline void freeLocalMemorySlot(std::shared_ptr<HiCR::L0::LocalMemorySlot> memorySlot/;"	f	class:HiCR::L1::MemoryManager	typeref:typename:__USED__ void
freeLocalMemorySlotImpl	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline void freeLocalMemorySlotImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> memory/;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ void
freeLocalMemorySlotImpl	include/backends/host/hwloc/L1/memoryManager.hpp	/^  __USED__ inline void freeLocalMemorySlotImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> memory/;"	f	class:HiCR::backend::host::hwloc::L1::MemoryManager	typeref:typename:__USED__ void
freeLocalMemorySlotImpl	include/backends/lpf/L1/memoryManager.hpp	/^  __USED__ inline void freeLocalMemorySlotImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> memory/;"	f	class:HiCR::backend::lpf::L1::MemoryManager	typeref:typename:__USED__ void
freeLocalMemorySlotImpl	include/backends/mpi/L1/memoryManager.hpp	/^  __USED__ inline void freeLocalMemorySlotImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> memory/;"	f	class:HiCR::backend::mpi::L1::MemoryManager	typeref:typename:__USED__ void
from_bjdata	extern/nlohmann_json/json.hpp	/^    static basic_json from_bjdata(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bjdata	extern/nlohmann_json/json.hpp	/^    static basic_json from_bjdata(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/nlohmann_json/json.hpp	/^    static basic_json from_bson(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/nlohmann_json/json.hpp	/^    static basic_json from_bson(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/nlohmann_json/json.hpp	/^    static basic_json from_bson(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_bson	extern/nlohmann_json/json.hpp	/^    static basic_json from_bson(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_cbor	extern/nlohmann_json/json.hpp	/^    static basic_json from_cbor(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_cbor	extern/nlohmann_json/json.hpp	/^    static basic_json from_cbor(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_cbor	extern/nlohmann_json/json.hpp	/^    static basic_json from_cbor(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_cbor	extern/nlohmann_json/json.hpp	/^    static basic_json from_cbor(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_json	extern/nlohmann_json/json.hpp	/^    static auto from_json(BasicJsonType && j) noexcept($/;"	f	struct:adl_serializer	typeref:typename:auto
from_json	extern/nlohmann_json/json.hpp	/^    static auto from_json(BasicJsonType && j, TargetType& val) noexcept($/;"	f	struct:adl_serializer	typeref:typename:auto
from_json	extern/nlohmann_json/json.hpp	/^JSON_INLINE_VARIABLE constexpr const auto& from_json = \/\/ NOLINT(misc-definitions-in-headers)$/;"	v	namespace:__anon7c8093bd0811	typeref:typename:JSON_INLINE_VARIABLE const auto &
from_json	extern/nlohmann_json/json.hpp	/^auto from_json(BasicJsonType&& j, TupleRelated&& t)$/;"	f	namespace:detail	typeref:typename:decltype(from_json_tuple_impl (std::forward<BasicJsonType> (j),std::forward<TupleRelated> (t),priority_tag<3>{}))
from_json	extern/nlohmann_json/json.hpp	/^auto from_json(BasicJsonType&& j, identity_tag<std::array<T, N>> tag)$/;"	f	namespace:detail	typeref:typename:decltype(from_json_inplace_array_impl (std::forward<BasicJsonType> (j),tag,make_index_sequence<N>{}))
from_json	extern/nlohmann_json/json.hpp	/^auto from_json(const BasicJsonType& j, ConstructibleArrayType& arr)$/;"	f	namespace:detail	typeref:typename:decltype(from_json_array_impl (j,arr,priority_tag<3>{}),j.template get<typename ConstructibleArrayType::value_type> (),void ())
from_json	extern/nlohmann_json/json.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N])  \/\/ NOLINT(cppcoreguidelines-avoid-c-array/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, ConstructibleObjectType& obj)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, EnumType& e)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, StringType& s)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, std::forward_list<T, Allocator>& l)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, std::map<Key, Value, Compare, Allocator>& m)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, std::unordered_map<Key, Value, Hash, KeyEqual, All/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, std::valarray<T>& l)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, std_fs::path& p)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::binary_t& bin)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::boolean_t& b)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::number_float_t& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::number_integer_t& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::number_unsigned_t& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::string_t& s)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/nlohmann_json/json.hpp	/^inline void from_json(const BasicJsonType& j, typename std::nullptr_t& n)$/;"	f	namespace:detail	typeref:typename:void
from_json_array_impl	extern/nlohmann_json/json.hpp	/^auto from_json_array_impl(const BasicJsonType& j, ConstructibleArrayType& arr, priority_tag<1> \//;"	f	namespace:detail	typeref:typename:decltype(arr.reserve (std::declval<typename ConstructibleArrayType::size_type> ()),j.template get<typename ConstructibleArrayType::value_type> (),void ())
from_json_array_impl	extern/nlohmann_json/json.hpp	/^auto from_json_array_impl(const BasicJsonType& j, std::array<T, N>& arr,$/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json_array_impl	extern/nlohmann_json/json.hpp	/^inline void from_json_array_impl(const BasicJsonType& j, ConstructibleArrayType& arr,$/;"	f	namespace:detail	typeref:typename:void
from_json_array_impl	extern/nlohmann_json/json.hpp	/^inline void from_json_array_impl(const BasicJsonType& j, typename BasicJsonType::array_t& arr, p/;"	f	namespace:detail	typeref:typename:void
from_json_fn	extern/nlohmann_json/json.hpp	/^struct from_json_fn$/;"	s	namespace:detail
from_json_function	extern/nlohmann_json/json.hpp	/^using from_json_function = decltype(T::from_json(std::declval<Args>()...));$/;"	t	namespace:detail
from_json_inplace_array_impl	extern/nlohmann_json/json.hpp	/^std::array<T, sizeof...(Idx)> from_json_inplace_array_impl(BasicJsonType&& j,$/;"	f	namespace:detail	typeref:typename:std::array<T,sizeof...(Idx)>
from_json_tuple_impl	extern/nlohmann_json/json.hpp	/^inline void from_json_tuple_impl(BasicJsonType&& j, std::pair<A1, A2>& p, priority_tag<1> \/*unu/;"	f	namespace:detail	typeref:typename:void
from_json_tuple_impl	extern/nlohmann_json/json.hpp	/^inline void from_json_tuple_impl(BasicJsonType&& j, std::tuple<Args...>& t, priority_tag<3> \/*u/;"	f	namespace:detail	typeref:typename:void
from_json_tuple_impl	extern/nlohmann_json/json.hpp	/^std::pair<A1, A2> from_json_tuple_impl(BasicJsonType&& j, identity_tag<std::pair<A1, A2>> \/*unu/;"	f	namespace:detail	typeref:typename:std::pair<A1,A2>
from_json_tuple_impl	extern/nlohmann_json/json.hpp	/^std::tuple<Args...> from_json_tuple_impl(BasicJsonType&& j, identity_tag<std::tuple<Args...>> \//;"	f	namespace:detail	typeref:typename:std::tuple<Args...>
from_json_tuple_impl_base	extern/nlohmann_json/json.hpp	/^std::tuple<Args...> from_json_tuple_impl_base(BasicJsonType&& j, index_sequence<Idx...> \/*unuse/;"	f	namespace:detail	typeref:typename:std::tuple<Args...>
from_msgpack	extern/nlohmann_json/json.hpp	/^    static basic_json from_msgpack(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_msgpack	extern/nlohmann_json/json.hpp	/^    static basic_json from_msgpack(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_msgpack	extern/nlohmann_json/json.hpp	/^    static basic_json from_msgpack(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_msgpack	extern/nlohmann_json/json.hpp	/^    static basic_json from_msgpack(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_ubjson	extern/nlohmann_json/json.hpp	/^    static basic_json from_ubjson(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_ubjson	extern/nlohmann_json/json.hpp	/^    static basic_json from_ubjson(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_ubjson	extern/nlohmann_json/json.hpp	/^    static basic_json from_ubjson(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_ubjson	extern/nlohmann_json/json.hpp	/^    static basic_json from_ubjson(detail::span_input_adapter&& i,$/;"	f	class:basic_json
front	extern/nlohmann_json/json.hpp	/^    const_reference front() const$/;"	f	class:basic_json	typeref:typename:const_reference
front	extern/nlohmann_json/json.hpp	/^    reference front()$/;"	f	class:basic_json	typeref:typename:reference
front	extern/parallel_hashmap/phmap_base.h	/^    constexpr reference front() const noexcept {$/;"	f	class:phmap::Span	typeref:typename:reference
frontends	tests/meson.build	/^subdir('frontends')$/;"	S
fstream	.vscode/settings.json	/^        "fstream": "cpp",$/;"	s	object:files.associations
fullness	extern/parallel_hashmap/btree.h	/^        double fullness() const {$/;"	f	class:phmap::priv::btree	typeref:typename:double
functional	.vscode/settings.json	/^        "functional": "cpp",$/;"	s	object:files.associations
gbswap_16	extern/parallel_hashmap/phmap_bits.h	/^    inline uint16_t gbswap_16(uint16_t host_int) {$/;"	f	namespace:phmap	typeref:typename:uint16_t
gbswap_32	extern/parallel_hashmap/phmap_bits.h	/^    inline uint32_t gbswap_32(uint32_t host_int) {$/;"	f	namespace:phmap	typeref:typename:uint32_t
gbswap_64	extern/parallel_hashmap/phmap_bits.h	/^    inline uint64_t gbswap_64(uint64_t host_int) {$/;"	f	namespace:phmap	typeref:typename:uint64_t
gcov_args	include/hicr/meson.build	/^  gcov_args = [$/;"	V
get	extern/nlohmann_json/json.hpp	/^    auto get() const noexcept($/;"	f	class:basic_json	typeref:typename:auto
get	extern/nlohmann_json/json.hpp	/^    auto get() noexcept -> decltype(std::declval<basic_json_t&>().template get_ptr<PointerType>(/;"	f	class:basic_json	typeref:typename:auto
get	extern/nlohmann_json/json.hpp	/^    char_int_type get()$/;"	f	class:detail::binary_reader	typeref:typename:char_int_type
get	extern/nlohmann_json/json.hpp	/^    char_int_type get()$/;"	f	class:detail::lexer	typeref:typename:char_int_type
get	extern/nlohmann_json/json.hpp	/^    contiguous_bytes_input_adapter&& get()$/;"	f	class:detail::span_input_adapter	typeref:typename:contiguous_bytes_input_adapter &&
get	extern/nlohmann_json/json.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.key())$/;"	f	namespace:detail	typeref:typename:decltype(i.key ())
get	extern/nlohmann_json/json.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.value())$/;"	f	namespace:detail	typeref:typename:decltype(i.value ())
get	extern/parallel_hashmap/phmap_base.h	/^        ElemT<I>& get() & {$/;"	f	class:phmap::priv::CompressedTuple	typeref:typename:ElemT<I> &
get	extern/parallel_hashmap/phmap_base.h	/^        ElemT<I>&& get() && {$/;"	f	class:phmap::priv::CompressedTuple	typeref:typename:ElemT<I> &&
get	extern/parallel_hashmap/phmap_base.h	/^        constexpr const ElemT<I>& get() const& {$/;"	f	class:phmap::priv::CompressedTuple	typeref:typename:const ElemT<I> &
get	extern/parallel_hashmap/phmap_base.h	/^        constexpr const ElemT<I>&& get() const&& {$/;"	f	class:phmap::priv::CompressedTuple	typeref:typename:const ElemT<I> &&
get	extern/parallel_hashmap/phmap_base.h	/^    T& get() & { return *this; }$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:T &
get	extern/parallel_hashmap/phmap_base.h	/^    T& get() & { return value; }$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:T &
get	extern/parallel_hashmap/phmap_base.h	/^    T&& get() && { return std::move(*this).value; }$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:T &&
get	extern/parallel_hashmap/phmap_base.h	/^    T&& get() && { return std::move(*this); }$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:T &&
get	extern/parallel_hashmap/phmap_base.h	/^    constexpr const T& get() const& { return *this; }$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:const T &
get	extern/parallel_hashmap/phmap_base.h	/^    constexpr const T& get() const& { return value; }$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:const T &
get	extern/parallel_hashmap/phmap_base.h	/^    constexpr const T&& get() const&& { return phmap::move(*this).value; }$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:const T &&
get	extern/parallel_hashmap/phmap_base.h	/^    constexpr const T&& get() const&& { return phmap::move(*this); }$/;"	f	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:const T &&
getAffinity	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ static std::set<int> getAffinity()$/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ std::set<int>
getBindingType	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^  __USED__ inline binding_type getBindingType() const { return _bindingType; }$/;"	f	class:HiCR::backend::host::hwloc::L0::LocalMemorySlot	typeref:typename:__USED__ binding_type
getCapacity	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline size_t getCapacity() const noexcept$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ size_t
getComm	include/backends/mpi/L1/communicationManager.hpp	/^  const MPI_Comm getComm() const { return _comm; }$/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:const MPI_Comm
getCommunicationManager	include/frontends/runtime/instance.hpp	/^  HiCR::L1::InstanceManager *getCommunicationManager() const { return _instanceManager; }$/;"	f	class:HiCR::runtime::Instance	typeref:typename:HiCR::L1::InstanceManager *
getComputeResource	include/hicr/L0/processingUnit.hpp	/^  __USED__ inline std::shared_ptr<ComputeResource> getComputeResource() { return _computeResourc/;"	f	class:HiCR::L0::ProcessingUnit	typeref:typename:__USED__ std::shared_ptr<ComputeResource>
getComputeResourceList	include/hicr/L0/device.hpp	/^  __USED__ inline const computeResourceList_t &getComputeResourceList() { return _computeResourc/;"	f	class:HiCR::L0::Device	typeref:typename:__USED__ const computeResourceList_t &
getContext	include/backends/ascend/L0/device.hpp	/^  __USED__ inline aclrtContext *getContext() const { return _context.get(); }$/;"	f	class:HiCR::backend::ascend::L0::Device	typeref:typename:__USED__ aclrtContext *
getContexts	include/backends/ascend/core.hpp	/^  __USED__ inline const std::unordered_map<deviceIdentifier_t, ascendState_t> &getContexts() con/;"	f	class:HiCR::backend::ascend::Core	typeref:typename:__USED__ const std::unordered_map<deviceIdentifier_t,ascendState_t> &
getCoordinationBufferSize	include/frontends/channel/base.hpp	/^  __USED__ static inline size_t getCoordinationBufferSize() noexcept$/;"	f	class:HiCR::channel::Base	typeref:typename:__USED__ size_t
getCoordinatorInstanceId	include/frontends/runtime/runtime.hpp	/^  HiCR::L0::Instance::instanceId_t getCoordinatorInstanceId() const$/;"	f	class:HiCR::Runtime	typeref:typename:HiCR::L0::Instance::instanceId_t
getCpuNumaAffinity	include/backends/host/hwloc/L0/computeResource.hpp	/^  __USED__ inline static int getCpuNumaAffinity(hwloc_topology_t topology, const logicalProcesso/;"	f	class:HiCR::backend::host::hwloc::L0::ComputeResource	typeref:typename:__USED__ int
getCurrentInstance	include/frontends/runtime/runtime.hpp	/^  HiCR::runtime::Instance *getCurrentInstance() const$/;"	f	class:HiCR::Runtime	typeref:typename:HiCR::runtime::Instance *
getCurrentInstance	include/hicr/L1/instanceManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::Instance> getCurrentInstance() const { return _curre/;"	f	class:HiCR::L1::InstanceManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::Instance>
getCurrentTask	examples/tasking/getCurrentTask/meson.build	/^    getCurrentTask = executable('getCurrentTask', [ 'source\/main.cpp'], dependencies: hicrBuild/;"	B
getCurrentTask	examples/tasking/getCurrentTask/meson.build	/^    getCurrentTask = executable('getCurrentTask', [ 'source\/main.cpp'], dependencies: hicrBuild/;"	V
getCurrentTask	examples/tasking/getCurrentTask/meson.build	/^    test('getCurrentTask', getCurrentTask, args : [ ], suite: testSuite)$/;"	t
getCurrentTask	examples/tasking/meson.build	/^subdir('getCurrentTask')$/;"	S
getCurrentTask	examples/tasking/runtime.hpp	/^  __USED__ inline HiCR::tasking::Task *getCurrentTask() { return HiCR::tasking::Task::getCurrent/;"	f	class:taskr::Runtime	typeref:typename:__USED__ HiCR::tasking::Task *
getCurrentTask	include/frontends/tasking/task.hpp	/^  __USED__ static inline Task *getCurrentTask() { return (Task *)pthread_getspecific(_taskPointe/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ Task *
getCurrentWorker	include/frontends/tasking/worker.hpp	/^  __USED__ static inline HiCR::tasking::Worker *getCurrentWorker() { return (Worker *)pthread_ge/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ HiCR::tasking::Worker *
getData	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  __USED__ inline void *getData() const { return _buffer; }$/;"	f	class:HiCR::runtime::DataObject	typeref:typename:__USED__ void *
getDataBuffer	include/backends/ascend/L0/localMemorySlot.hpp	/^  __USED__ inline const aclDataBuffer *getDataBuffer() const { return _dataBuffer; }$/;"	f	class:HiCR::backend::ascend::L0::LocalMemorySlot	typeref:typename:__USED__ const aclDataBuffer *
getDataObject	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  __USED__ inline static std::shared_ptr<DataObject> getDataObject(DataObject::dataObjectId_t da/;"	f	class:HiCR::runtime::DataObject	typeref:typename:__USED__ std::shared_ptr<DataObject>
getDataObject	include/frontends/runtime/instance.hpp	/^  __USED__ inline std::shared_ptr<DataObject> getDataObject(const DataObject::dataObjectId_t dat/;"	f	class:HiCR::runtime::Instance	typeref:typename:__USED__ std::shared_ptr<DataObject>
getDataWindow	include/backends/mpi/L0/globalMemorySlot.hpp	/^  __USED__ inline std::unique_ptr<MPI_Win> &getDataWindow() { return _dataWindow; }$/;"	f	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:__USED__ std::unique_ptr<MPI_Win> &
getDependencies	include/frontends/tasking/task.hpp	/^  __USED__ inline const std::vector<label_t> &getDependencies()$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ const std::vector<label_t> &
getDepth	include/frontends/channel/base.hpp	/^  __USED__ inline size_t getDepth() const noexcept$/;"	f	class:HiCR::channel::Base	typeref:typename:__USED__ size_t
getDepth	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline size_t getDepth() const noexcept$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ size_t
getDepth	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  size_t getDepth()$/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:size_t
getDepth	include/frontends/channel/variableSize/spsc/producer.hpp	/^  size_t getDepth()$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:size_t
getDevice	include/backends/ascend/L0/computeResource.hpp	/^  __USED__ inline const std::weak_ptr<const ascend::L0::Device> getDevice() const$/;"	f	class:HiCR::backend::ascend::L0::ComputeResource	typeref:typename:__USED__ const std::weak_ptr<const ascend::L0::Device>
getDevice	include/backends/ascend/L0/memorySpace.hpp	/^  __USED__ inline const std::weak_ptr<const ascend::L0::Device> getDevice() const { return _devi/;"	f	class:HiCR::backend::ascend::L0::MemorySpace	typeref:typename:__USED__ const std::weak_ptr<const ascend::L0::Device>
getDevices	include/hicr/L0/topology.hpp	/^  __USED__ inline const deviceList_t &getDevices() const { return _deviceList; }$/;"	f	class:HiCR::L0::Topology	typeref:typename:__USED__ const deviceList_t &
getDispatchers	include/frontends/tasking/worker.hpp	/^  __USED__ inline dispatcherSet_t &getDispatchers() { return _dispatchers; }$/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ dispatcherSet_t &
getEventMap	include/frontends/tasking/task.hpp	/^  __USED__ inline taskEventMap_t *getEventMap() { return _eventMap; }$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ taskEventMap_t *
getExecutionUnit	include/frontends/tasking/task.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::ExecutionUnit> getExecutionUnit() const { return _ex/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::ExecutionUnit>
getFunction	include/backends/host/L0/executionUnit.hpp	/^  __USED__ inline const Coroutine::coroutineFc_t &getFunction() const { return _fc; }$/;"	f	class:HiCR::backend::host::L0::ExecutionUnit	typeref:typename:__USED__ const Coroutine::coroutineFc_t &
getGlobalKey	include/hicr/L0/globalMemorySlot.hpp	/^  __USED__ inline globalKey_t getGlobalKey() const noexcept { return _globalKey; }$/;"	f	class:HiCR::L0::GlobalMemorySlot	typeref:typename:__USED__ globalKey_t
getGlobalMemorySlot	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline std::shared_ptr<L0::GlobalMemorySlot> getGlobalMemorySlot(const L0::GlobalMemo/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ std::shared_ptr<L0::GlobalMemorySlot>
getGlobalMemorySlots	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline globalKeyToMemorySlotMap_t getGlobalMemorySlots(const L0::GlobalMemorySlot::ta/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ globalKeyToMemorySlotMap_t
getGlobalTag	include/hicr/L0/globalMemorySlot.hpp	/^  __USED__ inline tag_t getGlobalTag() const noexcept { return _globalTag; }$/;"	f	class:HiCR::L0::GlobalMemorySlot	typeref:typename:__USED__ tag_t
getHWLocObject	include/backends/host/hwloc/L0/memorySpace.hpp	/^  __USED__ inline const hwloc_obj_t getHWLocObject() const$/;"	f	class:HiCR::backend::host::hwloc::L0::MemorySpace	typeref:typename:__USED__ const hwloc_obj_t
getHashFromString	include/hicr/L1/instanceManager.hpp	/^  static uint64_t getHashFromString(const std::string &name) { return std::hash<std::string>()(n/;"	f	class:HiCR::L1::InstanceManager	typeref:typename:uint64_t
getHeadAdvanceCounter	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline size_t getHeadAdvanceCounter() const noexcept$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ size_t
getHeadPosition	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline size_t getHeadPosition() const noexcept$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ size_t
getHiCRInstance	include/frontends/runtime/instance.hpp	/^  HiCR::L0::Instance *getHiCRInstance() const { return _HiCRInstance.get(); }$/;"	f	class:HiCR::runtime::Instance	typeref:typename:HiCR::L0::Instance *
getId	include/backends/ascend/L0/device.hpp	/^  __USED__ inline deviceIdentifier_t getId() const { return _id; }$/;"	f	class:HiCR::backend::ascend::L0::Device	typeref:typename:__USED__ deviceIdentifier_t
getId	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  dataObjectId_t getId() const { return _id; }$/;"	f	class:HiCR::runtime::DataObject	typeref:typename:dataObjectId_t
getId	include/hicr/L0/instance.hpp	/^  __USED__ inline instanceId_t getId() const { return _id; }$/;"	f	class:HiCR::L0::Instance	typeref:typename:__USED__ instanceId_t
getInstanceId	include/frontends/runtime/runtime.hpp	/^  __USED__ inline HiCR::L0::Instance::instanceId_t getInstanceId()$/;"	f	class:HiCR::Runtime	typeref:typename:__USED__ HiCR::L0::Instance::instanceId_t
getInstanceManager	include/frontends/runtime/instance.hpp	/^  HiCR::L1::InstanceManager *getInstanceManager() const { return _instanceManager; }$/;"	f	class:HiCR::runtime::Instance	typeref:typename:HiCR::L1::InstanceManager *
getInstances	include/frontends/runtime/runtime.hpp	/^  HiCR::L1::InstanceManager::instanceList_t getInstances() const$/;"	f	class:HiCR::Runtime	typeref:typename:HiCR::L1::InstanceManager::instanceList_t
getInstances	include/hicr/L1/instanceManager.hpp	/^  __USED__ inline const instanceList_t &getInstances() const { return _instances; }$/;"	f	class:HiCR::L1::InstanceManager	typeref:typename:__USED__ const instanceList_t &
getLPFSlot	include/backends/lpf/L0/globalMemorySlot.hpp	/^  lpf_memslot_t getLPFSlot() const { return _lpfMemSlot; }$/;"	f	class:HiCR::backend::lpf::L0::GlobalMemorySlot	typeref:typename:lpf_memslot_t
getLPFSlot	include/backends/lpf/L0/localMemorySlot.hpp	/^  lpf_memslot_t getLPFSlot() const { return _lpfMemSlot; }$/;"	f	class:HiCR::backend::lpf::L0::LocalMemorySlot	typeref:typename:lpf_memslot_t
getLabel	include/frontends/tasking/task.hpp	/^  __USED__ inline label_t getLabel() const { return _label; }$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ label_t
getLevel	include/backends/host/cache.hpp	/^  __USED__ inline cacheLevel_t getLevel() const$/;"	f	class:HiCR::backend::host::Cache	typeref:typename:__USED__ cacheLevel_t
getLineSize	include/backends/host/cache.hpp	/^  __USED__ inline size_t getLineSize() const$/;"	f	class:HiCR::backend::host::Cache	typeref:typename:__USED__ size_t
getLockAcquiredValue	include/backends/mpi/L0/globalMemorySlot.hpp	/^  __USED__ inline bool getLockAcquiredValue() const { return _lockAcquired; }$/;"	f	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:__USED__ bool
getMachineModel	include/frontends/runtime/instance.hpp	/^  HiCR::MachineModel *getMachineModel() const { return _machineModel; }$/;"	f	class:HiCR::runtime::Instance	typeref:typename:HiCR::MachineModel *
getMemoryManager	include/frontends/runtime/instance.hpp	/^  HiCR::L1::MemoryManager *getMemoryManager() const { return _memoryManager; }$/;"	f	class:HiCR::runtime::Instance	typeref:typename:HiCR::L1::MemoryManager *
getMemorySpace	include/hicr/L0/localMemorySlot.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::MemorySpace> getMemorySpace() const noexcept { retur/;"	f	class:HiCR::L0::LocalMemorySlot	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::MemorySpace>
getMemorySpaceList	include/hicr/L0/device.hpp	/^  __USED__ inline const memorySpaceList_t &getMemorySpaceList() { return _memorySpaces; }$/;"	f	class:HiCR::L0::Device	typeref:typename:__USED__ const memorySpaceList_t &
getMessagesRecv	include/hicr/L0/localMemorySlot.hpp	/^  __USED__ inline size_t getMessagesRecv() const noexcept { return _messagesRecv; }$/;"	f	class:HiCR::L0::LocalMemorySlot	typeref:typename:__USED__ size_t
getMessagesRecv	include/hicr/L0/memorySlot.hpp	/^  __USED__ inline size_t getMessagesRecv() const noexcept { return _messagesRecv; }$/;"	f	class:HiCR::L0::MemorySlot	typeref:typename:__USED__ size_t
getMessagesRecvPointer	include/hicr/L0/memorySlot.hpp	/^  __USED__ inline __volatile__ size_t *getMessagesRecvPointer() noexcept { return &_messagesRecv/;"	f	class:HiCR::L0::MemorySlot	typeref:typename:__USED__ __volatile__ size_t *
getMessagesSent	include/hicr/L0/localMemorySlot.hpp	/^  __USED__ inline size_t getMessagesSent() const noexcept { return _messagesSent; }$/;"	f	class:HiCR::L0::LocalMemorySlot	typeref:typename:__USED__ size_t
getMessagesSent	include/hicr/L0/memorySlot.hpp	/^  __USED__ inline size_t getMessagesSent() const noexcept { return _messagesSent; }$/;"	f	class:HiCR::L0::MemorySlot	typeref:typename:__USED__ size_t
getMessagesSentPointer	include/hicr/L0/memorySlot.hpp	/^  __USED__ inline __volatile__ size_t *getMessagesSentPointer() noexcept { return &_messagesSent/;"	f	class:HiCR::L0::MemorySlot	typeref:typename:__USED__ __volatile__ size_t *
getNewPayloadBytes	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  size_t getNewPayloadBytes(size_t n)$/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:size_t
getOldPayloadBytes	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  size_t getOldPayloadBytes(size_t n)$/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:size_t
getPayloadBufferMemorySlot	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  std::shared_ptr<L0::GlobalMemorySlot> getPayloadBufferMemorySlot() const { return _payloadBuff/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:std::shared_ptr<L0::GlobalMemorySlot>
getPayloadCapacity	include/frontends/channel/variableSize/spsc/producer.hpp	/^  inline size_t getPayloadCapacity()$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:size_t
getPayloadDepth	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  __USED__ inline size_t getPayloadDepth()$/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:__USED__ size_t
getPayloadDepth	include/frontends/channel/variableSize/spsc/producer.hpp	/^  inline size_t getPayloadDepth()$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:size_t
getPayloadHeadPosition	include/frontends/channel/variableSize/spsc/producer.hpp	/^  __USED__ inline size_t getPayloadHeadPosition() const noexcept$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:__USED__ size_t
getPayloadSize	include/frontends/channel/variableSize/spsc/producer.hpp	/^  inline size_t getPayloadSize()$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:size_t
getPhysicalProcessorId	include/backends/host/L0/computeResource.hpp	/^  __USED__ inline physicalProcessorId_t getPhysicalProcessorId() const { return _physicalProcess/;"	f	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:__USED__ physicalProcessorId_t
getPointer	include/hicr/L0/localMemorySlot.hpp	/^  __USED__ inline void *getPointer() const noexcept { return _pointer; }$/;"	f	class:HiCR::L0::LocalMemorySlot	typeref:typename:__USED__ void *
getProcessingUnits	include/frontends/tasking/worker.hpp	/^  __USED__ inline std::vector<std::unique_ptr<HiCR::L0::ProcessingUnit>> &getProcessingUnits() {/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ std::vector<std::unique_ptr<HiCR::L0::ProcessingUnit>> &
getProcessorId	include/backends/host/L0/computeResource.hpp	/^  __USED__ inline int getProcessorId() const { return _logicalProcessorId; }$/;"	f	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:__USED__ int
getRank	include/backends/lpf/L0/globalMemorySlot.hpp	/^  const size_t getRank() { return _rank; }$/;"	f	class:HiCR::backend::lpf::L0::GlobalMemorySlot	typeref:typename:const size_t
getRank	include/backends/mpi/L0/globalMemorySlot.hpp	/^  __USED__ inline const int getRank() { return _rank; }$/;"	f	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:__USED__ const int
getRank	include/backends/mpi/L0/instance.hpp	/^  __USED__ inline int getRank() const { return _rank; }$/;"	f	class:HiCR::backend::mpi::L0::Instance	typeref:typename:__USED__ int
getRank	include/backends/mpi/L1/communicationManager.hpp	/^  const int getRank() const { return _rank; }$/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:const int
getRecvMessageCountWindow	include/backends/mpi/L0/globalMemorySlot.hpp	/^  __USED__ inline std::unique_ptr<MPI_Win> &getRecvMessageCountWindow() { return _recvMessageCou/;"	f	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:__USED__ std::unique_ptr<MPI_Win> &
getRequestedBindingType	include/backends/host/hwloc/L1/memoryManager.hpp	/^  L0::LocalMemorySlot::binding_type getRequestedBindingType() const { return _hwlocBindingReques/;"	f	class:HiCR::backend::host::hwloc::L1::MemoryManager	typeref:typename:L0::LocalMemorySlot::binding_type
getReturnValue	include/hicr/L1/instanceManager.hpp	/^  __USED__ inline void *getReturnValue(HiCR::L0::Instance &instance) const$/;"	f	class:HiCR::L1::InstanceManager	typeref:typename:__USED__ void *
getReturnValueImpl	include/backends/mpi/L1/instanceManager.hpp	/^  __USED__ inline void *getReturnValueImpl(HiCR::L0::Instance &instance) const override$/;"	f	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:__USED__ void *
getRootInstanceId	include/backends/mpi/L1/instanceManager.hpp	/^  __USED__ inline HiCR::L0::Instance::instanceId_t getRootInstanceId() const$/;"	f	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:__USED__ HiCR::L0::Instance::instanceId_t
getSentMessageCountWindow	include/backends/mpi/L0/globalMemorySlot.hpp	/^  __USED__ inline std::unique_ptr<MPI_Win> &getSentMessageCountWindow() { return _sentMessageCou/;"	f	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:__USED__ std::unique_ptr<MPI_Win> &
getShared	include/backends/host/cache.hpp	/^  __USED__ inline bool getShared() const$/;"	f	class:HiCR::backend::host::Cache	typeref:typename:__USED__ bool
getSize	include/backends/host/cache.hpp	/^  __USED__ inline size_t getSize() const$/;"	f	class:HiCR::backend::host::Cache	typeref:typename:__USED__ size_t
getSize	include/backends/mpi/L1/communicationManager.hpp	/^  const int getSize() const { return _size; }$/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:const int
getSize	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  __USED__ inline size_t getSize() const { return _size; }$/;"	f	class:HiCR::runtime::DataObject	typeref:typename:__USED__ size_t
getSize	include/hicr/L0/localMemorySlot.hpp	/^  __USED__ inline size_t getSize() const noexcept { return _size; }$/;"	f	class:HiCR::L0::LocalMemorySlot	typeref:typename:__USED__ size_t
getSize	include/hicr/L0/memorySpace.hpp	/^  __USED__ virtual inline const size_t getSize() const { return _size; }$/;"	f	class:HiCR::L0::MemorySpace	typeref:typename:__USED__ const size_t
getSourceLocalMemorySlot	include/hicr/L0/globalMemorySlot.hpp	/^  __USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot> getSourceLocalMemorySlot() noexcept { retu/;"	f	class:HiCR::L0::GlobalMemorySlot	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
getState	include/frontends/tasking/task.hpp	/^  __USED__ inline const HiCR::L0::ExecutionState::state_t getState()$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ const HiCR::L0::ExecutionState::state_t
getState	include/frontends/tasking/worker.hpp	/^  __USED__ inline const state_t getState() { return _state; }$/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ const state_t
getState	include/hicr/L0/executionState.hpp	/^  __USED__ inline state_t getState() { return _state; }$/;"	f	class:HiCR::L0::ExecutionState	typeref:typename:__USED__ state_t
getState	include/hicr/L0/processingUnit.hpp	/^  __USED__ inline ProcessingUnit::state_t getState() const$/;"	f	class:HiCR::L0::ProcessingUnit	typeref:typename:__USED__ ProcessingUnit::state_t
getSupportedBindingType	include/backends/host/hwloc/L0/memorySpace.hpp	/^  __USED__ inline host::hwloc::L0::LocalMemorySlot::binding_type getSupportedBindingType() const$/;"	f	class:HiCR::backend::host::hwloc::L0::MemorySpace	typeref:typename:__USED__ host::hwloc::L0::LocalMemorySlot::binding_type
getTailAdvanceCounter	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline size_t getTailAdvanceCounter() const noexcept$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ size_t
getTailPosition	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline size_t getTailPosition() const noexcept$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ size_t
getTokenBufferSize	include/frontends/channel/base.hpp	/^  __USED__ static inline size_t getTokenBufferSize(const size_t tokenSize, const size_t capacity/;"	f	class:HiCR::channel::Base	typeref:typename:__USED__ size_t
getTokenSize	include/frontends/channel/base.hpp	/^  __USED__ inline size_t getTokenSize() const noexcept$/;"	f	class:HiCR::channel::Base	typeref:typename:__USED__ size_t
getTopologyManagers	include/frontends/runtime/instance.hpp	/^  std::vector<HiCR::L1::TopologyManager *> getTopologyManagers() const { return _topologyManager/;"	f	class:HiCR::runtime::Instance	typeref:typename:std::vector<HiCR::L1::TopologyManager * >
getType	include/backends/ascend/L0/computeResource.hpp	/^  __USED__ inline std::string getType() const override { return "Ascend Processor"; }$/;"	f	class:HiCR::backend::ascend::L0::ComputeResource	typeref:typename:__USED__ std::string
getType	include/backends/ascend/L0/device.hpp	/^  __USED__ inline std::string getType() const override { return "Ascend Device"; }$/;"	f	class:HiCR::backend::ascend::L0::Device	typeref:typename:__USED__ std::string
getType	include/backends/ascend/L0/executionUnit.hpp	/^  __USED__ inline std::string getType() const override { return "Ascend Kernel"; }$/;"	f	class:HiCR::backend::ascend::L0::ExecutionUnit	typeref:typename:__USED__ std::string
getType	include/backends/ascend/L0/memorySpace.hpp	/^  __USED__ inline std::string getType() const override { return "Ascend Device RAM"; }$/;"	f	class:HiCR::backend::ascend::L0::MemorySpace	typeref:typename:__USED__ std::string
getType	include/backends/host/L0/computeResource.hpp	/^  __USED__ inline std::string getType() const override { return "Processing Unit"; }$/;"	f	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:__USED__ std::string
getType	include/backends/host/L0/device.hpp	/^  __USED__ inline std::string getType() const override { return "NUMA Domain"; }$/;"	f	class:HiCR::backend::host::L0::Device	typeref:typename:__USED__ std::string
getType	include/backends/host/L0/executionUnit.hpp	/^  __USED__ inline std::string getType() const override { return "C++ Function"; }$/;"	f	class:HiCR::backend::host::L0::ExecutionUnit	typeref:typename:__USED__ std::string
getType	include/backends/host/L0/memorySpace.hpp	/^  __USED__ inline std::string getType() const override { return "RAM"; }$/;"	f	class:HiCR::backend::host::L0::MemorySpace	typeref:typename:__USED__ std::string
getType	include/backends/host/cache.hpp	/^  __USED__ inline const std::string &getType() const$/;"	f	class:HiCR::backend::host::Cache	typeref:typename:__USED__ const std::string &
getUsage	include/hicr/L0/memorySpace.hpp	/^  __USED__ virtual inline size_t getUsage() const { return _usage; };$/;"	f	class:HiCR::L0::MemorySpace	typeref:typename:__USED__ size_t
getWorkers	include/frontends/runtime/coordinator.hpp	/^  __USED__ inline std::vector<worker_t> &getWorkers() { return _workers; }$/;"	f	class:HiCR::runtime::Coordinator	typeref:typename:__USED__ std::vector<worker_t> &
get_allocator	extern/nlohmann_json/json.hpp	/^    static allocator_type get_allocator()$/;"	f	class:basic_json	typeref:typename:allocator_type
get_allocator	extern/parallel_hashmap/btree.h	/^        allocator_type get_allocator() const { return tree_.get_allocator(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:allocator_type
get_allocator	extern/parallel_hashmap/btree.h	/^        allocator_type get_allocator() const {$/;"	f	class:phmap::priv::btree	typeref:typename:allocator_type
get_allocator	extern/parallel_hashmap/phmap.h	/^    allocator_type get_allocator() const { return alloc_ref(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:allocator_type
get_allocator	extern/parallel_hashmap/phmap.h	/^    allocator_type get_allocator() const { return alloc_ref(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:allocator_type
get_allocator	extern/parallel_hashmap/phmap_base.h	/^    allocator_type get_allocator() const { return *alloc_; }$/;"	f	class:phmap::priv::node_handle_base	typeref:typename:allocator_type
get_and_create	extern/nlohmann_json/json.hpp	/^    BasicJsonType& get_and_create(BasicJsonType& j) const$/;"	f	class:json_pointer	typeref:typename:BasicJsonType &
get_arithmetic_value	extern/nlohmann_json/json.hpp	/^void get_arithmetic_value(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:detail	typeref:typename:void
get_assign_copy_traits	extern/parallel_hashmap/phmap_base.h	/^constexpr copy_traits get_assign_copy_traits() $/;"	f	namespace:phmap::optional_internal	typeref:typename:copy_traits
get_binary	extern/nlohmann_json/json.hpp	/^    binary_t& get_binary()$/;"	f	class:basic_json	typeref:typename:binary_t &
get_binary	extern/nlohmann_json/json.hpp	/^    bool get_binary(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_binary	extern/nlohmann_json/json.hpp	/^    const binary_t& get_binary() const$/;"	f	class:basic_json	typeref:typename:const binary_t &
get_bson_binary	extern/nlohmann_json/json.hpp	/^    bool get_bson_binary(const NumberType len, binary_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_bson_cstr	extern/nlohmann_json/json.hpp	/^    bool get_bson_cstr(string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_bson_string	extern/nlohmann_json/json.hpp	/^    bool get_bson_string(const NumberType len, string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cached_power_for_binary_exponent	extern/nlohmann_json/json.hpp	/^inline cached_power get_cached_power_for_binary_exponent(int e)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:cached_power
get_cbor_array	extern/nlohmann_json/json.hpp	/^    bool get_cbor_array(const std::size_t len,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_binary	extern/nlohmann_json/json.hpp	/^    bool get_cbor_binary(binary_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_float_prefix	extern/nlohmann_json/json.hpp	/^    static constexpr CharType get_cbor_float_prefix(double \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_cbor_float_prefix	extern/nlohmann_json/json.hpp	/^    static constexpr CharType get_cbor_float_prefix(float \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_cbor_object	extern/nlohmann_json/json.hpp	/^    bool get_cbor_object(const std::size_t len,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_string	extern/nlohmann_json/json.hpp	/^    bool get_cbor_string(string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_character	extern/nlohmann_json/json.hpp	/^    std::char_traits<char>::int_type get_character() noexcept$/;"	f	class:detail::file_input_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/nlohmann_json/json.hpp	/^    std::char_traits<char>::int_type get_character()$/;"	f	class:detail::input_stream_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/nlohmann_json/json.hpp	/^    typename std::char_traits<char>::int_type get_character() noexcept$/;"	f	class:detail::wide_string_input_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/nlohmann_json/json.hpp	/^    typename std::char_traits<char_type>::int_type get_character()$/;"	f	class:detail::iterator_input_adapter	typeref:typename:std::char_traits<char_type>::int_type
get_checked	extern/nlohmann_json/json.hpp	/^    BasicJsonType& get_checked(BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:BasicJsonType &
get_checked	extern/nlohmann_json/json.hpp	/^    const BasicJsonType& get_checked(const BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:const BasicJsonType &
get_codepoint	extern/nlohmann_json/json.hpp	/^    int get_codepoint()$/;"	f	class:detail::lexer	typeref:typename:int
get_ctor_copy_traits	extern/parallel_hashmap/phmap_base.h	/^constexpr copy_traits get_ctor_copy_traits() $/;"	f	namespace:phmap::optional_internal	typeref:typename:copy_traits
get_decimal_point	extern/nlohmann_json/json.hpp	/^    static char get_decimal_point() noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_PURE char
get_error_message	extern/nlohmann_json/json.hpp	/^    constexpr const char* get_error_message() const noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL const char *
get_ignore_noop	extern/nlohmann_json/json.hpp	/^    char_int_type get_ignore_noop()$/;"	f	class:detail::binary_reader	typeref:typename:char_int_type
get_impl	extern/nlohmann_json/json.hpp	/^    basic_json get_impl(detail::priority_tag<3> \/*unused*\/) const$/;"	f	class:basic_json	typeref:typename:basic_json
get_impl	extern/nlohmann_json/json.hpp	/^    boolean_t get_impl(boolean_t* \/*unused*\/) const$/;"	f	class:basic_json	typeref:typename:boolean_t
get_impl	extern/nlohmann_json/json.hpp	/^    constexpr auto get_impl(detail::priority_tag<4> \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:auto
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    array_t* get_impl_ptr(array_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:array_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    binary_t* get_impl_ptr(binary_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:binary_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    boolean_t* get_impl_ptr(boolean_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:boolean_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    constexpr const array_t* get_impl_ptr(const array_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const array_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    constexpr const binary_t* get_impl_ptr(const binary_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const binary_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    constexpr const boolean_t* get_impl_ptr(const boolean_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const boolean_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    constexpr const number_float_t* get_impl_ptr(const number_float_t* \/*unused*\/) const noexc/;"	f	class:basic_json	typeref:typename:const number_float_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    constexpr const number_integer_t* get_impl_ptr(const number_integer_t* \/*unused*\/) const n/;"	f	class:basic_json	typeref:typename:const number_integer_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    constexpr const number_unsigned_t* get_impl_ptr(const number_unsigned_t* \/*unused*\/) const/;"	f	class:basic_json	typeref:typename:const number_unsigned_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    constexpr const object_t* get_impl_ptr(const object_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const object_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    constexpr const string_t* get_impl_ptr(const string_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const string_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    number_float_t* get_impl_ptr(number_float_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:number_float_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    number_integer_t* get_impl_ptr(number_integer_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:number_integer_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    number_unsigned_t* get_impl_ptr(number_unsigned_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:number_unsigned_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    object_t* get_impl_ptr(object_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:object_t *
get_impl_ptr	extern/nlohmann_json/json.hpp	/^    string_t* get_impl_ptr(string_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:string_t *
get_inner	extern/parallel_hashmap/phmap.h	/^    Inner& get_inner(size_t idx) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:Inner &
get_msgpack_array	extern/nlohmann_json/json.hpp	/^    bool get_msgpack_array(const std::size_t len)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_binary	extern/nlohmann_json/json.hpp	/^    bool get_msgpack_binary(binary_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_float_prefix	extern/nlohmann_json/json.hpp	/^    static constexpr CharType get_msgpack_float_prefix(double \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_msgpack_float_prefix	extern/nlohmann_json/json.hpp	/^    static constexpr CharType get_msgpack_float_prefix(float \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_msgpack_object	extern/nlohmann_json/json.hpp	/^    bool get_msgpack_object(const std::size_t len)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_string	extern/nlohmann_json/json.hpp	/^    bool get_msgpack_string(string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_number	extern/nlohmann_json/json.hpp	/^    bool get_number(const input_format_t format, NumberType& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_number_float	extern/nlohmann_json/json.hpp	/^    constexpr number_float_t get_number_float() const noexcept$/;"	f	class:detail::lexer	typeref:typename:number_float_t
get_number_integer	extern/nlohmann_json/json.hpp	/^    constexpr number_integer_t get_number_integer() const noexcept$/;"	f	class:detail::lexer	typeref:typename:number_integer_t
get_number_unsigned	extern/nlohmann_json/json.hpp	/^    constexpr number_unsigned_t get_number_unsigned() const noexcept$/;"	f	class:detail::lexer	typeref:typename:number_unsigned_t
get_position	extern/nlohmann_json/json.hpp	/^    constexpr position_t get_position() const noexcept$/;"	f	class:detail::lexer	typeref:typename:position_t
get_ptr	extern/nlohmann_json/json.hpp	/^    auto get_ptr() noexcept -> decltype(std::declval<basic_json_t&>().get_impl_ptr(std::declval</;"	f	class:basic_json	typeref:typename:auto
get_ptr	extern/nlohmann_json/json.hpp	/^    constexpr auto get_ptr() const noexcept -> decltype(std::declval<const basic_json_t&>().get_/;"	f	class:basic_json	typeref:typename:auto
get_ref_impl	extern/nlohmann_json/json.hpp	/^    static ReferenceType get_ref_impl(ThisType& obj)$/;"	f	class:basic_json	typeref:typename:ReferenceType
get_string	extern/nlohmann_json/json.hpp	/^    bool get_string(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_string	extern/nlohmann_json/json.hpp	/^    string_t& get_string()$/;"	f	class:detail::lexer	typeref:typename:string_t &
get_template_function	extern/nlohmann_json/json.hpp	/^using get_template_function = decltype(std::declval<T>().template get<U>());$/;"	t	namespace:detail
get_token	extern/nlohmann_json/json.hpp	/^    token_type get_token()$/;"	f	class:detail::parser	typeref:typename:token_type
get_token_string	extern/nlohmann_json/json.hpp	/^    std::string get_token_string() const$/;"	f	class:detail::binary_reader	typeref:typename:std::string
get_token_string	extern/nlohmann_json/json.hpp	/^    std::string get_token_string() const$/;"	f	class:detail::lexer	typeref:typename:std::string
get_ubjson_array	extern/nlohmann_json/json.hpp	/^    bool get_ubjson_array()$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_float_prefix	extern/nlohmann_json/json.hpp	/^    static constexpr CharType get_ubjson_float_prefix(double \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_ubjson_float_prefix	extern/nlohmann_json/json.hpp	/^    static constexpr CharType get_ubjson_float_prefix(float \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_ubjson_high_precision_number	extern/nlohmann_json/json.hpp	/^    bool get_ubjson_high_precision_number()$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_ndarray_size	extern/nlohmann_json/json.hpp	/^    bool get_ubjson_ndarray_size(std::vector<size_t>& dim)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_object	extern/nlohmann_json/json.hpp	/^    bool get_ubjson_object()$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_size_type	extern/nlohmann_json/json.hpp	/^    bool get_ubjson_size_type(std::pair<std::size_t, char_int_type>& result, bool inside_ndarray/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_size_value	extern/nlohmann_json/json.hpp	/^    bool get_ubjson_size_value(std::size_t& result, bool& is_ndarray, char_int_type prefix = 0)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_string	extern/nlohmann_json/json.hpp	/^    bool get_ubjson_string(string_t& result, const bool get_char = true)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_value	extern/nlohmann_json/json.hpp	/^    bool get_ubjson_value(const char_int_type prefix)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_unchecked	extern/nlohmann_json/json.hpp	/^    BasicJsonType& get_unchecked(BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:BasicJsonType &
get_unchecked	extern/nlohmann_json/json.hpp	/^    const BasicJsonType& get_unchecked(const BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:const BasicJsonType &
get_value	extern/nlohmann_json/json.hpp	/^    constexpr difference_type get_value() const noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:difference_type
getindex	extern/parallel_hashmap/phmap.h	/^    size_t getindex() const { return index_; }$/;"	f	class:phmap::priv::probe_seq	typeref:typename:size_t
ghtonl	extern/parallel_hashmap/phmap_bits.h	/^    inline uint32_t ghtonl(uint32_t x) { return gbswap_32(x); }$/;"	f	namespace:phmap	typeref:typename:uint32_t
ghtonl	extern/parallel_hashmap/phmap_bits.h	/^    inline uint32_t ghtonl(uint32_t x) { return x; }$/;"	f	namespace:phmap	typeref:typename:uint32_t
ghtonll	extern/parallel_hashmap/phmap_bits.h	/^    inline uint64_t ghtonll(uint64_t x) { return gbswap_64(x); }$/;"	f	namespace:phmap	typeref:typename:uint64_t
ghtonll	extern/parallel_hashmap/phmap_bits.h	/^    inline uint64_t ghtonll(uint64_t x) { return x; }$/;"	f	namespace:phmap	typeref:typename:uint64_t
ghtons	extern/parallel_hashmap/phmap_bits.h	/^    inline uint16_t ghtons(uint16_t x) { return gbswap_16(x); }$/;"	f	namespace:phmap	typeref:typename:uint16_t
ghtons	extern/parallel_hashmap/phmap_bits.h	/^    inline uint16_t ghtons(uint16_t x) { return x; }$/;"	f	namespace:phmap	typeref:typename:uint16_t
git	extern/doxygen-awesome-css/package.json	/^    "git": "https:\/\/github.com\/jothepro\/doxygen-awesome-css"$/;"	s	object:author
globalKeyMemorySlotPair_t	include/hicr/L1/communicationManager.hpp	/^  typedef std::pair<L0::GlobalMemorySlot::globalKey_t, std::shared_ptr<L0::LocalMemorySlot>> glo/;"	t	class:HiCR::L1::CommunicationManager	typeref:typename:std::pair<L0::GlobalMemorySlot::globalKey_t,std::shared_ptr<L0::LocalMemorySlot>>
globalKeyToMemorySlotMap_t	include/hicr/L1/communicationManager.hpp	/^  typedef std::map<L0::GlobalMemorySlot::globalKey_t, std::shared_ptr<L0::GlobalMemorySlot>> glo/;"	t	class:HiCR::L1::CommunicationManager	typeref:typename:std::map<L0::GlobalMemorySlot::globalKey_t,std::shared_ptr<L0::GlobalMemorySlot>>
globalKey_t	include/hicr/L0/globalMemorySlot.hpp	/^  typedef uint64_t globalKey_t;$/;"	t	class:HiCR::L0::GlobalMemorySlot	typeref:typename:uint64_t
globalMemorySlotTagKeyMap_t	include/hicr/L1/communicationManager.hpp	/^  typedef std::map<L0::GlobalMemorySlot::tag_t, globalKeyToMemorySlotMap_t> globalMemorySlotTagK/;"	t	class:HiCR::L1::CommunicationManager	typeref:typename:std::map<L0::GlobalMemorySlot::tag_t,globalKeyToMemorySlotMap_t>
gntohl	extern/parallel_hashmap/phmap_bits.h	/^inline uint32_t gntohl(uint32_t x) { return ghtonl(x); }$/;"	f	namespace:phmap	typeref:typename:uint32_t
gntohll	extern/parallel_hashmap/phmap_bits.h	/^inline uint64_t gntohll(uint64_t x) { return ghtonll(x); }$/;"	f	namespace:phmap	typeref:typename:uint64_t
gntohs	extern/parallel_hashmap/phmap_bits.h	/^inline uint16_t gntohs(uint16_t x) { return ghtons(x); }$/;"	f	namespace:phmap	typeref:typename:uint16_t
greater	extern/parallel_hashmap/btree.h	/^        enum class ord : value_type { less = -1, greater = 1 };$/;"	e	enum:phmap::compare_internal::ord
green	extern/doxygen-awesome-css/include/MyLibrary/example.hpp	/^  green,$/;"	e	enum:MyLibrary::Color
green	extern/run-clang-format/run-clang-format.py	/^    def green(s):$/;"	f	function:colorize	file:
grisu2	extern/nlohmann_json/json.hpp	/^inline void grisu2(char* buf, int& len, int& decimal_exponent,$/;"	f	namespace:detail::dtoa_impl	typeref:typename:JSON_HEDLEY_NON_NULL (1)void
grisu2	extern/nlohmann_json/json.hpp	/^void grisu2(char* buf, int& len, int& decimal_exponent, FloatType value)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:JSON_HEDLEY_NON_NULL (1)void
grisu2_digit_gen	extern/nlohmann_json/json.hpp	/^inline void grisu2_digit_gen(char* buffer, int& length, int& decimal_exponent,$/;"	f	namespace:detail::dtoa_impl	typeref:typename:void
grisu2_round	extern/nlohmann_json/json.hpp	/^inline void grisu2_round(char* buf, int len, std::uint64_t dist, std::uint64_t delta,$/;"	f	namespace:detail::dtoa_impl	typeref:typename:void
growth_left	extern/parallel_hashmap/phmap.h	/^    size_t growth_left() { $/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
growth_left	extern/parallel_hashmap/phmap.h	/^    size_t& growth_left() { return settings_.template get<0>(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:size_t &
h	extern/parallel_hashmap/phmap.h	/^        const hasher& h;$/;"	m	struct:phmap::priv::parallel_hash_set::HashElement	typeref:typename:const hasher &
h	extern/parallel_hashmap/phmap.h	/^        const hasher& h;$/;"	m	struct:phmap::priv::raw_hash_set::HashElement	typeref:typename:const hasher &
h1	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1, h2, h3, h4, h5 {$/;"	s
h1.glow	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h1:hover a.anchorlink	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2:hover a.anchorlink, h1:hover a.anchorlink, h3:hover a.anchorlink, h4:hover a.anchorlink  {$/;"	c
h2	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1, h2, h3, h4, h5 {$/;"	s
h2.glow	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h2.groupheader	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2.groupheader {$/;"	c
h2.memtitle	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memdoc, div.memproto, h2.memtitle {$/;"	c
h2.memtitle	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.memproto, h2.memtitle {$/;"	c
h2.memtitle	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2.memtitle {$/;"	c
h2.memtitle	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2.memtitle, div.memitem {$/;"	c
h2.memtitle > span.permalink	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2.memtitle > span.permalink {$/;"	c
h2.memtitle > span.permalink > a	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2.memtitle > span.permalink > a {$/;"	s
h2.memtitle > span.permalink > a:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2.memtitle > span.permalink > a:hover {$/;"	s
h2.memtitle:after	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2.memtitle:after {$/;"	c
h2:hover a.anchorlink	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2:hover a.anchorlink, h1:hover a.anchorlink, h3:hover a.anchorlink, h4:hover a.anchorlink  {$/;"	c
h2_t	extern/parallel_hashmap/phmap.h	/^using h2_t = uint8_t;$/;"	t	namespace:phmap::priv	typeref:typename:uint8_t
h3	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1, h2, h3, h4, h5 {$/;"	s
h3 a.anchorlink svg	extern/doxygen-awesome-css/doxygen-awesome.css	/^h3 a.anchorlink svg, h4 a.anchorlink svg {$/;"	s
h3.glow	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h3:hover a.anchorlink	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2:hover a.anchorlink, h1:hover a.anchorlink, h3:hover a.anchorlink, h4:hover a.anchorlink  {$/;"	c
h4	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1, h2, h3, h4, h5 {$/;"	s
h4 a.anchorlink svg	extern/doxygen-awesome-css/doxygen-awesome.css	/^h3 a.anchorlink svg, h4 a.anchorlink svg {$/;"	s
h4.glow	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h4:hover a.anchorlink	extern/doxygen-awesome-css/doxygen-awesome.css	/^h2:hover a.anchorlink, h1:hover a.anchorlink, h3:hover a.anchorlink, h4:hover a.anchorlink  {$/;"	c
h5	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1, h2, h3, h4, h5 {$/;"	s
h5.glow	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h6.glow	extern/doxygen-awesome-css/doxygen-awesome.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
handle_value	extern/nlohmann_json/json.hpp	/^    BasicJsonType* handle_value(Value&& v)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL BasicJsonType *
handle_value	extern/nlohmann_json/json.hpp	/^    std::pair<bool, BasicJsonType*> handle_value(Value&& v, const bool skip_callback = false)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:std::pair<bool,BasicJsonType * >
hasFinished	include/backends/host/coroutine.hpp	/^  __USED__ inline bool hasFinished() { return _hasFinished; }$/;"	f	class:HiCR::backend::host::Coroutine	typeref:typename:__USED__ bool
has_difference_operator	extern/parallel_hashmap/phmap.h	/^    struct has_difference_operator$/;"	s	class:phmap::priv::raw_hash_set
has_element	extern/parallel_hashmap/phmap.h	/^    bool has_element(const value_type& elem) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
has_element	extern/parallel_hashmap/phmap.h	/^    bool has_element(const value_type& elem) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
has_element	extern/parallel_hashmap/phmap.h	/^    bool has_element(const value_type& elem, size_t hashval) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
has_erase_with_key_type	extern/nlohmann_json/json.hpp	/^using has_erase_with_key_type = typename std::conditional <$/;"	t	namespace:detail	typeref:typename:std::conditional<is_detected<detect_erase_with_key_type,typename BasicJsonType::object_t,KeyType>::value,std::true_type,std::false_type>::type
has_from_json	extern/nlohmann_json/json.hpp	/^struct has_from_json : std::false_type {};$/;"	s	namespace:detail
has_from_json	extern/nlohmann_json/json.hpp	/^struct has_from_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:detail
has_hash_value	extern/parallel_hashmap/phmap_utils.h	/^struct has_hash_value$/;"	s	namespace:phmap
has_key_compare	extern/nlohmann_json/json.hpp	/^struct has_key_compare : std::integral_constant<bool, is_detected<detect_key_compare, T>::value>/;"	s	namespace:detail
has_member_type_EmbeddedSet	extern/parallel_hashmap/phmap.h	/^struct has_member_type_EmbeddedSet : std::false_type$/;"	s	namespace:phmap::priv::hashtable_debug_internal
has_member_type_EmbeddedSet	extern/parallel_hashmap/phmap.h	/^struct has_member_type_EmbeddedSet<T, phmap::void_t<typename T::EmbeddedSet>> : std::true_type$/;"	s	namespace:phmap::priv::hashtable_debug_internal
has_member_type_raw_hash_set	extern/parallel_hashmap/phmap.h	/^struct has_member_type_raw_hash_set : std::false_type$/;"	s	namespace:phmap::priv::hashtable_debug_internal
has_member_type_raw_hash_set	extern/parallel_hashmap/phmap.h	/^struct has_member_type_raw_hash_set<T, phmap::void_t<typename T::raw_hash_set>> : std::true_type$/;"	s	namespace:phmap::priv::hashtable_debug_internal
has_non_default_from_json	extern/nlohmann_json/json.hpp	/^struct has_non_default_from_json : std::false_type {};$/;"	s	namespace:detail
has_non_default_from_json	extern/nlohmann_json/json.hpp	/^struct has_non_default_from_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:detail
has_subtype	extern/nlohmann_json/json.hpp	/^    constexpr bool has_subtype() const noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:bool
has_to_json	extern/nlohmann_json/json.hpp	/^struct has_to_json : std::false_type {};$/;"	s	namespace:detail
has_to_json	extern/nlohmann_json/json.hpp	/^struct has_to_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:detail
has_value	extern/parallel_hashmap/phmap_base.h	/^    constexpr bool has_value() const noexcept { return this->engaged_; }$/;"	f	class:phmap::optional	typeref:typename:bool
hash	extern/nlohmann_json/json.hpp	/^std::size_t hash(const BasicJsonType& j)$/;"	f	namespace:detail	typeref:typename:std::size_t
hash	extern/nlohmann_json/json.hpp	/^struct hash<nlohmann::NLOHMANN_BASIC_JSON_TPL>$/;"	s	namespace:std
hash	extern/parallel_hashmap/phmap.h	/^    size_t hash(const K& key) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
hash	extern/parallel_hashmap/phmap.h	/^    size_t hash(const K& key) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:size_t
hash	extern/parallel_hashmap/phmap_base.h	/^struct hash<phmap::optional<T> >$/;"	s	namespace:std
hash_default_eq	extern/parallel_hashmap/phmap_fwd_decl.h	/^        using hash_default_eq = typename priv::HashEq<T>::Eq;$/;"	t	namespace:phmap::priv	typeref:typename:priv::HashEq<T>::Eq
hash_default_hash	extern/parallel_hashmap/phmap_fwd_decl.h	/^        using hash_default_hash = typename priv::HashEq<T>::Hash;$/;"	t	namespace:phmap::priv	typeref:typename:priv::HashEq<T>::Hash
hash_funct	extern/parallel_hashmap/phmap.h	/^    typename Base::hasher hash_funct() { return this->hash_function(); }$/;"	f	class:phmap::node_hash_map	typeref:typename:Base::hasher
hash_funct	extern/parallel_hashmap/phmap.h	/^    typename Base::hasher hash_funct() { return this->hash_function(); }$/;"	f	class:phmap::node_hash_set	typeref:typename:Base::hasher
hash_funct	extern/parallel_hashmap/phmap.h	/^    typename Base::hasher hash_funct() { return this->hash_function(); }$/;"	f	class:phmap::parallel_node_hash_map	typeref:typename:Base::hasher
hash_funct	extern/parallel_hashmap/phmap.h	/^    typename Base::hasher hash_funct() { return this->hash_function(); }$/;"	f	class:phmap::parallel_node_hash_set	typeref:typename:Base::hasher
hash_function	extern/parallel_hashmap/phmap.h	/^    hasher hash_function() const { return hash_ref(); }  \/\/ warning: doesn't match internal ha/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:hasher
hash_function	extern/parallel_hashmap/phmap.h	/^    hasher hash_function() const { return hash_ref(); } \/\/ warning: doesn't match internal has/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:hasher
hash_policy_traits	extern/parallel_hashmap/phmap_base.h	/^struct hash_policy_traits $/;"	s	namespace:phmap::priv
hash_ref	extern/parallel_hashmap/phmap.h	/^    const hasher& hash_ref() const  { return sets_[0].set_.hash_ref(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const hasher &
hash_ref	extern/parallel_hashmap/phmap.h	/^    const hasher& hash_ref() const { return settings_.template get<1>(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const hasher &
hash_ref	extern/parallel_hashmap/phmap.h	/^    hasher&       hash_ref()        { return sets_[0].set_.hash_ref(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:hasher &
hash_ref	extern/parallel_hashmap/phmap.h	/^    hasher& hash_ref() { return settings_.template get<1>(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:hasher &
hasher	extern/parallel_hashmap/phmap.h	/^    using hasher          = Hash;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:Hash
hasher	extern/parallel_hashmap/phmap.h	/^    using hasher = Hash;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:Hash
hashfn	extern/parallel_hashmap/phmap.h	/^            const hasher& hashfn;$/;"	m	struct:phmap::priv::parallel_hash_set::Inner::Params	typeref:typename:const hasher &
hashtable_debug_internal	extern/parallel_hashmap/phmap.h	/^namespace hashtable_debug_internal {$/;"	n	namespace:phmap::priv
hashval	extern/parallel_hashmap/phmap.h	/^        size_t &hashval;$/;"	m	struct:phmap::priv::raw_hash_set::InsertSlotWithHash	typeref:typename:size_t &
hashval	extern/parallel_hashmap/phmap.h	/^        size_t hashval;$/;"	m	struct:phmap::priv::parallel_hash_set::EmplaceDecomposableHashval	typeref:typename:size_t
hashval	extern/parallel_hashmap/phmap.h	/^        size_t hashval;$/;"	m	struct:phmap::priv::raw_hash_set::EmplaceDecomposableHashval	typeref:typename:size_t
headers	extern/doxygen-awesome-css/doxygen-awesome-interactive-toc.js	/^    static headers = []$/;"	M	class:DoxygenAwesomeInteractiveToc
height	extern/parallel_hashmap/btree.h	/^        size_type height() const {$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
hex_bytes	extern/nlohmann_json/json.hpp	/^    static std::string hex_bytes(std::uint8_t byte)$/;"	f	class:detail::serializer	typeref:typename:std::string
hicr	examples/meson.build	/^subdir('hicr')$/;"	S
hicrBuildCppArgs	include/hicr/meson.build	/^hicrBuildCppArgs = [$/;"	V
hicrBuildDep	include/hicr/meson.build	/^hicrBuildDep = declare_dependency($/;"	V
hicrBuildDeps	include/hicr/meson.build	/^hicrBuildDeps = [$/;"	V
hicrBuildIncludes	include/hicr/meson.build	/^hicrBuildIncludes = include_directories([$/;"	V
hicrExceptionCppArgs	include/hicr/meson.build	/^ hicrExceptionCppArgs = [ '-DHICR_EXCEPTION_USE_ABORT', '-DJSON_NOEXCEPTION' ]$/;"	V
hicrExceptionCppArgs	include/hicr/meson.build	/^ hicrExceptionCppArgs = [ '-DHICR_EXCEPTION_USE_STDEXCEPTION' ]$/;"	V
hicrInstance	include/frontends/runtime/coordinator.hpp	/^    const std::shared_ptr<HiCR::L0::Instance> hicrInstance;$/;"	m	struct:HiCR::runtime::Coordinator::worker_t	typeref:typename:const std::shared_ptr<HiCR::L0::Instance>
hicrTestCppFlags	include/hicr/meson.build	/^hicrTestCppFlags = [$/;"	V
hicrTestDep	include/hicr/meson.build	/^hicrTestDep = declare_dependency($/;"	V
hicrTestDeps	include/hicr/meson.build	/^hicrTestDeps = [$/;"	V
hicrTestLinkFlags	include/hicr/meson.build	/^hicrTestLinkFlags = [$/;"	V
hideMobileMenu	extern/doxygen-awesome-css/doxygen-awesome-interactive-toc.js	/^    static hideMobileMenu = true$/;"	M	class:DoxygenAwesomeInteractiveToc
highlight_language	docs/source/conf.py	/^highlight_language = 'cpp'$/;"	v
hlwoc	examples/hicr/topology/meson.build	/^	  test('hlwoc', hwloc, timeout: test_timeout, suite: testSuite )$/;"	t
homepage	extern/doxygen-awesome-css/package.json	/^  "homepage": "https:\/\/jothepro.github.io\/doxygen-awesome-css\/",$/;"	s
host	include/backends/ascend/L1/communicationManager.hpp	/^    host,$/;"	e	enum:HiCR::backend::ascend::L1::CommunicationManager::deviceType_t
host	include/backends/host/L0/computeResource.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/L0/device.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/L0/executionState.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/L0/executionUnit.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/L0/globalMemorySlot.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/L0/memorySpace.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/L1/computeManager.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/cache.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/coroutine.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/hwloc/L0/computeResource.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/hwloc/L0/device.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/hwloc/L0/memorySpace.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/hwloc/L1/memoryManager.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/hwloc/L1/topologyManager.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/pthreads/L0/processingUnit.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/pthreads/L1/communicationManager.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	include/backends/host/pthreads/L1/computeManager.hpp	/^namespace host$/;"	n	namespace:HiCR::backend
host	tests/backends/meson.build	/^subdir('host')$/;"	S
hostAlloc	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline void *hostAlloc(std::shared_ptr<HiCR::L0::MemorySpace> memorySpace, const size/;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ void *
hr	extern/doxygen-awesome-css/doxygen-awesome.css	/^hr {$/;"	s
html	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^    html {$/;"	s
html	extern/doxygen-awesome-css/doxygen-awesome-sidebar-only.css	/^html {$/;"	s
html	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html {$/;"	s
html	extern/doxygen-awesome-css/doxygen-awesome.css	/^html {$/;"	s
html.alternative	extern/doxygen-awesome-css/doxygen-custom/custom-alternative.css	/^html.alternative {$/;"	c
html.alternative.dark-mode	extern/doxygen-awesome-css/doxygen-custom/custom-alternative.css	/^html.alternative.dark-mode {$/;"	c
html.dark-mode	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode {$/;"	c
html.dark-mode .bordered_image img	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^html.dark-mode .bordered_image img, \/* < doxygen 1.9.3 *\/$/;"	s
html.dark-mode .bordered_image object[type="image/svg+xml"]	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^html.dark-mode .bordered_image object[type="image\/svg+xml"] \/* doxygen 1.9.3 *\/ {$/;"	s
html.dark-mode .darkmode_inverted_image img	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^html.dark-mode .darkmode_inverted_image img, \/* < doxygen 1.9.3 *\/$/;"	s
html.dark-mode .darkmode_inverted_image object[type="image/svg+xml"]	extern/doxygen-awesome-css/doxygen-custom/custom.css	/^html.dark-mode .darkmode_inverted_image object[type="image\/svg+xml"] \/* doxygen 1.9.3 *\/ {$/;"	s
html.dark-mode .iconfclosed	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode .iconfopen, html.dark-mode .iconfclosed {$/;"	c
html.dark-mode .iconfopen	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode .iconfopen, html.dark-mode .iconfclosed {$/;"	c
html.dark-mode div.contents .dotgraph iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode div.contents .dotgraph iframe$/;"	s
html.dark-mode div.contents > table img	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode div.contents > table img,$/;"	s
html.dark-mode div.contents center iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode div.contents center iframe,$/;"	s
html.dark-mode div.contents center img	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode div.contents center img,$/;"	s
html.dark-mode div.contents div.dyncontent iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode div.contents div.dyncontent iframe,$/;"	s
html.dark-mode div.contents div.dyncontent img	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode div.contents div.dyncontent img,$/;"	s
html.dark-mode div.contents table iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode div.contents table iframe,$/;"	s
html.dark-mode doxygen-awesome-dark-mode-toggle:hover	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode doxygen-awesome-dark-mode-toggle:hover {$/;"	s
html.dark-mode iframe#MSearchResults	extern/doxygen-awesome-css/doxygen-awesome.css	/^html.dark-mode iframe#MSearchResults {$/;"	i
html:not(.light-mode)	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) {$/;"	c
html:not(.light-mode) .iconfclosed	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) .iconfopen, html:not(.light-mode) .iconfclosed {$/;"	c
html:not(.light-mode) .iconfopen	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) .iconfopen, html:not(.light-mode) .iconfclosed {$/;"	c
html:not(.light-mode) div.contents .dotgraph iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) div.contents .dotgraph iframe {$/;"	s
html:not(.light-mode) div.contents > table img	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) div.contents > table img,$/;"	s
html:not(.light-mode) div.contents center iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) div.contents center iframe,$/;"	s
html:not(.light-mode) div.contents center img	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) div.contents center img,$/;"	s
html:not(.light-mode) div.contents div.dyncontent iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) div.contents div.dyncontent iframe,$/;"	s
html:not(.light-mode) div.contents div.dyncontent img	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) div.contents div.dyncontent img,$/;"	s
html:not(.light-mode) div.contents table iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) div.contents table iframe,$/;"	s
html:not(.light-mode) iframe#MSearchResults	extern/doxygen-awesome-css/doxygen-awesome.css	/^    html:not(.light-mode) iframe#MSearchResults {$/;"	i
html_domain_indices	docs/source/conf.py	/^html_domain_indices = True$/;"	v
html_options	docs/source/conf.py	/^html_options = {             "show_nav_level": 1,$/;"	v
html_show_copyright	docs/source/conf.py	/^html_show_copyright = True$/;"	v
html_show_sourcelink	docs/source/conf.py	/^html_show_sourcelink = False$/;"	v
html_show_sphinx	docs/source/conf.py	/^html_show_sphinx = False$/;"	v
html_split_index	docs/source/conf.py	/^html_split_index = False$/;"	v
html_static_path	docs/source/conf.py	/^html_static_path = [ ]$/;"	v
html_theme	docs/source/conf.py	/^html_theme = 'sphinx_rtd_theme'$/;"	v
html_use_index	docs/source/conf.py	/^html_use_index = True$/;"	v
hwloc	examples/hicr/topology/meson.build	/^	hwloc = executable('hwloc', [ 'source\/hwloc.cpp'], dependencies: hicrBuildDep, include_directo/;"	B
hwloc	examples/hicr/topology/meson.build	/^	hwloc = executable('hwloc', [ 'source\/hwloc.cpp'], dependencies: hicrBuildDep, include_directo/;"	V
hwloc	include/backends/host/hwloc/L0/computeResource.hpp	/^namespace hwloc$/;"	n	namespace:HiCR::backend::host
hwloc	include/backends/host/hwloc/L0/device.hpp	/^namespace hwloc$/;"	n	namespace:HiCR::backend::host
hwloc	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^namespace hwloc$/;"	n	namespace:HiCR::backend::host
hwloc	include/backends/host/hwloc/L0/memorySpace.hpp	/^namespace hwloc$/;"	n	namespace:HiCR::backend::host
hwloc	include/backends/host/hwloc/L1/memoryManager.hpp	/^namespace hwloc$/;"	n	namespace:HiCR::backend::host
hwloc	include/backends/host/hwloc/L1/topologyManager.hpp	/^namespace hwloc$/;"	n	namespace:HiCR::backend::host
hwloc	tests/backends/host/meson.build	/^  subdir('hwloc')$/;"	S
i	extern/nlohmann_json/json.hpp	/^        for (std::size_t i = 0; i < s.size(); ++i)$/;"	m	class:detail::serializer	typeref:typename:std::size_t
ia	extern/nlohmann_json/json.hpp	/^    InputAdapterType ia;$/;"	m	class:detail::binary_reader	typeref:typename:InputAdapterType
ia	extern/nlohmann_json/json.hpp	/^    InputAdapterType ia;$/;"	m	class:detail::lexer	typeref:typename:InputAdapterType
ia	extern/nlohmann_json/json.hpp	/^    contiguous_bytes_input_adapter ia;$/;"	m	class:detail::span_input_adapter	typeref:typename:contiguous_bytes_input_adapter
ia_type	extern/nlohmann_json/json.hpp	/^        using ia_type = decltype(detail::input_adapter(number_vector));$/;"	t	function:detail::binary_reader::get_ubjson_high_precision_number
icon	extern/doxygen-awesome-css/doxygen-awesome-paragraph-link.js	/^    static icon = `<svg xmlns="http:\/\/www.w3.org\/2000\/svg" height="20px" viewBox="0 0 24 24"/;"	M	class:DoxygenAwesomeParagraphLink
id	extern/nlohmann_json/json.hpp	/^    const int id; \/\/ NOLINT(cppcoreguidelines-non-private-member-variables-in-classes)$/;"	m	class:detail::exception	typeref:typename:const int
identity	extern/parallel_hashmap/phmap_base.h	/^struct identity {$/;"	s	namespace:phmap::internal
identity_t	extern/parallel_hashmap/phmap_base.h	/^using identity_t = typename identity<T>::type;$/;"	t	namespace:phmap::internal	typeref:typename:identity<T>::type
identity_tag	extern/nlohmann_json/json.hpp	/^template <class T> struct identity_tag {};$/;"	s	namespace:detail
if_contains	extern/parallel_hashmap/phmap.h	/^    bool if_contains(const key_arg<K>& key, F&& f) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
if_contains_unsafe	extern/parallel_hashmap/phmap.h	/^    bool if_contains_unsafe(const key_arg<K>& key, F&& f) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
iframe	extern/doxygen-awesome-css/doxygen-awesome.css	/^iframe {$/;"	s
iframe#MSearchResults	extern/doxygen-awesome-css/doxygen-awesome.css	/^iframe#MSearchResults {$/;"	i
ifs_	extern/parallel_hashmap/phmap_dump.h	/^    std::ifstream ifs_;$/;"	m	class:phmap::BinaryInputArchive	typeref:typename:std::ifstream
ignore	extern/nlohmann_json/json.hpp	/^    ignore   \/\/\/< ignore invalid UTF-8 sequences$/;"	e	enum:detail::error_handler_t
ignore	extern/nlohmann_json/json.hpp	/^    ignore,  \/\/\/< ignore tags$/;"	e	enum:detail::cbor_tag_handler_t
ignore_comments	extern/nlohmann_json/json.hpp	/^    const bool ignore_comments = false;$/;"	m	class:detail::lexer	typeref:typename:const bool
img.footer	extern/doxygen-awesome-css/doxygen-awesome.css	/^img.footer {$/;"	c
impl	extern/nlohmann_json/json.hpp	/^namespace impl$/;"	n	namespace:detail
in_place_index_t	extern/parallel_hashmap/phmap_base.h	/^struct in_place_index_t {};$/;"	s	namespace:phmap
in_place_t	extern/parallel_hashmap/phmap_base.h	/^struct in_place_t {};$/;"	s	namespace:phmap
in_place_type_t	extern/parallel_hashmap/phmap_base.h	/^struct in_place_type_t {};$/;"	s	namespace:phmap
include/backends/ascend	meson.build	/^  subdir('include\/backends\/ascend')$/;"	S
include/backends/host/hwloc	meson.build	/^  subdir('include\/backends\/host\/hwloc')$/;"	S
include/backends/host/pthreads	meson.build	/^  subdir('include\/backends\/host\/pthreads')$/;"	S
include/backends/lpf	meson.build	/^  subdir('include\/backends\/lpf')$/;"	S
include/backends/mpi	meson.build	/^  subdir('include\/backends\/mpi')$/;"	S
include/hicr	meson.build	/^subdir('include\/hicr')$/;"	S
includePath	.vscode/c_cpp_properties.json	/^            "includePath": [$/;"	a	object:configurations.0
increaseMessagesRecv	include/hicr/L0/memorySlot.hpp	/^  __USED__ inline void increaseMessagesRecv() noexcept { _messagesRecv = _messagesRecv + 1; }$/;"	f	class:HiCR::L0::MemorySlot	typeref:typename:__USED__ void
increaseMessagesSent	include/hicr/L0/memorySlot.hpp	/^  __USED__ inline void increaseMessagesSent() noexcept { _messagesSent = _messagesSent + 1; }$/;"	f	class:HiCR::L0::MemorySlot	typeref:typename:__USED__ void
increaseUsage	include/hicr/L0/memorySpace.hpp	/^  __USED__ inline void increaseUsage(const size_t delta)$/;"	f	class:HiCR::L0::MemorySpace	typeref:typename:__USED__ void
increaseWindowCounter	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void increaseWindowCounter(const int rank, MPI_Win *window)$/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
increment	extern/atomic_queue/atomic_queue.h	/^constexpr T increment(T x) noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:T
increment	extern/parallel_hashmap/btree.h	/^        void increment() {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:void
increment_slow	extern/parallel_hashmap/btree.h	/^    void btree_iterator<N, R, P>::increment_slow() {$/;"	f	class:phmap::priv::btree_iterator	typeref:typename:void
indent_char	extern/nlohmann_json/json.hpp	/^    const char indent_char;$/;"	m	class:detail::serializer	typeref:typename:const char
indent_string	extern/nlohmann_json/json.hpp	/^    string_t indent_string;$/;"	m	class:detail::serializer	typeref:typename:string_t
index_	extern/parallel_hashmap/phmap.h	/^    size_t index_ = 0;$/;"	m	class:phmap::priv::probe_seq	typeref:typename:size_t
index_sequence	extern/nlohmann_json/json.hpp	/^using index_sequence = integer_sequence<size_t, Ints...>;$/;"	t	namespace:detail	typeref:typename:integer_sequence<size_t,Ints...>
index_sequence	extern/parallel_hashmap/phmap_base.h	/^using index_sequence = integer_sequence<size_t, Ints...>;$/;"	t	namespace:phmap	typeref:typename:integer_sequence<size_t,Ints...>
index_sequence_for	extern/nlohmann_json/json.hpp	/^using index_sequence_for = make_index_sequence<sizeof...(Ts)>;$/;"	t	namespace:detail
index_sequence_for	extern/parallel_hashmap/phmap_base.h	/^using index_sequence_for = make_index_sequence<sizeof...(Ts)>;$/;"	t	namespace:phmap
infoz_	extern/parallel_hashmap/phmap.h	/^    HashtablezInfoHandle infoz_;$/;"	m	class:phmap::priv::raw_hash_set	typeref:typename:HashtablezInfoHandle
init	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static init() {$/;"	m	class:DoxygenAwesomeDarkModeToggle
init	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^    static init() {$/;"	m	class:DoxygenAwesomeFragmentCopyButton
init	extern/doxygen-awesome-css/doxygen-awesome-interactive-toc.js	/^    static init() {$/;"	m	class:DoxygenAwesomeInteractiveToc
init	extern/doxygen-awesome-css/doxygen-awesome-paragraph-link.js	/^    static init() {$/;"	m	class:DoxygenAwesomeParagraphLink
init	extern/doxygen-awesome-css/doxygen-awesome-tabs.js	/^    static init() {$/;"	m	class:DoxygenAwesomeTabs
init	extern/parallel_hashmap/phmap_base.h	/^    static init_t init;$/;"	m	struct:phmap::nullopt_t	typeref:typename:init_t
init	include/backends/ascend/core.hpp	/^  void init(const char *configPath = NULL)$/;"	f	class:HiCR::backend::ascend::Core	typeref:typename:void
init_child	extern/parallel_hashmap/btree.h	/^        void init_child(int i, btree_node *c) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
init_internal	extern/parallel_hashmap/btree.h	/^        static btree_node *init_internal(btree_node *n, btree_node *parent) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:btree_node *
init_leaf	extern/parallel_hashmap/btree.h	/^        static btree_node *init_leaf(btree_node *n, btree_node *parent,$/;"	f	class:phmap::priv::btree_node	typeref:typename:btree_node *
init_t	extern/parallel_hashmap/phmap_base.h	/^    struct init_t {};$/;"	s	struct:phmap::nullopt_t
init_type	extern/parallel_hashmap/btree.h	/^        using init_type = typename params_type::init_type;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:params_type::init_type
init_type	extern/parallel_hashmap/btree.h	/^        using init_type = typename params_type::init_type;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:params_type::init_type
init_type	extern/parallel_hashmap/btree.h	/^        using init_type = typename slot_policy::mutable_value_type;$/;"	t	struct:phmap::priv::common_params	typeref:typename:slot_policy::mutable_value_type
init_type	extern/parallel_hashmap/btree.h	/^        using init_type = typename super_type::init_type;$/;"	t	struct:phmap::priv::map_params	typeref:typename:super_type::init_type
init_type	extern/parallel_hashmap/phmap.h	/^    using init_type       = typename PolicyTraits::init_type;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:PolicyTraits::init_type
init_type	extern/parallel_hashmap/phmap.h	/^    using init_type = T;$/;"	t	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:T
init_type	extern/parallel_hashmap/phmap.h	/^    using init_type = T;$/;"	t	struct:phmap::priv::NodeHashSetPolicy	typeref:typename:T
init_type	extern/parallel_hashmap/phmap.h	/^    using init_type = std::pair<\/*non const*\/ key_type, mapped_type>;$/;"	t	class:phmap::priv::NodeHashMapPolicy	typeref:typename:std::pair<key_type,mapped_type>
init_type	extern/parallel_hashmap/phmap.h	/^    using init_type = std::pair<\/*non const*\/ key_type, mapped_type>;$/;"	t	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:std::pair<key_type,mapped_type>
init_type	extern/parallel_hashmap/phmap.h	/^    using init_type = typename PolicyTraits::init_type;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:PolicyTraits::init_type
init_type	extern/parallel_hashmap/phmap_base.h	/^    using init_type  = typename Policy::init_type;$/;"	t	struct:phmap::priv::hash_policy_traits	typeref:typename:Policy::init_type
initializationBarrier	include/backends/host/pthreads/L0/processingUnit.hpp	/^  pthread_barrier_t initializationBarrier;$/;"	m	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:pthread_barrier_t
initialize	include/frontends/runtime/coordinator.hpp	/^  __USED__ inline void initialize() override {}$/;"	f	class:HiCR::runtime::Coordinator	typeref:typename:__USED__ void
initialize	include/frontends/runtime/runtime.hpp	/^  __USED__ inline void initialize()$/;"	f	class:HiCR::Runtime	typeref:typename:__USED__ void
initialize	include/frontends/runtime/worker.hpp	/^  __USED__ inline void initialize() override$/;"	f	class:HiCR::runtime::Worker	typeref:typename:__USED__ void
initialize	include/frontends/tasking/task.hpp	/^  __USED__ inline void initialize(std::unique_ptr<HiCR::L0::ExecutionState> executionState)$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ void
initialize	include/frontends/tasking/tasking.hpp	/^__USED__ inline void initialize()$/;"	f	namespace:HiCR::tasking	typeref:typename:__USED__ void
initialize	include/frontends/tasking/worker.hpp	/^  __USED__ inline void initialize()$/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ void
initialize	include/hicr/L0/processingUnit.hpp	/^  __USED__ inline void initialize()$/;"	f	class:HiCR::L0::ProcessingUnit	typeref:typename:__USED__ void
initializeChannels	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^__USED__ inline void Instance::initializeChannels()$/;"	f	class:Instance	typeref:typename:__USED__ void
initializeCoordinationBuffer	include/frontends/channel/base.hpp	/^  __USED__ static inline void initializeCoordinationBuffer(std::shared_ptr<L0::LocalMemorySlot> /;"	f	class:HiCR::channel::Base	typeref:typename:__USED__ void
initializeDataBuffersAndDescriptors	include/backends/ascend/computationKernel.hpp	/^  __USED__ inline void initializeDataBuffersAndDescriptors($/;"	f	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:__USED__ void
initializeImpl	include/backends/ascend/L0/processingUnit.hpp	/^  __USED__ inline void initializeImpl() override$/;"	f	class:HiCR::backend::ascend::L0::ProcessingUnit	typeref:typename:__USED__ void
initializeImpl	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ inline void initializeImpl() override$/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ void
initialize_slots	extern/parallel_hashmap/phmap.h	/^    void initialize_slots(size_t new_capacity) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
initialized	include/hicr/L0/executionState.hpp	/^    initialized,$/;"	e	enum:HiCR::L0::ExecutionState::state_t
initializer_list	.vscode/settings.json	/^        "initializer_list": "cpp",$/;"	s	object:files.associations
initializer_list_t	extern/nlohmann_json/json.hpp	/^    using initializer_list_t = std::initializer_list<detail::json_ref<basic_json>>;$/;"	t	class:basic_json	typeref:typename:std::initializer_list<detail::json_ref<basic_json>>
inner_	extern/parallel_hashmap/phmap.h	/^        Inner *inner_      = nullptr;$/;"	m	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:Inner *
inner_	extern/parallel_hashmap/phmap.h	/^        iterator inner_;$/;"	m	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:iterator
inner_end_	extern/parallel_hashmap/phmap.h	/^        Inner *inner_end_  = nullptr;$/;"	m	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:Inner *
input_adapter	extern/nlohmann_json/json.hpp	/^auto input_adapter(T (&array)[N]) -> decltype(input_adapter(array, array + N)) \/\/ NOLINT(cppco/;"	f	namespace:detail	typeref:typename:decltype(input_adapter (array,array+N))
input_adapter	extern/nlohmann_json/json.hpp	/^contiguous_bytes_input_adapter input_adapter(CharT b)$/;"	f	namespace:detail	typeref:typename:contiguous_bytes_input_adapter
input_adapter	extern/nlohmann_json/json.hpp	/^inline file_input_adapter input_adapter(std::FILE* file)$/;"	f	namespace:detail	typeref:typename:file_input_adapter
input_adapter	extern/nlohmann_json/json.hpp	/^inline input_stream_adapter input_adapter(std::istream& stream)$/;"	f	namespace:detail	typeref:typename:input_stream_adapter
input_adapter	extern/nlohmann_json/json.hpp	/^inline input_stream_adapter input_adapter(std::istream&& stream)$/;"	f	namespace:detail	typeref:typename:input_stream_adapter
input_adapter	extern/nlohmann_json/json.hpp	/^typename container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType>::a/;"	f	namespace:detail	typeref:typename:container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType>::adapter_type
input_adapter	extern/nlohmann_json/json.hpp	/^typename iterator_input_adapter_factory<IteratorType>::adapter_type input_adapter(IteratorType f/;"	f	namespace:detail	typeref:typename:iterator_input_adapter_factory<IteratorType>::adapter_type
input_format	extern/nlohmann_json/json.hpp	/^    const input_format_t input_format = input_format_t::json;$/;"	m	class:detail::binary_reader	typeref:typename:const input_format_t
input_format_t	extern/nlohmann_json/json.hpp	/^    using input_format_t = detail::input_format_t;$/;"	t	class:basic_json	typeref:typename:detail::input_format_t
input_format_t	extern/nlohmann_json/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	g	namespace:detail
input_stream_adapter	extern/nlohmann_json/json.hpp	/^    explicit input_stream_adapter(std::istream& i)$/;"	f	class:detail::input_stream_adapter
input_stream_adapter	extern/nlohmann_json/json.hpp	/^    input_stream_adapter(input_stream_adapter&& rhs) noexcept$/;"	f	class:detail::input_stream_adapter
input_stream_adapter	extern/nlohmann_json/json.hpp	/^class input_stream_adapter$/;"	c	namespace:detail
insert	extern/nlohmann_json/json.hpp	/^    iterator insert(const_iterator pos, basic_json&& val)$/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/nlohmann_json/json.hpp	/^    iterator insert(const_iterator pos, const basic_json& val)$/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/nlohmann_json/json.hpp	/^    iterator insert(const_iterator pos, const_iterator first, const_iterator last)$/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/nlohmann_json/json.hpp	/^    iterator insert(const_iterator pos, initializer_list_t ilist)$/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/nlohmann_json/json.hpp	/^    iterator insert(const_iterator pos, size_type cnt, const basic_json& val)$/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/nlohmann_json/json.hpp	/^    std::pair<iterator, bool> insert( const value_type& value )$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
insert	extern/nlohmann_json/json.hpp	/^    std::pair<iterator, bool> insert( value_type&& value )$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
insert	extern/nlohmann_json/json.hpp	/^    void insert(InputIt first, InputIt last)$/;"	f	struct:ordered_map	typeref:typename:void
insert	extern/nlohmann_json/json.hpp	/^    void insert(const_iterator first, const_iterator last)$/;"	f	class:basic_json	typeref:typename:void
insert	extern/parallel_hashmap/btree.h	/^        insert_return_type insert(node_type &&node) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:insert_return_type
insert	extern/parallel_hashmap/btree.h	/^        iterator insert(const value_type &x) { return this->tree_.insert_multi(x); }$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:iterator
insert	extern/parallel_hashmap/btree.h	/^        iterator insert(const_iterator hint, const value_type &x) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:iterator
insert	extern/parallel_hashmap/btree.h	/^        iterator insert(const_iterator hint, const value_type &x) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:iterator
insert	extern/parallel_hashmap/btree.h	/^        iterator insert(const_iterator hint, node_type &&node) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:iterator
insert	extern/parallel_hashmap/btree.h	/^        iterator insert(const_iterator hint, node_type &&node) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:iterator
insert	extern/parallel_hashmap/btree.h	/^        iterator insert(const_iterator hint, value_type &&x) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:iterator
insert	extern/parallel_hashmap/btree.h	/^        iterator insert(const_iterator hint, value_type &&x) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:iterator
insert	extern/parallel_hashmap/btree.h	/^        iterator insert(node_type &&node) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:iterator
insert	extern/parallel_hashmap/btree.h	/^        iterator insert(value_type &&x) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:iterator
insert	extern/parallel_hashmap/btree.h	/^        std::pair<iterator, bool> insert(const value_type &x) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:std::pair<iterator,bool>
insert	extern/parallel_hashmap/btree.h	/^        std::pair<iterator, bool> insert(value_type &&x) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:std::pair<iterator,bool>
insert	extern/parallel_hashmap/btree.h	/^        void insert(InputIterator b, InputIterator e) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:void
insert	extern/parallel_hashmap/btree.h	/^        void insert(InputIterator b, InputIterator e) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:void
insert	extern/parallel_hashmap/btree.h	/^        void insert(std::initializer_list<init_type> init) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:void
insert	extern/parallel_hashmap/btree.h	/^        void insert(std::initializer_list<init_type> init) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:void
insert	extern/parallel_hashmap/phmap.h	/^    insert_return_type insert(node_type&& node) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:insert_return_type
insert	extern/parallel_hashmap/phmap.h	/^    insert_return_type insert(node_type&& node) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:insert_return_type
insert	extern/parallel_hashmap/phmap.h	/^    insert_return_type insert(node_type&& node, size_t hashval) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:insert_return_type
insert	extern/parallel_hashmap/phmap.h	/^    iterator insert(const_iterator, T&& value) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
insert	extern/parallel_hashmap/phmap.h	/^    iterator insert(const_iterator, T&& value) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
insert	extern/parallel_hashmap/phmap.h	/^    iterator insert(const_iterator, const T& value) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
insert	extern/parallel_hashmap/phmap.h	/^    iterator insert(const_iterator, const T& value) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
insert	extern/parallel_hashmap/phmap.h	/^    iterator insert(const_iterator, init_type&& value) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
insert	extern/parallel_hashmap/phmap.h	/^    iterator insert(const_iterator, init_type&& value) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
insert	extern/parallel_hashmap/phmap.h	/^    iterator insert(const_iterator, node_type&& node) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
insert	extern/parallel_hashmap/phmap.h	/^    iterator insert(const_iterator, node_type&& node) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
insert	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert(T&& value) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<iterator,bool>
insert	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert(T&& value) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<iterator,bool>
insert	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert(const T& value) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<iterator,bool>
insert	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert(const T& value) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<iterator,bool>
insert	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert(init_type&& value) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<iterator,bool>
insert	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert(init_type&& value) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:std::pair<iterator,bool>
insert	extern/parallel_hashmap/phmap.h	/^    void insert(InputIt first, InputIt last) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
insert	extern/parallel_hashmap/phmap.h	/^    void insert(InputIt first, InputIt last) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
insert	extern/parallel_hashmap/phmap.h	/^    void insert(std::initializer_list<T> ilist) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
insert	extern/parallel_hashmap/phmap.h	/^    void insert(std::initializer_list<T> ilist) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
insert	extern/parallel_hashmap/phmap.h	/^    void insert(std::initializer_list<init_type> ilist) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
insert	extern/parallel_hashmap/phmap.h	/^    void insert(std::initializer_list<init_type> ilist) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
insert_hint_multi	extern/parallel_hashmap/btree.h	/^    auto btree<P>::insert_hint_multi(iterator position, ValueType &&v) -> iterator {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
insert_hint_unique	extern/parallel_hashmap/btree.h	/^    inline auto btree<P>::insert_hint_unique(iterator position, const key_type &key,$/;"	f	class:phmap::priv::btree	typeref:typename:std::pair<iterator,bool>
insert_iterator	extern/nlohmann_json/json.hpp	/^    iterator insert_iterator(const_iterator pos, Args&& ... args)$/;"	f	class:basic_json	typeref:typename:iterator
insert_iterator_multi	extern/parallel_hashmap/btree.h	/^    void btree<P>::insert_iterator_multi(InputIterator b, InputIterator e) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
insert_iterator_unique	extern/parallel_hashmap/btree.h	/^    void btree<P>::insert_iterator_unique(InputIterator b, InputIterator e) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
insert_multi	extern/parallel_hashmap/btree.h	/^        iterator insert_multi(ValueType &&v) {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
insert_multi	extern/parallel_hashmap/btree.h	/^    auto btree<P>::insert_multi(const key_type &key, ValueType &&v) -> iterator {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    iterator insert_or_assign(const_iterator, const key_arg<K>& k, V&& v) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:iterator
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    iterator insert_or_assign(const_iterator, const key_arg<K>& k, V&& v) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:iterator
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    iterator insert_or_assign(const_iterator, const key_arg<K>& k, const V& v) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:iterator
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    iterator insert_or_assign(const_iterator, const key_arg<K>& k, const V& v) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:iterator
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    iterator insert_or_assign(const_iterator, key_arg<K>&& k, V&& v) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:iterator
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    iterator insert_or_assign(const_iterator, key_arg<K>&& k, V&& v) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:iterator
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    iterator insert_or_assign(const_iterator, key_arg<K>&& k, const V& v) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:iterator
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    iterator insert_or_assign(const_iterator, key_arg<K>&& k, const V& v) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:iterator
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign(const key_arg<K>& k, V&& v) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign(const key_arg<K>& k, V&& v) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:std::pair<iterator,bool>
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign(const key_arg<K>& k, const V& v) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign(const key_arg<K>& k, const V& v) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:std::pair<iterator,bool>
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign(key_arg<K>&& k, V&& v) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign(key_arg<K>&& k, V&& v) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:std::pair<iterator,bool>
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign(key_arg<K>&& k, const V& v) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
insert_or_assign	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign(key_arg<K>&& k, const V& v) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:std::pair<iterator,bool>
insert_or_assign_impl	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign_impl(K&& k, V&& v) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
insert_or_assign_impl	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> insert_or_assign_impl(K&& k, V&& v) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:std::pair<iterator,bool>
insert_return_type	extern/parallel_hashmap/btree.h	/^        using insert_return_type = InsertReturnType<iterator, node_type>;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:InsertReturnType<iterator,node_type>
insert_return_type	extern/parallel_hashmap/phmap.h	/^    using insert_return_type = InsertReturnType<iterator, node_type>;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:InsertReturnType<iterator,node_type>
insert_return_type	extern/parallel_hashmap/phmap.h	/^    using insert_return_type = InsertReturnType<iterator, node_type>;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:InsertReturnType<iterator,node_type>
insert_unique	extern/parallel_hashmap/btree.h	/^    auto btree<P>::insert_unique(const key_type &key, Args &&... args)$/;"	f	class:phmap::priv::btree	typeref:typename:std::pair<iterator,bool>
inserted	extern/parallel_hashmap/phmap_base.h	/^    bool inserted;$/;"	m	struct:phmap::priv::InsertReturnType	typeref:typename:bool
install	extern/doxygen-awesome-css/Makefile	/^install:$/;"	t
installation	docs/source/using/install.rst	/^.. _installation:$/;"	T
instance	include/frontends/machineModel/machineModel.hpp	/^    std::shared_ptr<HiCR::L0::Instance> instance;$/;"	m	struct:HiCR::MachineModel::detectedInstance_t	typeref:typename:std::shared_ptr<HiCR::L0::Instance>
instanceId_t	include/hicr/L0/instance.hpp	/^  typedef uint64_t instanceId_t;$/;"	t	class:HiCR::L0::Instance	typeref:typename:uint64_t
instanceList_t	include/hicr/L1/instanceManager.hpp	/^  typedef std::unordered_set<std::shared_ptr<HiCR::L0::Instance>> instanceList_t;$/;"	t	class:HiCR::L1::InstanceManager	typeref:typename:std::unordered_set<std::shared_ptr<HiCR::L0::Instance>>
instances	include/frontends/machineModel/machineModel.hpp	/^    std::vector<std::shared_ptr<HiCR::L0::Instance>> instances = {};$/;"	m	struct:HiCR::MachineModel::request_t	typeref:typename:std::vector<std::shared_ptr<HiCR::L0::Instance>>
int_to_string	extern/nlohmann_json/json.hpp	/^void int_to_string( string_type& target, std::size_t value )$/;"	f	namespace:detail	typeref:typename:void
integer_sequence	extern/nlohmann_json/json.hpp	/^struct integer_sequence$/;"	s	namespace:detail
integer_sequence	extern/parallel_hashmap/phmap_base.h	/^struct integer_sequence $/;"	s	namespace:phmap
intelliSenseMode	.vscode/c_cpp_properties.json	/^            "intelliSenseMode": "linux-gcc-x64"$/;"	s	object:configurations.0
internal	extern/parallel_hashmap/phmap_base.h	/^namespace internal {$/;"	n	namespace:phmap
internal_clear	extern/parallel_hashmap/btree.h	/^    void btree<P>::internal_clear(node_type *node) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
internal_compressed_tuple	extern/parallel_hashmap/phmap_base.h	/^namespace internal_compressed_tuple {$/;"	n	namespace:phmap::priv
internal_emplace	extern/parallel_hashmap/btree.h	/^    inline auto btree<P>::internal_emplace(iterator iter, Args &&... args)$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
internal_end	extern/parallel_hashmap/btree.h	/^        const_iterator internal_end(const_iterator iter) const {$/;"	f	class:phmap::priv::btree	typeref:typename:const_iterator
internal_end	extern/parallel_hashmap/btree.h	/^        iterator internal_end(iterator iter) {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
internal_find	extern/parallel_hashmap/btree.h	/^    auto btree<P>::internal_find(const K &key) const -> iterator {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
internal_iterator	extern/nlohmann_json/json.hpp	/^    using internal_iterator = ::nlohmann::detail::internal_iterator<BasicJsonType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::internal_iterator<BasicJsonType>
internal_iterator	extern/nlohmann_json/json.hpp	/^template<typename BasicJsonType> struct internal_iterator$/;"	s	namespace:detail
internal_last	extern/parallel_hashmap/btree.h	/^    inline IterType btree<P>::internal_last(IterType iter) {$/;"	f	class:phmap::priv::btree	typeref:typename:IterType
internal_layout	extern/parallel_hashmap/phmap_base.h	/^namespace internal_layout {$/;"	n	namespace:phmap::priv
internal_locate	extern/parallel_hashmap/btree.h	/^    inline auto btree<P>::internal_locate(const K &key) const$/;"	f	class:phmap::priv::btree	typeref:typename:SearchResult<iterator,is_key_compare_to::value>
internal_locate_impl	extern/parallel_hashmap/btree.h	/^    inline auto btree<P>::internal_locate_impl($/;"	f	class:phmap::priv::btree	typeref:typename:SearchResult<iterator,false>
internal_locate_impl	extern/parallel_hashmap/btree.h	/^    inline auto btree<P>::internal_locate_impl($/;"	f	class:phmap::priv::btree	typeref:typename:SearchResult<iterator,true>
internal_lower_bound	extern/parallel_hashmap/btree.h	/^    auto btree<P>::internal_lower_bound(const K &key) const -> iterator {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
internal_nodes	extern/parallel_hashmap/btree.h	/^            size_type internal_nodes;$/;"	m	struct:phmap::priv::btree::node_stats	typeref:typename:size_type
internal_nodes	extern/parallel_hashmap/btree.h	/^        size_type internal_nodes() const {$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
internal_stats	extern/parallel_hashmap/btree.h	/^        node_stats internal_stats(const node_type *node) const {$/;"	f	class:phmap::priv::btree	typeref:typename:node_stats
internal_upper_bound	extern/parallel_hashmap/btree.h	/^    auto btree<P>::internal_upper_bound(const K &key) const -> iterator {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
internal_verify	extern/parallel_hashmap/btree.h	/^    typename btree<P>::size_type btree<P>::internal_verify($/;"	f	class:phmap::priv::btree	typeref:typename:btree<P>::size_type
invalid	extern/nlohmann_json/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
invalid	extern/parallel_hashmap/phmap_base.h	/^    using invalid = void;$/;"	t	struct:phmap::memory_internal::MakeUniqueResult	typeref:typename:void
invalid_iterator	extern/nlohmann_json/json.hpp	/^    invalid_iterator(int id_, const char* what_arg)$/;"	f	class:detail::invalid_iterator
invalid_iterator	extern/nlohmann_json/json.hpp	/^    using invalid_iterator = detail::invalid_iterator;$/;"	t	class:basic_json	typeref:typename:detail::invalid_iterator
invalid_iterator	extern/nlohmann_json/json.hpp	/^class invalid_iterator : public exception$/;"	c	namespace:detail
invoke_result_t	extern/parallel_hashmap/phmap_base.h	/^    using invoke_result_t = typename std::invoke_result_t<F, ArgTypes...>;$/;"	t	namespace:phmap	typeref:typename:std::invoke_result_t<F,ArgTypes...>
iomanip	.vscode/settings.json	/^        "iomanip": "cpp",$/;"	s	object:files.associations
iosfwd	.vscode/settings.json	/^        "iosfwd": "cpp",$/;"	s	object:files.associations
iostream	.vscode/settings.json	/^        "iostream": "cpp",$/;"	s	object:files.associations
is	extern/nlohmann_json/json.hpp	/^    std::istream* is = nullptr;$/;"	m	class:detail::input_stream_adapter	typeref:typename:std::istream *
isEmpty	include/frontends/channel/base.hpp	/^  __USED__ inline bool isEmpty() const noexcept$/;"	f	class:HiCR::channel::Base	typeref:typename:__USED__ bool
isEmpty	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline bool isEmpty() const noexcept$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ bool
isEmpty	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  bool isEmpty()$/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:bool
isEmpty	include/frontends/channel/variableSize/spsc/producer.hpp	/^  bool isEmpty()$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:bool
isEmpty	include/hicr/common/concurrentQueue.hpp	/^  __USED__ inline bool isEmpty()$/;"	f	class:HiCR::common::ConcurrentQueue	typeref:typename:__USED__ bool
isFull	include/frontends/channel/base.hpp	/^  __USED__ inline bool isFull() const noexcept$/;"	f	class:HiCR::channel::Base	typeref:typename:__USED__ bool
isFull	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline bool isFull() const noexcept$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ bool
isRootInstance	include/backends/mpi/L0/instance.hpp	/^  virtual bool isRootInstance() const$/;"	f	class:HiCR::backend::mpi::L0::Instance	typeref:typename:bool
isTopologyAcceptable	examples/machineModel/source/include/coordinator.hpp	/^bool isTopologyAcceptable(const HiCR::L0::Topology &a, const HiCR::L0::Topology &b)$/;"	f	typeref:typename:bool
isTopologyAcceptable	examples/runtime/source/include/machineModel.hpp	/^bool isTopologyAcceptable(const HiCR::L0::Topology &a, const HiCR::L0::Topology &b)$/;"	f	typeref:typename:bool
is_always_equal	extern/parallel_hashmap/phmap_base.h	/^    using is_always_equal =$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetIsAlwaysEqual,Alloc,typename std::is_empty<Alloc>::type>
is_array	extern/nlohmann_json/json.hpp	/^    constexpr bool is_array() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_basic_json	extern/nlohmann_json/json.hpp	/^struct is_basic_json<NLOHMANN_BASIC_JSON_TPL> : std::true_type {};$/;"	s	namespace:detail
is_basic_json	extern/nlohmann_json/json.hpp	/^template<typename> struct is_basic_json : std::false_type {};$/;"	s	namespace:detail
is_basic_json_context	extern/nlohmann_json/json.hpp	/^struct is_basic_json_context :$/;"	s	namespace:detail
is_begin	extern/nlohmann_json/json.hpp	/^    constexpr bool is_begin() const noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:bool
is_binary	extern/nlohmann_json/json.hpp	/^    constexpr bool is_binary() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_boolean	extern/nlohmann_json/json.hpp	/^    constexpr bool is_boolean() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_c_string	extern/nlohmann_json/json.hpp	/^inline constexpr bool is_c_string()$/;"	f	namespace:detail::impl	typeref:typename:bool
is_c_string	extern/nlohmann_json/json.hpp	/^struct is_c_string : bool_constant<impl::is_c_string<T>()> {};$/;"	s	namespace:detail
is_c_string_uncvref	extern/nlohmann_json/json.hpp	/^using is_c_string_uncvref = is_c_string<uncvref_t<T>>;$/;"	t	namespace:detail	typeref:typename:is_c_string<uncvref_t<T>>
is_comparable	extern/nlohmann_json/json.hpp	/^struct is_comparable : std::false_type {};$/;"	s	namespace:detail
is_comparable	extern/nlohmann_json/json.hpp	/^struct is_comparable<Compare, A, B, void_t<$/;"	s	namespace:detail
is_comparable_with_object_key	extern/nlohmann_json/json.hpp	/^    using is_comparable_with_object_key = detail::is_comparable <$/;"	t	class:basic_json	typeref:typename:detail::is_comparable<object_comparator_t,const typename object_t::key_type &,KeyType>
is_compatible_array_type	extern/nlohmann_json/json.hpp	/^struct is_compatible_array_type$/;"	s	namespace:detail
is_compatible_array_type_impl	extern/nlohmann_json/json.hpp	/^struct is_compatible_array_type_impl : std::false_type {};$/;"	s	namespace:detail
is_compatible_array_type_impl	extern/nlohmann_json/json.hpp	/^struct is_compatible_array_type_impl <$/;"	s	namespace:detail
is_compatible_integer_type	extern/nlohmann_json/json.hpp	/^struct is_compatible_integer_type$/;"	s	namespace:detail
is_compatible_integer_type_impl	extern/nlohmann_json/json.hpp	/^struct is_compatible_integer_type_impl : std::false_type {};$/;"	s	namespace:detail
is_compatible_integer_type_impl	extern/nlohmann_json/json.hpp	/^struct is_compatible_integer_type_impl <$/;"	s	namespace:detail
is_compatible_object_type	extern/nlohmann_json/json.hpp	/^struct is_compatible_object_type$/;"	s	namespace:detail
is_compatible_object_type_impl	extern/nlohmann_json/json.hpp	/^struct is_compatible_object_type_impl : std::false_type {};$/;"	s	namespace:detail
is_compatible_object_type_impl	extern/nlohmann_json/json.hpp	/^struct is_compatible_object_type_impl <$/;"	s	namespace:detail
is_compatible_string_type	extern/nlohmann_json/json.hpp	/^struct is_compatible_string_type$/;"	s	namespace:detail
is_compatible_type	extern/nlohmann_json/json.hpp	/^struct is_compatible_type$/;"	s	namespace:detail
is_compatible_type_impl	extern/nlohmann_json/json.hpp	/^struct is_compatible_type_impl <$/;"	s	namespace:detail
is_compatible_type_impl	extern/nlohmann_json/json.hpp	/^struct is_compatible_type_impl: std::false_type {};$/;"	s	namespace:detail
is_complete_type	extern/nlohmann_json/json.hpp	/^struct is_complete_type : std::false_type {};$/;"	s	namespace:detail
is_complete_type	extern/nlohmann_json/json.hpp	/^struct is_complete_type<T, decltype(void(sizeof(T)))> : std::true_type {};$/;"	s	namespace:detail
is_constructible	extern/nlohmann_json/json.hpp	/^struct is_constructible : std::is_constructible<T, Args...> {};$/;"	s	namespace:detail
is_constructible	extern/nlohmann_json/json.hpp	/^struct is_constructible<const std::pair<T1, T2>> : is_default_constructible<const std::pair<T1, /;"	s	namespace:detail
is_constructible	extern/nlohmann_json/json.hpp	/^struct is_constructible<const std::tuple<Ts...>> : is_default_constructible<const std::tuple<Ts./;"	s	namespace:detail
is_constructible	extern/nlohmann_json/json.hpp	/^struct is_constructible<std::pair<T1, T2>> : is_default_constructible<std::pair<T1, T2>> {};$/;"	s	namespace:detail
is_constructible	extern/nlohmann_json/json.hpp	/^struct is_constructible<std::tuple<Ts...>> : is_default_constructible<std::tuple<Ts...>> {};$/;"	s	namespace:detail
is_constructible_array_type	extern/nlohmann_json/json.hpp	/^struct is_constructible_array_type$/;"	s	namespace:detail
is_constructible_array_type_impl	extern/nlohmann_json/json.hpp	/^struct is_constructible_array_type_impl : std::false_type {};$/;"	s	namespace:detail
is_constructible_array_type_impl	extern/nlohmann_json/json.hpp	/^struct is_constructible_array_type_impl <$/;"	s	namespace:detail
is_constructible_convertible_assignable_from_optional	extern/parallel_hashmap/phmap_base.h	/^struct is_constructible_convertible_assignable_from_optional$/;"	s	namespace:phmap::optional_internal
is_constructible_convertible_from_optional	extern/parallel_hashmap/phmap_base.h	/^struct is_constructible_convertible_from_optional$/;"	s	namespace:phmap::optional_internal
is_constructible_object_type	extern/nlohmann_json/json.hpp	/^struct is_constructible_object_type$/;"	s	namespace:detail
is_constructible_object_type_impl	extern/nlohmann_json/json.hpp	/^struct is_constructible_object_type_impl : std::false_type {};$/;"	s	namespace:detail
is_constructible_object_type_impl	extern/nlohmann_json/json.hpp	/^struct is_constructible_object_type_impl <$/;"	s	namespace:detail
is_constructible_string_type	extern/nlohmann_json/json.hpp	/^struct is_constructible_string_type$/;"	s	namespace:detail
is_constructible_tuple	extern/nlohmann_json/json.hpp	/^struct is_constructible_tuple : std::false_type {};$/;"	s	namespace:detail
is_constructible_tuple	extern/nlohmann_json/json.hpp	/^struct is_constructible_tuple<T1, std::tuple<Args...>> : conjunction<is_constructible<T1, Args>./;"	s	namespace:detail
is_copy_assignable	extern/parallel_hashmap/phmap_base.h	/^struct is_copy_assignable : type_traits_internal::is_detected<$/;"	s	namespace:phmap
is_default_constructible	extern/nlohmann_json/json.hpp	/^struct is_default_constructible : std::is_default_constructible<T> {};$/;"	s	namespace:detail
is_default_constructible	extern/nlohmann_json/json.hpp	/^struct is_default_constructible<const std::pair<T1, T2>>$/;"	s	namespace:detail
is_default_constructible	extern/nlohmann_json/json.hpp	/^struct is_default_constructible<const std::tuple<Ts...>>$/;"	s	namespace:detail
is_default_constructible	extern/nlohmann_json/json.hpp	/^struct is_default_constructible<std::pair<T1, T2>>$/;"	s	namespace:detail
is_default_constructible	extern/nlohmann_json/json.hpp	/^struct is_default_constructible<std::tuple<Ts...>>$/;"	s	namespace:detail
is_detected	extern/nlohmann_json/json.hpp	/^using is_detected = typename detector<nonesuch, void, Op, Args...>::value_t;$/;"	t	namespace:detail	typeref:typename:detector<nonesuch,void,Op,Args...>::value_t
is_detected	extern/parallel_hashmap/phmap_base.h	/^struct is_detected : is_detected_impl<void, Op, Args...>::type {};$/;"	s	namespace:phmap::type_traits_internal
is_detected_convertible	extern/nlohmann_json/json.hpp	/^using is_detected_convertible =$/;"	t	namespace:detail	typeref:typename:std::is_convertible<detected_t<Op,Args...>,To>
is_detected_convertible	extern/parallel_hashmap/phmap_base.h	/^struct is_detected_convertible$/;"	s	namespace:phmap::type_traits_internal
is_detected_convertible_impl	extern/parallel_hashmap/phmap_base.h	/^struct is_detected_convertible_impl {$/;"	s	namespace:phmap::type_traits_internal
is_detected_convertible_impl	extern/parallel_hashmap/phmap_base.h	/^struct is_detected_convertible_impl<$/;"	s	namespace:phmap::type_traits_internal
is_detected_exact	extern/nlohmann_json/json.hpp	/^using is_detected_exact = std::is_same<Expected, detected_t<Op, Args...>>;$/;"	t	namespace:detail	typeref:typename:std::is_same<Expected,detected_t<Op,Args...>>
is_detected_impl	extern/parallel_hashmap/phmap_base.h	/^struct is_detected_impl {$/;"	s	namespace:phmap::type_traits_internal
is_detected_impl	extern/parallel_hashmap/phmap_base.h	/^struct is_detected_impl<typename VoidTImpl<Op<Args...>>::type, Op, Args...> {$/;"	s	namespace:phmap::type_traits_internal
is_detected_lazy	extern/nlohmann_json/json.hpp	/^struct is_detected_lazy : is_detected<Op, Args...> { };$/;"	s	namespace:detail
is_discarded	extern/nlohmann_json/json.hpp	/^    constexpr bool is_discarded() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_end	extern/nlohmann_json/json.hpp	/^    constexpr bool is_end() const noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:bool
is_errored	extern/nlohmann_json/json.hpp	/^    constexpr bool is_errored() const$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
is_errored	extern/nlohmann_json/json.hpp	/^    constexpr bool is_errored() const$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
is_function	extern/parallel_hashmap/btree.h	/^    struct is_function$/;"	s	namespace:phmap
is_getable	extern/nlohmann_json/json.hpp	/^struct is_getable$/;"	s	namespace:detail
is_iterator_begin	extern/nlohmann_json/json.hpp	/^    static constexpr auto is_iterator_begin =$/;"	m	struct:detail::is_range	typeref:typename:auto
is_iterator_of_multibyte	extern/nlohmann_json/json.hpp	/^struct is_iterator_of_multibyte$/;"	s	namespace:detail
is_iterator_traits	extern/nlohmann_json/json.hpp	/^struct is_iterator_traits : std::false_type {};$/;"	s	namespace:detail
is_iterator_traits	extern/nlohmann_json/json.hpp	/^struct is_iterator_traits<iterator_traits<T>>$/;"	s	namespace:detail
is_json_iterator_of	extern/nlohmann_json/json.hpp	/^struct is_json_iterator_of : std::false_type {};$/;"	s	namespace:detail
is_json_iterator_of	extern/nlohmann_json/json.hpp	/^struct is_json_iterator_of<BasicJsonType, typename BasicJsonType::const_iterator> : std::true_ty/;"	s	namespace:detail
is_json_iterator_of	extern/nlohmann_json/json.hpp	/^struct is_json_iterator_of<BasicJsonType, typename BasicJsonType::iterator> : std::true_type {};$/;"	s	namespace:detail
is_json_pointer	extern/nlohmann_json/json.hpp	/^using is_json_pointer = is_specialization_of<::nlohmann::json_pointer, uncvref_t<T>>;$/;"	t	namespace:detail	typeref:typename:is_specialization_of<::nlohmann::json_pointer,uncvref_t<T>>
is_json_ref	extern/nlohmann_json/json.hpp	/^struct is_json_ref : std::false_type {};$/;"	s	namespace:detail
is_json_ref	extern/nlohmann_json/json.hpp	/^struct is_json_ref<json_ref<T>> : std::true_type {};$/;"	s	namespace:detail
is_key_compare_to	extern/parallel_hashmap/btree.h	/^        using is_key_compare_to = btree_is_key_compare_to<key_compare, Key>;$/;"	t	struct:phmap::priv::common_params	typeref:typename:btree_is_key_compare_to<key_compare,Key>
is_key_compare_to	extern/parallel_hashmap/btree.h	/^        using is_key_compare_to = typename Params::is_key_compare_to;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::is_key_compare_to
is_key_compare_to	extern/parallel_hashmap/btree.h	/^        using is_key_compare_to = typename Params::is_key_compare_to;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::is_key_compare_to
is_key_compare_to	extern/parallel_hashmap/btree.h	/^        using is_key_compare_to = typename params_type::is_key_compare_to;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:params_type::is_key_compare_to
is_key_compare_to	extern/parallel_hashmap/btree.h	/^        using is_key_compare_to = typename params_type::is_key_compare_to;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:params_type::is_key_compare_to
is_little_endian	extern/nlohmann_json/json.hpp	/^    const bool is_little_endian = little_endianness();$/;"	m	class:detail::binary_reader	typeref:typename:const bool
is_little_endian	extern/nlohmann_json/json.hpp	/^    const bool is_little_endian = little_endianness();$/;"	m	class:detail::binary_writer	typeref:typename:const bool
is_map_container	extern/parallel_hashmap/btree.h	/^        using is_map_container = std::false_type;$/;"	t	struct:phmap::priv::set_params	typeref:typename:std::false_type
is_map_container	extern/parallel_hashmap/btree.h	/^        using is_map_container = std::true_type;$/;"	t	struct:phmap::priv::map_params	typeref:typename:std::true_type
is_move_assignable	extern/parallel_hashmap/phmap_base.h	/^struct is_move_assignable : type_traits_internal::is_detected<$/;"	s	namespace:phmap
is_multi_container	extern/parallel_hashmap/btree.h	/^        using is_multi_container = std::integral_constant<bool, Multi>;$/;"	t	struct:phmap::priv::common_params	typeref:typename:std::integral_constant<bool,Multi>
is_multi_container	extern/parallel_hashmap/btree.h	/^        using is_multi_container = typename Params::is_multi_container;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::is_multi_container
is_negative_number	extern/nlohmann_json/json.hpp	/^    bool is_negative_number(NumberType \/*unused*\/)$/;"	f	class:detail::serializer	typeref:typename:bool
is_negative_number	extern/nlohmann_json/json.hpp	/^    bool is_negative_number(NumberType x)$/;"	f	class:detail::serializer	typeref:typename:bool
is_null	extern/nlohmann_json/json.hpp	/^    constexpr bool is_null() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number	extern/nlohmann_json/json.hpp	/^    constexpr bool is_number() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number_float	extern/nlohmann_json/json.hpp	/^    constexpr bool is_number_float() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number_integer	extern/nlohmann_json/json.hpp	/^    constexpr bool is_number_integer() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number_unsigned	extern/nlohmann_json/json.hpp	/^    constexpr bool is_number_unsigned() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_object	extern/nlohmann_json/json.hpp	/^    constexpr bool is_object() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_ordered	extern/parallel_hashmap/btree.h	/^        constexpr bool is_ordered() const noexcept {$/;"	f	class:phmap::partial_ordering	typeref:typename:bool
is_ordered_map	extern/nlohmann_json/json.hpp	/^struct is_ordered_map$/;"	s	namespace:detail
is_primitive	extern/nlohmann_json/json.hpp	/^    constexpr bool is_primitive() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_range	extern/nlohmann_json/json.hpp	/^struct is_range$/;"	s	namespace:detail
is_root	extern/parallel_hashmap/btree.h	/^        bool is_root() const { return parent()->leaf(); }$/;"	f	class:phmap::priv::btree_node	typeref:typename:bool
is_sax	extern/nlohmann_json/json.hpp	/^struct is_sax$/;"	s	namespace:detail
is_sax_static_asserts	extern/nlohmann_json/json.hpp	/^struct is_sax_static_asserts$/;"	s	namespace:detail
is_small	extern/parallel_hashmap/phmap.h	/^    bool is_small() const { return capacity_ < Group::kWidth - 1; }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
is_specialization_of	extern/nlohmann_json/json.hpp	/^struct is_specialization_of : std::false_type {};$/;"	s	namespace:detail
is_specialization_of	extern/nlohmann_json/json.hpp	/^struct is_specialization_of<Primary, Primary<Args...>> : std::true_type {};$/;"	s	namespace:detail
is_string	extern/nlohmann_json/json.hpp	/^    constexpr bool is_string() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_structured	extern/nlohmann_json/json.hpp	/^    constexpr bool is_structured() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_transparent	extern/nlohmann_json/json.hpp	/^inline constexpr bool is_transparent()$/;"	f	namespace:detail::impl	typeref:typename:bool
is_transparent	extern/nlohmann_json/json.hpp	/^struct is_transparent : bool_constant<impl::is_transparent<T>()> {};$/;"	s	namespace:detail
is_transparent	extern/parallel_hashmap/btree.h	/^        using is_transparent = void;$/;"	t	struct:phmap::priv::StringBtreeDefaultGreater	typeref:typename:void
is_transparent	extern/parallel_hashmap/btree.h	/^        using is_transparent = void;$/;"	t	struct:phmap::priv::StringBtreeDefaultLess	typeref:typename:void
is_transparent	extern/parallel_hashmap/phmap.h	/^        using is_transparent = void;$/;"	t	struct:phmap::priv::HashEq::Eq	typeref:typename:void
is_transparent	extern/parallel_hashmap/phmap.h	/^        using is_transparent = void;$/;"	t	struct:phmap::priv::HashEq::Hash	typeref:typename:void
is_transparent	extern/parallel_hashmap/phmap.h	/^        using is_transparent = void;$/;"	t	struct:phmap::priv::StringHashEqT::Eq	typeref:typename:void
is_transparent	extern/parallel_hashmap/phmap.h	/^        using is_transparent = void;$/;"	t	struct:phmap::priv::StringHashEqT::Hash	typeref:typename:void
is_trivially_copyable	extern/parallel_hashmap/btree.h	/^        struct is_trivially_copyable$/;"	s	namespace:phmap::type_traits_internal
is_trivially_copyable_impl	extern/parallel_hashmap/btree.h	/^        class is_trivially_copyable_impl {$/;"	c	namespace:phmap::type_traits_internal
is_usable_as_basic_json_key_type	extern/nlohmann_json/json.hpp	/^using is_usable_as_basic_json_key_type = typename std::conditional <$/;"	t	namespace:detail
is_usable_as_key_type	extern/nlohmann_json/json.hpp	/^using is_usable_as_key_type = typename std::conditional <$/;"	t	namespace:detail
istream	.vscode/settings.json	/^        "istream": "cpp",$/;"	s	object:files.associations
it_	extern/parallel_hashmap/phmap.h	/^        EmbeddedIterator it_, it_end_;$/;"	m	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:EmbeddedIterator
it_end_	extern/parallel_hashmap/phmap.h	/^        EmbeddedIterator it_, it_end_;$/;"	m	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:EmbeddedIterator
items	extern/nlohmann_json/json.hpp	/^    JSON_HEDLEY_DEPRECATED_FOR(3.1.0, items())$/;"	f	class:basic_json
items	extern/nlohmann_json/json.hpp	/^    iteration_proxy<const_iterator> items() const noexcept$/;"	f	class:basic_json	typeref:typename:iteration_proxy<const_iterator>
items	extern/nlohmann_json/json.hpp	/^    iteration_proxy<iterator> items() noexcept$/;"	f	class:basic_json	typeref:typename:iteration_proxy<iterator>
iter_	extern/parallel_hashmap/phmap.h	/^        iterator iter_;$/;"	m	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:iterator
iter_impl	extern/nlohmann_json/json.hpp	/^    explicit iter_impl(pointer object) noexcept : m_object(object)$/;"	f	class:detail::iter_impl
iter_impl	extern/nlohmann_json/json.hpp	/^    iter_impl(const iter_impl<const BasicJsonType>& other) noexcept$/;"	f	class:detail::iter_impl
iter_impl	extern/nlohmann_json/json.hpp	/^    iter_impl(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other) noexcept$/;"	f	class:detail::iter_impl
iter_impl	extern/nlohmann_json/json.hpp	/^    using iter_impl = ::nlohmann::detail::iter_impl<BasicJsonType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::iter_impl<BasicJsonType>
iter_impl	extern/nlohmann_json/json.hpp	/^class iter_impl \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member-func/;"	c	namespace:detail
iteration_proxy	extern/nlohmann_json/json.hpp	/^    explicit iteration_proxy(typename IteratorType::reference cont) noexcept$/;"	f	class:detail::iteration_proxy
iteration_proxy	extern/nlohmann_json/json.hpp	/^    using iteration_proxy = ::nlohmann::detail::iteration_proxy<Iterator>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::iteration_proxy<Iterator>
iteration_proxy	extern/nlohmann_json/json.hpp	/^template<typename IteratorType> class iteration_proxy$/;"	c	namespace:detail
iteration_proxy_value	extern/nlohmann_json/json.hpp	/^    explicit iteration_proxy_value(IteratorType it, std::size_t array_index_ = 0)$/;"	f	class:detail::iteration_proxy_value
iteration_proxy_value	extern/nlohmann_json/json.hpp	/^template<typename IteratorType> class iteration_proxy_value$/;"	c	namespace:detail
iterator	.vscode/settings.json	/^        "iterator": "cpp",$/;"	s	object:files.associations
iterator	extern/nlohmann_json/json.hpp	/^    using iterator = detected_t<result_of_begin, t_ref>;$/;"	t	struct:detail::is_range	typeref:typename:detected_t<result_of_begin,t_ref>
iterator	extern/nlohmann_json/json.hpp	/^    using iterator = iter_impl<basic_json>;$/;"	t	class:basic_json	typeref:typename:iter_impl<basic_json>
iterator	extern/nlohmann_json/json.hpp	/^    using iterator = typename Container::iterator;$/;"	t	struct:ordered_map	typeref:typename:Container::iterator
iterator	extern/parallel_hashmap/btree.h	/^        using iterator = btree_iterator<node_type, reference, pointer>;$/;"	t	class:phmap::priv::btree	typeref:typename:btree_iterator<node_type,reference,pointer>
iterator	extern/parallel_hashmap/btree.h	/^        using iterator = typename Tree::iterator;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::iterator
iterator	extern/parallel_hashmap/btree.h	/^        using iterator = typename Tree::iterator;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:Tree::iterator
iterator	extern/parallel_hashmap/btree.h	/^        using iterator = typename Tree::iterator;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:Tree::iterator
iterator	extern/parallel_hashmap/btree.h	/^        using iterator = typename Tree::iterator;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:Tree::iterator
iterator	extern/parallel_hashmap/btree.h	/^        using iterator =$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:btree_iterator<normal_node,normal_reference,normal_pointer>
iterator	extern/parallel_hashmap/phmap.h	/^        iterator() {}$/;"	f	class:phmap::priv::parallel_hash_set::iterator
iterator	extern/parallel_hashmap/phmap.h	/^        iterator() {}$/;"	f	class:phmap::priv::raw_hash_set::iterator
iterator	extern/parallel_hashmap/phmap.h	/^        iterator(Inner *inner, Inner *inner_end, const EmbeddedIterator& it) : $/;"	f	class:phmap::priv::parallel_hash_set::iterator
iterator	extern/parallel_hashmap/phmap.h	/^        iterator(ctrl_t* ctrl) : ctrl_(ctrl) {}  \/\/ for end()$/;"	f	class:phmap::priv::raw_hash_set::iterator
iterator	extern/parallel_hashmap/phmap.h	/^        iterator(ctrl_t* ctrl, slot_type* slot) : ctrl_(ctrl), slot_(slot) {}$/;"	f	class:phmap::priv::raw_hash_set::iterator
iterator	extern/parallel_hashmap/phmap.h	/^    class iterator $/;"	c	class:phmap::priv::parallel_hash_set
iterator	extern/parallel_hashmap/phmap.h	/^    class iterator $/;"	c	class:phmap::priv::raw_hash_set
iterator	extern/parallel_hashmap/phmap.h	/^    using iterator = BitMask;$/;"	t	class:phmap::priv::BitMask	typeref:typename:BitMask
iterator	extern/parallel_hashmap/phmap.h	/^    using iterator = typename parallel_hash_map::parallel_hash_set::iterator;$/;"	t	class:phmap::priv::parallel_hash_map	typeref:typename:parallel_hash_map::parallel_hash_set::iterator
iterator	extern/parallel_hashmap/phmap.h	/^    using iterator = typename raw_hash_map::raw_hash_set::iterator;$/;"	t	class:phmap::priv::raw_hash_map	typeref:typename:raw_hash_map::raw_hash_set::iterator
iterator	extern/parallel_hashmap/phmap_base.h	/^    using iterator = pointer;$/;"	t	class:phmap::Span	typeref:typename:pointer
iterator_at	extern/parallel_hashmap/phmap.h	/^    const_iterator iterator_at(Inner *inner, $/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:const_iterator
iterator_at	extern/parallel_hashmap/phmap.h	/^    const_iterator iterator_at(size_t i) const { return {ctrl_ + i, slots_ + i}; }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:const_iterator
iterator_at	extern/parallel_hashmap/phmap.h	/^    iterator iterator_at(Inner *inner, $/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
iterator_at	extern/parallel_hashmap/phmap.h	/^    iterator iterator_at(size_t i) { return {ctrl_ + i, slots_ + i}; }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
iterator_category	extern/nlohmann_json/json.hpp	/^    using iterator_category = std::bidirectional_iterator_tag;$/;"	t	class:detail::iter_impl	typeref:typename:std::bidirectional_iterator_tag
iterator_category	extern/nlohmann_json/json.hpp	/^    using iterator_category = std::input_iterator_tag;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:std::input_iterator_tag
iterator_category	extern/nlohmann_json/json.hpp	/^    using iterator_category = std::random_access_iterator_tag;$/;"	t	struct:detail::iterator_traits	typeref:typename:std::random_access_iterator_tag
iterator_category	extern/nlohmann_json/json.hpp	/^    using iterator_category = typename It::iterator_category;$/;"	t	struct:detail::iterator_types	typeref:typename:It::iterator_category
iterator_category	extern/parallel_hashmap/btree.h	/^        using iterator_category = std::bidirectional_iterator_tag;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:std::bidirectional_iterator_tag
iterator_category	extern/parallel_hashmap/phmap.h	/^        using iterator_category = std::forward_iterator_tag;$/;"	t	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:std::forward_iterator_tag
iterator_category	extern/parallel_hashmap/phmap.h	/^        using iterator_category = std::forward_iterator_tag;$/;"	t	class:phmap::priv::raw_hash_set::iterator	typeref:typename:std::forward_iterator_tag
iterator_category	extern/parallel_hashmap/phmap.h	/^        using iterator_category = typename iterator::iterator_category;$/;"	t	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:iterator::iterator_category
iterator_category	extern/parallel_hashmap/phmap.h	/^        using iterator_category = typename iterator::iterator_category;$/;"	t	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:iterator::iterator_category
iterator_category_t	extern/nlohmann_json/json.hpp	/^using iterator_category_t = typename T::iterator_category;$/;"	t	namespace:detail	typeref:typename:T::iterator_category
iterator_input_adapter	extern/nlohmann_json/json.hpp	/^    iterator_input_adapter(IteratorType first, IteratorType last)$/;"	f	class:detail::iterator_input_adapter
iterator_input_adapter	extern/nlohmann_json/json.hpp	/^class iterator_input_adapter$/;"	c	namespace:detail
iterator_input_adapter_factory	extern/nlohmann_json/json.hpp	/^struct iterator_input_adapter_factory$/;"	s	namespace:detail
iterator_input_adapter_factory	extern/nlohmann_json/json.hpp	/^struct iterator_input_adapter_factory<IteratorType, enable_if_t<is_iterator_of_multibyte<Iterato/;"	s	namespace:detail
iterator_t	extern/nlohmann_json/json.hpp	/^using iterator_t = enable_if_t<is_range<R>::value, result_of_begin<decltype(std::declval<R&>())>/;"	t	namespace:detail
iterator_traits	extern/nlohmann_json/json.hpp	/^struct iterator_traits < T, enable_if_t < !std::is_pointer<T>::value >>$/;"	s	namespace:detail
iterator_traits	extern/nlohmann_json/json.hpp	/^struct iterator_traits$/;"	s	namespace:detail
iterator_traits	extern/nlohmann_json/json.hpp	/^struct iterator_traits<T*, enable_if_t<std::is_object<T>::value>>$/;"	s	namespace:detail
iterator_type	extern/nlohmann_json/json.hpp	/^    using iterator_type = IteratorType;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:IteratorType
iterator_types	extern/nlohmann_json/json.hpp	/^struct iterator_types <$/;"	s	namespace:detail
iterator_types	extern/nlohmann_json/json.hpp	/^struct iterator_types {};$/;"	s	namespace:detail
json	extern/nlohmann_json/json.hpp	/^    using json = basic_json<>;$/;"	t	typeref:typename:basic_json<>
json	extern/nlohmann_json/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
json_literals	extern/nlohmann_json/json.hpp	/^inline namespace json_literals$/;"	n	namespace:literals
json_pointer	extern/nlohmann_json/json.hpp	/^    explicit json_pointer(const string_t& s = "")$/;"	f	class:json_pointer
json_pointer	extern/nlohmann_json/json.hpp	/^    using json_pointer = ::nlohmann::json_pointer<StringType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::json_pointer<StringType>
json_pointer	extern/nlohmann_json/json.hpp	/^class json_pointer$/;"	c
json_ref	extern/nlohmann_json/json.hpp	/^    json_ref(Args && ... args)$/;"	f	class:detail::json_ref
json_ref	extern/nlohmann_json/json.hpp	/^    json_ref(const value_type& value)$/;"	f	class:detail::json_ref
json_ref	extern/nlohmann_json/json.hpp	/^    json_ref(std::initializer_list<json_ref> init)$/;"	f	class:detail::json_ref
json_ref	extern/nlohmann_json/json.hpp	/^    json_ref(value_type&& value)$/;"	f	class:detail::json_ref
json_ref	extern/nlohmann_json/json.hpp	/^class json_ref$/;"	c	namespace:detail
json_reverse_iterator	extern/nlohmann_json/json.hpp	/^    explicit json_reverse_iterator(const base_iterator& it) noexcept : base_iterator(it) {}$/;"	f	class:detail::json_reverse_iterator
json_reverse_iterator	extern/nlohmann_json/json.hpp	/^    explicit json_reverse_iterator(const typename base_iterator::iterator_type& it) noexcept$/;"	f	class:detail::json_reverse_iterator
json_reverse_iterator	extern/nlohmann_json/json.hpp	/^    template<typename Base> using json_reverse_iterator = ::nlohmann::detail::json_reverse_itera/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::json_reverse_iterator<Base>
json_reverse_iterator	extern/nlohmann_json/json.hpp	/^class json_reverse_iterator : public std::reverse_iterator<Base>$/;"	c	namespace:detail
json_sax	extern/nlohmann_json/json.hpp	/^struct json_sax$/;"	s
json_sax_acceptor	extern/nlohmann_json/json.hpp	/^class json_sax_acceptor$/;"	c	namespace:detail
json_sax_dom_callback_parser	extern/nlohmann_json/json.hpp	/^    json_sax_dom_callback_parser(BasicJsonType& r,$/;"	f	class:detail::json_sax_dom_callback_parser
json_sax_dom_callback_parser	extern/nlohmann_json/json.hpp	/^class json_sax_dom_callback_parser$/;"	c	namespace:detail
json_sax_dom_parser	extern/nlohmann_json/json.hpp	/^    explicit json_sax_dom_parser(BasicJsonType& r, const bool allow_exceptions_ = true)$/;"	f	class:detail::json_sax_dom_parser
json_sax_dom_parser	extern/nlohmann_json/json.hpp	/^class json_sax_dom_parser$/;"	c	namespace:detail
json_sax_t	extern/nlohmann_json/json.hpp	/^    using json_sax_t = SAX;$/;"	t	class:detail::binary_reader	typeref:typename:SAX
json_sax_t	extern/nlohmann_json/json.hpp	/^    using json_sax_t = json_sax<basic_json>;$/;"	t	class:basic_json	typeref:typename:json_sax<basic_json>
json_serializer	extern/nlohmann_json/json.hpp	/^    using json_serializer = JSONSerializer<T, SFINAE>;$/;"	t	class:basic_json	typeref:typename:JSONSerializer<T,SFINAE>
json_value	extern/nlohmann_json/json.hpp	/^        json_value(array_t&& value) : array(create<array_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(binary_t&& value) : binary(create<binary_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(boolean_t v) noexcept : boolean(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(const array_t& value) : array(create<array_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(const binary_t& value) : binary(create<binary_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(const object_t& value) : object(create<object_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(const string_t& value) : string(create<string_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(const typename binary_t::container_type& value) : binary(create<binary_t>(val/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(number_float_t v) noexcept : number_float(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(number_integer_t v) noexcept : number_integer(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(number_unsigned_t v) noexcept : number_unsigned(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(object_t&& value) : object(create<object_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(string_t&& value) : string(create<string_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(typename binary_t::container_type&& value) : binary(create<binary_t>(std::mov/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^        json_value(value_t t)$/;"	f	union:basic_json::json_value
json_value	extern/nlohmann_json/json.hpp	/^    union json_value$/;"	u	class:basic_json
k	extern/nlohmann_json/json.hpp	/^    int k;$/;"	m	struct:detail::dtoa_impl::cached_power	typeref:typename:int
kAlpha	extern/nlohmann_json/json.hpp	/^constexpr int kAlpha = -60;$/;"	v	namespace:detail::dtoa_impl	typeref:typename:int
kDeleted	extern/parallel_hashmap/phmap.h	/^    kDeleted = -2,   \/\/ 0b11111110 or 0xfe$/;"	e	enum:phmap::priv::Ctrl
kEmpty	extern/parallel_hashmap/phmap.h	/^    kEmpty = -128,   \/\/ 0b10000000 or 0x80$/;"	e	enum:phmap::priv::Ctrl
kEq	extern/parallel_hashmap/btree.h	/^    enum class MatchKind : uint8_t { kEq, kNe };$/;"	e	enum:phmap::priv::MatchKind
kFirst	extern/parallel_hashmap/phmap_base.h	/^    static constexpr size_t kFirst = (size_t)-1;$/;"	m	struct:phmap::priv::memory_internal::OffsetOf	typeref:typename:size_t
kFirst	extern/parallel_hashmap/phmap_base.h	/^    static constexpr size_t kFirst = offsetof(Pair, first);$/;"	m	struct:phmap::priv::memory_internal::OffsetOf	typeref:typename:size_t
kGamma	extern/nlohmann_json/json.hpp	/^constexpr int kGamma = -32;$/;"	v	namespace:detail::dtoa_impl	typeref:typename:int
kInternalNodeMaxCount	extern/parallel_hashmap/btree.h	/^            kInternalNodeMaxCount = 0,$/;"	e	enum:phmap::priv::btree_node::__anon75002caf0203
kIsCopyOrMoveAssignable	extern/parallel_hashmap/btree.h	/^            static constexpr bool kIsCopyOrMoveAssignable =$/;"	m	class:phmap::type_traits_internal::is_trivially_copyable_impl	typeref:typename:bool
kIsCopyOrMoveConstructible	extern/parallel_hashmap/btree.h	/^            static constexpr bool kIsCopyOrMoveConstructible =$/;"	m	class:phmap::type_traits_internal::is_trivially_copyable_impl	typeref:typename:bool
kMinNodeValues	extern/parallel_hashmap/btree.h	/^            kMinNodeValues = kNodeValues \/ 2,$/;"	e	enum:phmap::priv::btree::__anon75002caf0303
kMutableKeys	extern/parallel_hashmap/phmap_base.h	/^    using kMutableKeys = memory_internal::IsLayoutCompatible<K, V>;$/;"	t	struct:phmap::priv::map_slot_policy	typeref:typename:memory_internal::IsLayoutCompatible<K,V>
kNe	extern/parallel_hashmap/btree.h	/^    enum class MatchKind : uint8_t { kEq, kNe };$/;"	e	enum:phmap::priv::MatchKind
kNodeSlotSpace	extern/parallel_hashmap/btree.h	/^            kNodeSlotSpace =$/;"	e	enum:phmap::priv::common_params::__anon75002caf0103
kNodeTargetValues	extern/parallel_hashmap/btree.h	/^            kNodeTargetValues = NodeTargetValues(0, params_type::kTargetNodeSize),$/;"	e	enum:phmap::priv::btree_node::__anon75002caf0203
kNodeValues	extern/parallel_hashmap/btree.h	/^            kNodeValues = kNodeTargetValues >= 3 ? kNodeTargetValues : 3,$/;"	e	enum:phmap::priv::btree_node::__anon75002caf0203
kNodeValues	extern/parallel_hashmap/btree.h	/^            kNodeValues = node_type::kNodeValues,$/;"	e	enum:phmap::priv::btree::__anon75002caf0303
kPrecision	extern/nlohmann_json/json.hpp	/^    static constexpr int kPrecision = 64; \/\/ = q$/;"	m	struct:detail::dtoa_impl::diyfp	typeref:typename:int
kSecond	extern/parallel_hashmap/phmap_base.h	/^    static constexpr size_t kSecond = offsetof(Pair, second);$/;"	m	struct:phmap::priv::memory_internal::OffsetOf	typeref:typename:size_t
kSecond	extern/parallel_hashmap/phmap_base.h	/^  static constexpr size_t kSecond = (size_t)-1;$/;"	m	struct:phmap::priv::memory_internal::OffsetOf	typeref:typename:size_t
kSentinel	extern/parallel_hashmap/phmap.h	/^    kSentinel = -1,  \/\/ 0b11111111 or 0xff$/;"	e	enum:phmap::priv::Ctrl
kTargetNodeSize	extern/parallel_hashmap/btree.h	/^            kTargetNodeSize = TargetNodeSize,$/;"	e	enum:phmap::priv::common_params::__anon75002caf0103
kTargetNodeSize	extern/parallel_hashmap/btree.h	/^            kTargetNodeSize = params_type::kTargetNodeSize,$/;"	e	enum:phmap::priv::btree_node::__anon75002caf0203
kValue	extern/parallel_hashmap/btree.h	/^            static constexpr bool kValue =$/;"	m	class:phmap::type_traits_internal::is_trivially_copyable_impl	typeref:typename:bool
kWidth	extern/parallel_hashmap/phmap.h	/^    enum { kWidth = 16 };  \/\/ the number of slots per group$/;"	e	enum:phmap::priv::GroupSse2Impl::__anon8e551a730103
kWidth	extern/parallel_hashmap/phmap.h	/^    enum { kWidth = 8 };$/;"	e	enum:phmap::priv::GroupPortableImpl::__anon8e551a730203
keep_stack	extern/nlohmann_json/json.hpp	/^    std::vector<bool> keep_stack {};$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:std::vector<bool>
kernel	examples/hicr/meson.build	/^subdir('kernel')$/;"	S
key	extern/nlohmann_json/json.hpp	/^    auto key() const -> decltype(std::declval<Base>().key())$/;"	f	class:detail::json_reverse_iterator	typeref:typename:decltype(std::declval<Base> ().key ())
key	extern/nlohmann_json/json.hpp	/^    bool key(string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
key	extern/nlohmann_json/json.hpp	/^    bool key(string_t& val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
key	extern/nlohmann_json/json.hpp	/^    bool key(string_t& val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
key	extern/nlohmann_json/json.hpp	/^    const string_type& key() const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:const string_type &
key	extern/nlohmann_json/json.hpp	/^    const typename object_t::key_type& key() const$/;"	f	class:detail::iter_impl	typeref:typename:const typename object_t::key_type &
key	extern/nlohmann_json/json.hpp	/^    key,$/;"	e	enum:detail::parse_event_t
key	extern/parallel_hashmap/btree.h	/^        const key_type &key() const { return node->key(position); }$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:const key_type &
key	extern/parallel_hashmap/btree.h	/^        const key_type &key(size_type i) const { return params_type::key(slot(i)); }$/;"	f	class:phmap::priv::btree_node	typeref:typename:const key_type &
key	extern/parallel_hashmap/btree.h	/^        static const Key &key(const init_type &x) { return x.first; }$/;"	f	struct:phmap::priv::map_params	typeref:typename:const Key &
key	extern/parallel_hashmap/btree.h	/^        static const Key &key(const slot_type *x) { return *x; }$/;"	f	struct:phmap::priv::set_params	typeref:typename:const Key &
key	extern/parallel_hashmap/btree.h	/^        static const Key &key(const slot_type *x) { return slot_policy::key(x); }$/;"	f	struct:phmap::priv::map_params	typeref:typename:const Key &
key	extern/parallel_hashmap/btree.h	/^        static const Key &key(const value_type &x) { return x.first; }$/;"	f	struct:phmap::priv::map_params	typeref:typename:const Key &
key	extern/parallel_hashmap/btree.h	/^        static const Key &key(const value_type &x) { return x; }$/;"	f	struct:phmap::priv::set_params	typeref:typename:const Key &
key	extern/parallel_hashmap/phmap_base.h	/^    K key;$/;"	m	union:phmap::priv::map_slot_type	typeref:typename:K
key	extern/parallel_hashmap/phmap_base.h	/^    auto key() const -> decltype(PolicyTraits::key(this->slot())) {$/;"	f	class:phmap::priv::node_handle	typeref:typename:decltype(PolicyTraits::key (this->slot ()))
key	extern/parallel_hashmap/phmap_base.h	/^    static auto key(slot_type* slot)$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:decltype(P::apply (ReturnKey (),element (slot)))
key	extern/parallel_hashmap/phmap_base.h	/^    static const K& key(const slot_type* slot) {$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:const K &
key	extern/parallel_hashmap/phmap_base.h	/^    value_type& key() const { return PolicyTraits::element(this->slot()); }$/;"	f	class:phmap::priv::node_handle	typeref:typename:value_type &
key	tests/backends/host/coroutine.cpp	/^static pthread_key_t key;$/;"	v	typeref:typename:pthread_key_t	file:
key_arg	extern/parallel_hashmap/btree.h	/^        using key_arg = typename super_type::template key_arg<K>;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:super_type::template key_arg<K>
key_arg	extern/parallel_hashmap/btree.h	/^        using key_arg = typename super_type::template key_arg<K>;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:super_type::template key_arg<K>
key_arg	extern/parallel_hashmap/btree.h	/^        using key_arg = typename super_type::template key_arg<K>;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:super_type::template key_arg<K>
key_arg	extern/parallel_hashmap/btree.h	/^        using key_arg =$/;"	t	class:phmap::priv::btree_container	typeref:typename:KeyArg<IsTransparent<typename Tree::key_compare>::value>::template type<K,typename Tree::key_type>
key_arg	extern/parallel_hashmap/phmap.h	/^    using key_arg         = typename KeyArgImpl::template type<K, key_type>;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:KeyArgImpl::template type<K,key_type>
key_arg	extern/parallel_hashmap/phmap.h	/^    using key_arg = typename KeyArgImpl::template type<K, key_type>;$/;"	t	class:phmap::priv::parallel_hash_map	typeref:typename:KeyArgImpl::template type<K,key_type>
key_arg	extern/parallel_hashmap/phmap.h	/^    using key_arg = typename KeyArgImpl::template type<K, key_type>;$/;"	t	class:phmap::priv::raw_hash_map	typeref:typename:KeyArgImpl::template type<K,key_type>
key_arg	extern/parallel_hashmap/phmap.h	/^    using key_arg = typename KeyArgImpl::template type<K, key_type>;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:KeyArgImpl::template type<K,key_type>
key_comp	extern/parallel_hashmap/btree.h	/^        const key_compare &key_comp() const noexcept {$/;"	f	class:phmap::priv::btree	typeref:typename:const key_compare &
key_comp	extern/parallel_hashmap/btree.h	/^        key_compare key_comp() const { return tree_.key_comp(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:key_compare
key_compare	extern/nlohmann_json/json.hpp	/^    using key_compare = std::equal_to<>;$/;"	t	struct:ordered_map	typeref:typename:std::equal_to<>
key_compare	extern/nlohmann_json/json.hpp	/^    using key_compare = std::equal_to<Key>;$/;"	t	struct:ordered_map	typeref:typename:std::equal_to<Key>
key_compare	extern/parallel_hashmap/btree.h	/^        using key_compare = typename Params::key_compare;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::key_compare
key_compare	extern/parallel_hashmap/btree.h	/^        using key_compare = typename Params::key_compare;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::key_compare
key_compare	extern/parallel_hashmap/btree.h	/^        using key_compare = typename Tree::key_compare;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::key_compare
key_compare	extern/parallel_hashmap/btree.h	/^        using key_compare = typename Tree::key_compare;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:Tree::key_compare
key_compare	extern/parallel_hashmap/btree.h	/^        using key_compare = typename Tree::key_compare;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:Tree::key_compare
key_compare	extern/parallel_hashmap/btree.h	/^        using key_compare = typename Tree::key_compare;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:Tree::key_compare
key_compare	extern/parallel_hashmap/btree.h	/^        using key_compare = typename key_compare_to_adapter<Compare>::type;$/;"	t	struct:phmap::priv::common_params	typeref:typename:key_compare_to_adapter<Compare>::type
key_compare	extern/parallel_hashmap/btree.h	/^        using key_compare = typename super_type::key_compare;$/;"	t	struct:phmap::priv::map_params	typeref:typename:super_type::key_compare
key_compare_to_adapter	extern/parallel_hashmap/btree.h	/^    struct key_compare_to_adapter {$/;"	s	namespace:phmap::priv
key_compare_to_adapter	extern/parallel_hashmap/btree.h	/^    struct key_compare_to_adapter<phmap::Less<std::string>> {$/;"	s	namespace:phmap::priv
key_compare_to_adapter	extern/parallel_hashmap/btree.h	/^    struct key_compare_to_adapter<phmap::Less<std::string_view>> {$/;"	s	namespace:phmap::priv
key_compare_to_adapter	extern/parallel_hashmap/btree.h	/^    struct key_compare_to_adapter<std::greater<std::string>> {$/;"	s	namespace:phmap::priv
key_compare_to_adapter	extern/parallel_hashmap/btree.h	/^    struct key_compare_to_adapter<std::greater<std::string_view>> {$/;"	s	namespace:phmap::priv
key_compare_to_adapter	extern/parallel_hashmap/btree.h	/^    struct key_compare_to_adapter<std::less<std::string>> {$/;"	s	namespace:phmap::priv
key_compare_to_adapter	extern/parallel_hashmap/btree.h	/^    struct key_compare_to_adapter<std::less<std::string_view>> {$/;"	s	namespace:phmap::priv
key_eq	extern/parallel_hashmap/phmap.h	/^    key_equal key_eq() const { return eq_ref(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:key_equal
key_eq	extern/parallel_hashmap/phmap.h	/^    key_equal key_eq() const { return eq_ref(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:key_equal
key_equal	extern/parallel_hashmap/phmap.h	/^    using key_equal       = Eq;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:Eq
key_equal	extern/parallel_hashmap/phmap.h	/^    using key_equal = Eq;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:Eq
key_function_t	extern/nlohmann_json/json.hpp	/^using key_function_t =$/;"	t	namespace:detail
key_keep_stack	extern/nlohmann_json/json.hpp	/^    std::vector<bool> key_keep_stack {};$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:std::vector<bool>
key_once	tests/backends/host/coroutine.cpp	/^static pthread_once_t key_once = PTHREAD_ONCE_INIT;$/;"	v	typeref:typename:pthread_once_t	file:
key_type	extern/nlohmann_json/json.hpp	/^    using key_type = Key;$/;"	t	struct:ordered_map	typeref:typename:Key
key_type	extern/parallel_hashmap/btree.h	/^        using key_type = Key;$/;"	t	struct:phmap::priv::common_params	typeref:typename:Key
key_type	extern/parallel_hashmap/btree.h	/^        using key_type = typename Node::key_type;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:Node::key_type
key_type	extern/parallel_hashmap/btree.h	/^        using key_type = typename Params::key_type;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::key_type
key_type	extern/parallel_hashmap/btree.h	/^        using key_type = typename Params::key_type;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::key_type
key_type	extern/parallel_hashmap/btree.h	/^        using key_type = typename Tree::key_type;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::key_type
key_type	extern/parallel_hashmap/btree.h	/^        using key_type = typename Tree::key_type;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:Tree::key_type
key_type	extern/parallel_hashmap/btree.h	/^        using key_type = typename Tree::key_type;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:Tree::key_type
key_type	extern/parallel_hashmap/btree.h	/^        using key_type = typename Tree::key_type;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:Tree::key_type
key_type	extern/parallel_hashmap/phmap.h	/^    using key_type        = typename PolicyTraits::key_type;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:PolicyTraits::key_type
key_type	extern/parallel_hashmap/phmap.h	/^    using key_type    = typename Policy::key_type;$/;"	t	class:phmap::priv::parallel_hash_map	typeref:typename:Policy::key_type
key_type	extern/parallel_hashmap/phmap.h	/^    using key_type = K;$/;"	t	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:K
key_type	extern/parallel_hashmap/phmap.h	/^    using key_type = Key;$/;"	t	class:phmap::priv::NodeHashMapPolicy	typeref:typename:Key
key_type	extern/parallel_hashmap/phmap.h	/^    using key_type = T;$/;"	t	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:T
key_type	extern/parallel_hashmap/phmap.h	/^    using key_type = T;$/;"	t	struct:phmap::priv::NodeHashSetPolicy	typeref:typename:T
key_type	extern/parallel_hashmap/phmap.h	/^    using key_type = typename Policy::key_type;$/;"	t	class:phmap::priv::raw_hash_map	typeref:typename:Policy::key_type
key_type	extern/parallel_hashmap/phmap.h	/^    using key_type = typename PolicyTraits::key_type;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:PolicyTraits::key_type
key_type	extern/parallel_hashmap/phmap_base.h	/^    using key_type   = typename Policy::key_type;$/;"	t	struct:phmap::priv::hash_policy_traits	typeref:typename:Policy::key_type
key_type	extern/parallel_hashmap/phmap_base.h	/^    using key_type = typename Policy::key_type;$/;"	t	class:phmap::priv::node_handle	typeref:typename:Policy::key_type
key_type_t	extern/nlohmann_json/json.hpp	/^using key_type_t = typename T::key_type;$/;"	t	namespace:detail	typeref:typename:T::key_type
keywords	extern/doxygen-awesome-css/package.json	/^  "keywords": [$/;"	a
label.main-menu-btn ~ #searchBoxPos1	extern/doxygen-awesome-css/doxygen-awesome.css	/^    label.main-menu-btn ~ #searchBoxPos1 {$/;"	i
label.main-menu-btn ~ #searchBoxPos1 > #MSearchBox	extern/doxygen-awesome-css/doxygen-awesome.css	/^    label.main-menu-btn ~ #searchBoxPos1 > #MSearchBox {$/;"	i
label_t	include/frontends/tasking/task.hpp	/^  typedef uint64_t label_t;$/;"	t	class:HiCR::tasking::Task	typeref:typename:uint64_t
last	extern/parallel_hashmap/phmap_base.h	/^    constexpr Span last(size_type len) const {$/;"	f	class:phmap::Span	typeref:typename:Span
last_token	extern/nlohmann_json/json.hpp	/^    token_type last_token = token_type::uninitialized;$/;"	m	class:detail::parser	typeref:typename:token_type
launchRPC	include/backends/mpi/L1/instanceManager.hpp	/^  __USED__ inline void launchRPC(HiCR::L0::Instance &instance, const std::string &RPCTargetName)/;"	f	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:__USED__ void
launchWrapper	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ inline static void *launchWrapper(void *p)$/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ void *
laundered_type	extern/nlohmann_json/json.hpp	/^    using laundered_type = decltype(std::declval<ConstructibleStringType>());$/;"	t	struct:detail::is_constructible_string_type
layout_type	extern/parallel_hashmap/btree.h	/^        using layout_type = phmap::priv::Layout<btree_node *, field_type,$/;"	t	class:phmap::priv::btree_node	typeref:typename:phmap::priv::Layout<btree_node *,field_type,slot_type,btree_node * >
lazy_emplace	extern/parallel_hashmap/phmap.h	/^    iterator lazy_emplace(const key_arg<K>& key, F&& f) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
lazy_emplace	extern/parallel_hashmap/phmap.h	/^    iterator lazy_emplace(const key_arg<K>& key, F&& f) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
lazy_emplace_at	extern/parallel_hashmap/phmap.h	/^    void lazy_emplace_at(size_t& idx, F&& f) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
lazy_emplace_l	extern/parallel_hashmap/phmap.h	/^    bool lazy_emplace_l(const key_arg<K>& key, FExists&& fExists, FEmplace&& fEmplace) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
lazy_emplace_with_hash	extern/parallel_hashmap/phmap.h	/^    iterator lazy_emplace_with_hash(const key_arg<K>& key, size_t hashval, F&& f) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
lazy_emplace_with_hash	extern/parallel_hashmap/phmap.h	/^    iterator lazy_emplace_with_hash(const key_arg<K>& key, size_t hashval, F&& f) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:iterator
leaf	extern/parallel_hashmap/btree.h	/^        bool leaf() const { return GetField<1>()[3] != kInternalNodeMaxCount; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:bool
leaf_nodes	extern/parallel_hashmap/btree.h	/^            size_type leaf_nodes;$/;"	m	struct:phmap::priv::btree::node_stats	typeref:typename:size_type
leaf_nodes	extern/parallel_hashmap/btree.h	/^        size_type leaf_nodes() const {$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
leftmost	extern/parallel_hashmap/btree.h	/^        const node_type *leftmost() const { return root()->parent(); }$/;"	f	class:phmap::priv::btree	typeref:typename:const node_type *
leftmost	extern/parallel_hashmap/btree.h	/^        node_type *leftmost() { return root()->parent(); }$/;"	f	class:phmap::priv::btree	typeref:typename:node_type *
len_	extern/parallel_hashmap/phmap_base.h	/^    size_type len_;$/;"	m	class:phmap::Span	typeref:typename:size_type
length	extern/parallel_hashmap/phmap_base.h	/^    constexpr size_type length() const noexcept { return size(); }$/;"	f	class:phmap::Span	typeref:typename:size_type
less	extern/nlohmann_json/json.hpp	/^struct less< ::nlohmann::detail::value_t> \/\/ do not remove the space after '<', see https:\/\//;"	s	namespace:std
less	extern/parallel_hashmap/btree.h	/^        enum class ord : value_type { less = -1, greater = 1 };$/;"	e	enum:phmap::compare_internal::ord
lexer	extern/nlohmann_json/json.hpp	/^    explicit lexer(InputAdapterType&& adapter, bool ignore_comments_ = false) noexcept$/;"	f	class:detail::lexer
lexer	extern/nlohmann_json/json.hpp	/^    using lexer = ::nlohmann::detail::lexer_base<basic_json>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::lexer_base<basic_json>
lexer	extern/nlohmann_json/json.hpp	/^class lexer : public lexer_base<BasicJsonType>$/;"	c	namespace:detail
lexer_base	extern/nlohmann_json/json.hpp	/^class lexer_base$/;"	c	namespace:detail
lexer_t	extern/nlohmann_json/json.hpp	/^    using lexer_t = lexer<BasicJsonType, InputAdapterType>;$/;"	t	class:detail::parser	typeref:typename:lexer<BasicJsonType,InputAdapterType>
li.navelem	extern/doxygen-awesome-css/doxygen-awesome.css	/^li.navelem {$/;"	c
li.navelem:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^li.navelem:first-child {$/;"	c
li.navelem:first-child:before	extern/doxygen-awesome-css/doxygen-awesome.css	/^li.navelem:first-child:before {$/;"	c
lib_lpfcore	include/backends/lpf/meson.build	/^lib_lpfcore = cc.find_library('lpf_core_univ_ibverbs_generic')$/;"	V
lib_lpfhl	include/backends/lpf/meson.build	/^lib_lpfhl = cc.find_library('lpf_hl')$/;"	V
license	extern/doxygen-awesome-css/package.json	/^  "license": "MIT",$/;"	s
lightModeIcon	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static lightModeIcon = `<svg xmlns="http:\/\/www.w3.org\/2000\/svg" enable-background="new 0/;"	M	class:DoxygenAwesomeDarkModeToggle
limits	.vscode/settings.json	/^        "limits": "cpp",$/;"	s	object:files.associations
linear_search	extern/parallel_hashmap/btree.h	/^        linear_search(const K &k, const Compare &comp) const {$/;"	f	class:phmap::priv::btree_node	typeref:typename:SearchResult<int,btree_is_key_compare_to<Compare,key_type>::value>
linear_search_impl	extern/parallel_hashmap/btree.h	/^        SearchResult<int, false> linear_search_impl($/;"	f	class:phmap::priv::btree_node	typeref:typename:SearchResult<int,false>
linear_search_impl	extern/parallel_hashmap/btree.h	/^        SearchResult<int, true> linear_search_impl($/;"	f	class:phmap::priv::btree_node	typeref:typename:SearchResult<int,true>
lines_read	extern/nlohmann_json/json.hpp	/^    std::size_t lines_read = 0;$/;"	m	struct:detail::position_t	typeref:typename:std::size_t
list	.vscode/settings.json	/^        "list": "cpp",$/;"	s	object:files.associations
list_files	extern/run-clang-format/run-clang-format.py	/^def list_files(files, recursive=False, extensions=None, exclude=None):$/;"	f
listen	include/hicr/L1/instanceManager.hpp	/^  __USED__ inline void listen()$/;"	f	class:HiCR::L1::InstanceManager	typeref:typename:__USED__ void
listenImpl	include/backends/mpi/L1/instanceManager.hpp	/^  __USED__ inline void listenImpl() override$/;"	f	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:__USED__ void
literal_false	extern/nlohmann_json/json.hpp	/^        literal_false,    \/\/\/< the `false` literal$/;"	e	enum:detail::lexer_base::token_type
literal_null	extern/nlohmann_json/json.hpp	/^        literal_null,     \/\/\/< the `null` literal$/;"	e	enum:detail::lexer_base::token_type
literal_or_value	extern/nlohmann_json/json.hpp	/^        literal_or_value  \/\/\/< a literal or the begin of a value (only for diagnostics)$/;"	e	enum:detail::lexer_base::token_type
literal_true	extern/nlohmann_json/json.hpp	/^        literal_true,     \/\/\/< the `true` literal$/;"	e	enum:detail::lexer_base::token_type
literals	extern/nlohmann_json/json.hpp	/^inline namespace literals$/;"	n
little_endian	extern/parallel_hashmap/phmap_bits.h	/^namespace little_endian {$/;"	n	namespace:phmap
little_endianness	extern/nlohmann_json/json.hpp	/^static inline bool little_endianness(int num = 1) noexcept$/;"	f	namespace:detail	typeref:typename:bool
load	extern/parallel_hashmap/phmap_dump.h	/^    void load(typename std::enable_if<PhmapTrivCopyable<K>::value && PhmapTrivCopyable<V>::value/;"	f	namespace:cereal	typeref:typename:void
load	extern/parallel_hashmap/phmap_dump.h	/^    void load(typename std::enable_if<PhmapTrivCopyable<K>::value, typename cereal::BinaryInputA/;"	f	namespace:cereal	typeref:typename:void
loadBinary	extern/parallel_hashmap/phmap_dump.h	/^    auto loadBinary(Map* v) -> decltype(v->phmap_load(*this), bool())$/;"	f	class:phmap::BinaryInputArchive	typeref:typename:decltype(v->phmap_load (* this),bool ())
loadBinary	extern/parallel_hashmap/phmap_dump.h	/^    bool loadBinary(void* p, size_t sz) {$/;"	f	class:phmap::BinaryInputArchive	typeref:typename:bool
loadBinary	extern/parallel_hashmap/phmap_dump.h	/^    loadBinary(V* v) {$/;"	f	class:phmap::BinaryInputArchive	typeref:typename:std::enable_if<type_traits_internal::IsTriviallyCopyable<V>::value,bool>::type
loadKernel	include/backends/ascend/computationKernel.hpp	/^  __USED__ inline void loadKernel(const std::string kernelPath)$/;"	f	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:__USED__ void
loadMachineModelFromFile	examples/runtime/source/include/machineModel.hpp	/^std::vector<HiCR::MachineModel::request_t> loadMachineModelFromFile(const std::string &machineMo/;"	f	typeref:typename:std::vector<HiCR::MachineModel::request_t>
loadStringFromFile	examples/machineModel/source/include/common.hpp	/^inline bool loadStringFromFile(std::string &dst, const std::string fileName)$/;"	f	typeref:typename:bool
loadStringFromFile	examples/runtime/source/include/machineModel.hpp	/^inline bool loadStringFromFile(std::string &dst, const std::string fileName)$/;"	f	typeref:typename:bool
load_factor	extern/parallel_hashmap/phmap.h	/^    float load_factor() const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:float
load_factor	extern/parallel_hashmap/phmap.h	/^    float load_factor() const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:float
loc	extern/nlohmann_json/json.hpp	/^    const std::lconv* loc = nullptr;$/;"	m	class:detail::serializer	typeref:typename:const std::lconv *
lock	extern/parallel_hashmap/phmap_base.h	/^        void lock()            { this->Lock(); }$/;"	f	struct:phmap::AbslMutex	typeref:typename:void
lock	extern/parallel_hashmap/phmap_base.h	/^        void lock() { $/;"	f	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:void
lock	extern/parallel_hashmap/phmap_base.h	/^        void lock() { $/;"	f	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:void
lock	extern/parallel_hashmap/phmap_base.h	/^    void lock() {}$/;"	f	class:phmap::NullMutex	typeref:typename:void
lock	include/backends/host/L0/globalMemorySlot.hpp	/^  __USED__ inline void lock() { _mutex.lock(); }$/;"	f	class:HiCR::backend::host::L0::GlobalMemorySlot	typeref:typename:__USED__ void
lock	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void lock() override$/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
lock	include/hicr/L1/communicationManager.hpp	/^  virtual void lock(){};$/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:void
lockFreeQueue_t	include/hicr/common/concurrentQueue.hpp	/^using lockFreeQueue_t = atomic_queue::AtomicQueue<T, N, (T)NULL>;$/;"	t	namespace:HiCR::common
lockMPIWindow	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void lockMPIWindow(const int rank, MPI_Win *window, int MPILockType, int MPIAs/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
lock_shared	extern/parallel_hashmap/phmap_base.h	/^        void lock_shared()     { this->ReaderLock(); }$/;"	f	struct:phmap::AbslMutex	typeref:typename:void
lock_shared	extern/parallel_hashmap/phmap_base.h	/^    void lock_shared() {}$/;"	f	class:phmap::NullMutex	typeref:typename:void
locked_	extern/parallel_hashmap/phmap_base.h	/^        bool        locked_;$/;"	m	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:bool
locked_	extern/parallel_hashmap/phmap_base.h	/^        bool        locked_;$/;"	m	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:bool
logic	include/hicr/exceptions.hpp	/^  logic,$/;"	e	enum:HiCR::exceptions::exception_t
logicalProcessorId_t	include/backends/host/L0/computeResource.hpp	/^  typedef int logicalProcessorId_t;$/;"	t	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:int
lower_bound	extern/parallel_hashmap/btree.h	/^        SearchResult<int, is_key_compare_to::value> lower_bound($/;"	f	class:phmap::priv::btree_node	typeref:typename:SearchResult<int,is_key_compare_to::value>
lower_bound	extern/parallel_hashmap/btree.h	/^        const_iterator lower_bound(const K &key) const {$/;"	f	class:phmap::priv::btree	typeref:typename:const_iterator
lower_bound	extern/parallel_hashmap/btree.h	/^        const_iterator lower_bound(const key_arg<K> &key) const { return tree_.lower_bound(key);/;"	f	class:phmap::priv::btree_container	typeref:typename:const_iterator
lower_bound	extern/parallel_hashmap/btree.h	/^        iterator lower_bound(const K &key) {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
lower_bound	extern/parallel_hashmap/btree.h	/^        iterator lower_bound(const key_arg<K> &key) { return tree_.lower_bound(key); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:iterator
lpf	examples/channels/fixedSize/spsc/meson.build	/^	  test('lpf', lpfrunExecutable, args : [ '-np', '2', '-engine', 'ibverbs', lpf.full_path(), '3'/;"	t
lpf	examples/channels/fixedSize/spsc/meson.build	/^	lpf = executable('lpf', [ 'source\/lpf.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	B
lpf	examples/channels/fixedSize/spsc/meson.build	/^	lpf = executable('lpf', [ 'source\/lpf.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	V
lpf	examples/channels/variableSize/spsc/meson.build	/^	  test('lpf', lpfrunExecutable, args : [ '-np', '2', '-engine', 'ibverbs', lpf.full_path(), '3'/;"	t
lpf	examples/channels/variableSize/spsc/meson.build	/^	lpf = executable('lpf', [ 'source\/lpf.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	B
lpf	examples/channels/variableSize/spsc/meson.build	/^	lpf = executable('lpf', [ 'source\/lpf.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	V
lpf	examples/hicr/memcpy/meson.build	/^	  test('lpf', lpfrunExecutable, args : [ '-np', '2', '-engine', 'ibverbs', lpf.full_path() ], t/;"	t
lpf	examples/hicr/memcpy/meson.build	/^	lpf = executable('lpf', [ 'source\/lpf.cpp'], dependencies: hicrBuildDep)$/;"	B
lpf	examples/hicr/memcpy/meson.build	/^	lpf = executable('lpf', [ 'source\/lpf.cpp'], dependencies: hicrBuildDep)$/;"	V
lpf	include/backends/lpf/L0/globalMemorySlot.hpp	/^namespace lpf$/;"	n	namespace:HiCR::backend
lpf	include/backends/lpf/L0/localMemorySlot.hpp	/^namespace lpf$/;"	n	namespace:HiCR::backend
lpf	include/backends/lpf/L1/communicationManager.hpp	/^namespace lpf$/;"	n	namespace:HiCR::backend
lpf	include/backends/lpf/L1/memoryManager.hpp	/^namespace lpf$/;"	n	namespace:HiCR::backend
lpf2	examples/hicr/memcpy/meson.build	/^	lpf2 = executable('lpfMemcpyAndCountingFence', [ 'source\/lpfMemcpyAndCountingFence.cpp'], depe/;"	V
lpfMemcpyAndCountingFence	examples/hicr/memcpy/meson.build	/^	lpf2 = executable('lpfMemcpyAndCountingFence', [ 'source\/lpfMemcpyAndCountingFence.cpp'], depe/;"	B
lpf_core_univ_ibverbs_generic	include/backends/lpf/meson.build	/^lib_lpfcore = cc.find_library('lpf_core_univ_ibverbs_generic')$/;"	B
lpf_hl	include/backends/lpf/meson.build	/^lib_lpfhl = cc.find_library('lpf_hl')$/;"	B
lpfrunExecutable	include/backends/lpf/meson.build	/^lpfrunExecutable = find_program('lpfrun', '\/usr\/bin\/lpfrun', '\/usr\/local\/bin\/lpfrun', req/;"	V
m	extern/nlohmann_json/json.hpp	/^    std::runtime_error m;$/;"	m	class:detail::exception	typeref:typename:std::runtime_error
m_	extern/parallel_hashmap/phmap_base.h	/^        mutex_type *m_;$/;"	m	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:mutex_type *
m_	extern/parallel_hashmap/phmap_base.h	/^        mutex_type *m_;$/;"	m	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:mutex_type *
m_compare	extern/nlohmann_json/json.hpp	/^    JSON_NO_UNIQUE_ADDRESS key_compare m_compare = key_compare();$/;"	m	struct:ordered_map	typeref:typename:JSON_NO_UNIQUE_ADDRESS key_compare
m_file	extern/nlohmann_json/json.hpp	/^    std::FILE* m_file;$/;"	m	class:detail::file_input_adapter	typeref:typename:std::FILE *
m_has_subtype	extern/nlohmann_json/json.hpp	/^    bool m_has_subtype = false;$/;"	m	class:byte_container_with_subtype	typeref:typename:bool
m_it	extern/nlohmann_json/json.hpp	/^    internal_iterator<typename std::remove_const<BasicJsonType>::type> m_it {};$/;"	m	class:detail::iter_impl	typeref:typename:internal_iterator<typename std::remove_const<BasicJsonType>::type>
m_lexer	extern/nlohmann_json/json.hpp	/^    lexer_t m_lexer;$/;"	m	class:detail::parser	typeref:typename:lexer_t
m_parent	extern/nlohmann_json/json.hpp	/^    basic_json* m_parent = nullptr;$/;"	m	class:basic_json	typeref:typename:basic_json *
m_subtype	extern/nlohmann_json/json.hpp	/^    subtype_type m_subtype = 0;$/;"	m	class:byte_container_with_subtype	typeref:typename:subtype_type
m_value	extern/nlohmann_json/json.hpp	/^    json_value m_value = {};$/;"	m	class:basic_json	typeref:typename:json_value
machineModel	examples/meson.build	/^subdir('machineModel')$/;"	S
macros_internal	extern/parallel_hashmap/phmap_config.h	/^namespace macros_internal {$/;"	n	namespace:phmap
main	examples/channels/fixedSize/mpsc/source/mpi.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/channels/fixedSize/mpsc/source/sharedMemory.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/channels/fixedSize/spsc/source/lpf.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/channels/fixedSize/spsc/source/mpi.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/channels/fixedSize/spsc/source/sharedMemory.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/channels/variableSize/spsc/source/lpf.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/channels/variableSize/spsc/source/mpi.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/channels/variableSize/spsc/source/sequential.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/channels/variableSize/spsc/source/sharedMemory.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/hicr/kernel/source/ascend.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/hicr/kernel/source/sharedMemory.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/hicr/memcpy/source/ascend.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/hicr/memcpy/source/lpf.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/hicr/memcpy/source/sharedMemory.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/hicr/topology/source/ascend.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/hicr/topology/source/hwloc.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/hicr/topologyRPC/source/mpi.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/machineModel/source/main.cpp	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	examples/runtime/source/main.cpp	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	examples/tasking/abcTasks/source/main.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/tasking/energySaver/source/main.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/tasking/getCurrentTask/source/main.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	examples/tasking/resourceList/source/main.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	extern/doxygen-awesome-css/package.json	/^  "main": "",$/;"	s
main	extern/run-clang-format/run-clang-format.py	/^def main():$/;"	f
mainLoop	include/frontends/tasking/worker.hpp	/^  __USED__ inline void mainLoop()$/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ void
make_array	extern/nlohmann_json/json.hpp	/^inline constexpr std::array<T, sizeof...(Args)> make_array(Args&& ... args)$/;"	f	namespace:detail	typeref:typename:std::array<T,sizeof...(Args)>
make_diff	extern/run-clang-format/run-clang-format.py	/^def make_diff(file, original, reformatted):$/;"	f
make_index_sequence	extern/nlohmann_json/json.hpp	/^using make_index_sequence = make_integer_sequence<size_t, N>;$/;"	t	namespace:detail	typeref:typename:make_integer_sequence<size_t,N>
make_index_sequence	extern/parallel_hashmap/phmap_base.h	/^using make_index_sequence = make_integer_sequence<size_t, N>;$/;"	t	namespace:phmap	typeref:typename:make_integer_sequence<size_t,N>
make_integer_sequence	extern/nlohmann_json/json.hpp	/^using make_integer_sequence = typename utility_internal::Gen<T, N>::type;$/;"	t	namespace:detail	typeref:typename:utility_internal::Gen<T,N>::type
make_integer_sequence	extern/parallel_hashmap/phmap_base.h	/^using make_integer_sequence = typename utility_internal::Gen<T, N>::type;$/;"	t	namespace:phmap	typeref:typename:utility_internal::Gen<T,N>::type
make_iterator	extern/parallel_hashmap/phmap.h	/^    iterator make_iterator(Inner* inner, const EmbeddedIterator it)$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:iterator
make_key	tests/backends/host/coroutine.cpp	/^static void make_key() { (void)pthread_key_create(&key, NULL); }$/;"	f	typeref:typename:void	file:
make_optional	extern/parallel_hashmap/phmap_base.h	/^constexpr optional<T> make_optional(Args&&... args) {$/;"	f	namespace:phmap	typeref:typename:optional<T>
make_optional	extern/parallel_hashmap/phmap_base.h	/^constexpr optional<T> make_optional(std::initializer_list<U> il,$/;"	f	namespace:phmap	typeref:typename:optional<T>
make_optional	extern/parallel_hashmap/phmap_base.h	/^constexpr optional<typename std::decay<T>::type> make_optional(T&& v) {$/;"	f	namespace:phmap	typeref:typename:optional<typename std::decay<T>::type>
make_root	extern/parallel_hashmap/btree.h	/^        void make_root() {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
make_rv	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> make_rv(Inner* inner, $/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:std::pair<iterator,bool>
make_signed_t	extern/parallel_hashmap/phmap_base.h	/^using make_signed_t = typename std::make_signed<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::make_signed<T>::type
make_unique	extern/parallel_hashmap/phmap_base.h	/^    typename memory_internal::MakeUniqueResult<T>::array make_unique(size_t n) {$/;"	f	namespace:phmap	typeref:typename:memory_internal::MakeUniqueResult<T>::array
make_unique	extern/parallel_hashmap/phmap_base.h	/^    typename memory_internal::MakeUniqueResult<T>::scalar make_unique($/;"	f	namespace:phmap	typeref:typename:memory_internal::MakeUniqueResult<T>::scalar
make_unsigned_t	extern/parallel_hashmap/phmap_base.h	/^using make_unsigned_t = typename std::make_unsigned<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::make_unsigned<T>::type
make_void	extern/nlohmann_json/json.hpp	/^template<typename ...Ts> struct make_void$/;"	s	namespace:detail
map	.vscode/settings.json	/^        "map": "cpp",$/;"	s	object:files.associations
map	extern/atomic_queue/atomic_queue.h	/^constexpr T& map(T* elements, unsigned index) noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:T &
map_params	extern/parallel_hashmap/btree.h	/^    struct map_params : common_params<Key, Compare, Alloc, TargetNodeSize, Multi,$/;"	s	namespace:phmap::priv
map_slot_policy	extern/parallel_hashmap/phmap_base.h	/^struct map_slot_policy $/;"	s	namespace:phmap::priv
map_slot_type	extern/parallel_hashmap/phmap_base.h	/^    map_slot_type() {}$/;"	f	union:phmap::priv::map_slot_type
map_slot_type	extern/parallel_hashmap/phmap_base.h	/^union map_slot_type $/;"	u	namespace:phmap::priv
mapped	extern/parallel_hashmap/phmap_base.h	/^    mapped_type& mapped() const {$/;"	f	class:phmap::priv::node_handle	typeref:typename:mapped_type &
mapped_type	extern/nlohmann_json/json.hpp	/^    using mapped_type = T;$/;"	t	struct:ordered_map	typeref:typename:T
mapped_type	extern/parallel_hashmap/btree.h	/^        using mapped_type = Data;$/;"	t	struct:phmap::priv::map_params	typeref:typename:Data
mapped_type	extern/parallel_hashmap/btree.h	/^        using mapped_type = typename params_type::mapped_type;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:params_type::mapped_type
mapped_type	extern/parallel_hashmap/btree.h	/^        using mapped_type = typename params_type::mapped_type;$/;"	t	class:phmap::priv::btree_multimap_container	typeref:typename:params_type::mapped_type
mapped_type	extern/parallel_hashmap/phmap.h	/^    using mapped_type = V;$/;"	t	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:V
mapped_type	extern/parallel_hashmap/phmap.h	/^    using mapped_type = Value;$/;"	t	class:phmap::priv::NodeHashMapPolicy	typeref:typename:Value
mapped_type	extern/parallel_hashmap/phmap.h	/^    using mapped_type = typename Policy::mapped_type;$/;"	t	class:phmap::priv::parallel_hash_map	typeref:typename:Policy::mapped_type
mapped_type	extern/parallel_hashmap/phmap.h	/^    using mapped_type = typename Policy::mapped_type;$/;"	t	class:phmap::priv::raw_hash_map	typeref:typename:Policy::mapped_type
mapped_type	extern/parallel_hashmap/phmap_base.h	/^    using mapped_type = typename Policy::mapped_type;$/;"	t	class:phmap::priv::node_handle	typeref:typename:Policy::mapped_type
mapped_type_t	extern/nlohmann_json/json.hpp	/^using mapped_type_t = typename T::mapped_type;$/;"	t	namespace:detail	typeref:typename:T::mapped_type
mask	extern/parallel_hashmap/phmap.h	/^    constexpr static size_t mask = num_tables - 1;$/;"	m	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
mask_	extern/parallel_hashmap/phmap.h	/^    T mask_;$/;"	m	class:phmap::priv::BitMask	typeref:typename:T
mask_	extern/parallel_hashmap/phmap.h	/^    size_t mask_;$/;"	m	class:phmap::priv::probe_seq	typeref:typename:size_t
master_doc	docs/source/conf.py	/^master_doc = 'index'$/;"	v
match	extern/parallel_hashmap/btree.h	/^        MatchKind match;$/;"	m	struct:phmap::priv::SearchResult	typeref:typename:MatchKind
max_count	extern/parallel_hashmap/btree.h	/^            field_type max_count = node_type::kInternalNodeMaxCount + 1;$/;"	m	struct:phmap::priv::btree::EmptyNodeType	typeref:typename:field_type
max_count	extern/parallel_hashmap/btree.h	/^        field_type max_count() const {$/;"	f	class:phmap::priv::btree_node	typeref:typename:field_type
max_load_factor	extern/parallel_hashmap/phmap.h	/^    float max_load_factor() const { return 1.0f; }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:float
max_load_factor	extern/parallel_hashmap/phmap.h	/^    float max_load_factor() const { return 1.0f; }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:float
max_load_factor	extern/parallel_hashmap/phmap.h	/^    void max_load_factor(float) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
max_load_factor	extern/parallel_hashmap/phmap.h	/^    void max_load_factor(float) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
max_size	extern/nlohmann_json/json.hpp	/^    size_type max_size() const noexcept$/;"	f	class:basic_json	typeref:typename:size_type
max_size	extern/parallel_hashmap/btree.h	/^        size_type max_size() const { return (std::numeric_limits<size_type>::max)(); }$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
max_size	extern/parallel_hashmap/btree.h	/^        size_type max_size() const { return tree_.max_size(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:size_type
max_size	extern/parallel_hashmap/phmap.h	/^    size_t max_size() const { return (std::numeric_limits<size_t>::max)(); }$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
max_size	extern/parallel_hashmap/phmap.h	/^    size_t max_size() const { return (std::numeric_limits<size_t>::max)(); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:size_t
max_size	extern/parallel_hashmap/phmap_base.h	/^    static size_type max_size(const Alloc& a) { return max_size_impl(0, a); }$/;"	f	struct:phmap::allocator_traits	typeref:typename:size_type
max_size_impl	extern/parallel_hashmap/phmap_base.h	/^    static auto max_size_impl(int, const A& a) -> decltype(a.max_size()) {$/;"	f	struct:phmap::allocator_traits	typeref:typename:decltype(a.max_size ())
max_size_impl	extern/parallel_hashmap/phmap_base.h	/^    static size_type max_size_impl(char, const Alloc&) {$/;"	f	struct:phmap::allocator_traits	typeref:typename:size_type
maximize_throughput_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool maximize_throughput_ = MAXIMIZE_THROUGHPUT;$/;"	m	class:atomic_queue::AtomicQueue	typeref:typename:bool
maximize_throughput_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool maximize_throughput_ = MAXIMIZE_THROUGHPUT;$/;"	m	class:atomic_queue::AtomicQueue2	typeref:typename:bool
maximize_throughput_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool maximize_throughput_ = MAXIMIZE_THROUGHPUT;$/;"	m	class:atomic_queue::AtomicQueueB	typeref:typename:bool
maximize_throughput_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool maximize_throughput_ = MAXIMIZE_THROUGHPUT;$/;"	m	class:atomic_queue::AtomicQueueB2	typeref:typename:bool
maybe_move_from_iterator	extern/parallel_hashmap/btree.h	/^        const value_type &maybe_move_from_iterator(const_iterator x) { return *x; }$/;"	f	class:phmap::priv::btree	typeref:typename:const value_type &
maybe_move_from_iterator	extern/parallel_hashmap/btree.h	/^        value_type &&maybe_move_from_iterator(iterator x) { return std::move(*x); }$/;"	f	class:phmap::priv::btree	typeref:typename:value_type &&
memcpy	examples/hicr/meson.build	/^subdir('memcpy')$/;"	S
memcpy	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void memcpy(std::shared_ptr<L0::GlobalMemorySlot> destination, const size_t ds/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
memcpy	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void memcpy(std::shared_ptr<L0::LocalMemorySlot> destination, const size_t dst/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
memcpyAsync	include/backends/ascend/L1/communicationManager.hpp	/^  __USED__ inline void memcpyAsync(std::shared_ptr<HiCR::L0::LocalMemorySlot> destination, const/;"	f	class:HiCR::backend::ascend::L1::CommunicationManager	typeref:typename:__USED__ void
memcpyImpl	include/backends/ascend/L1/communicationManager.hpp	/^  __USED__ inline void memcpyImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> destination, const /;"	f	class:HiCR::backend::ascend::L1::CommunicationManager	typeref:typename:__USED__ void
memcpyImpl	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void memcpyImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> destination, const/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
memcpyImpl	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void memcpyImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> destination, const /;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
memcpyImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void memcpyImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> destination, const/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
memcpyImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void memcpyImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> destination, const /;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
memcpyImpl	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void memcpyImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> destinationSlotPtr/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
memcpyImpl	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void memcpyImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> destinationSlot, co/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
memcpyImpl	include/hicr/L1/communicationManager.hpp	/^  virtual void memcpyImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> destination, const size_t /;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:void
memcpyImpl	include/hicr/L1/communicationManager.hpp	/^  virtual void memcpyImpl(std::shared_ptr<HiCR::L0::LocalMemorySlot> destination, const size_t d/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:void
memcpyInternal	include/backends/ascend/L1/communicationManager.hpp	/^  __USED__ inline void memcpyInternal(std::shared_ptr<HiCR::L0::LocalMemorySlot> destination, co/;"	f	class:HiCR::backend::ascend::L1::CommunicationManager	typeref:typename:__USED__ void
memory	.vscode/settings.json	/^        "memory": "cpp",$/;"	s	object:files.associations
memoryManager	tests/backends/host/hwloc/L1/meson.build	/^test('memoryManager', executable('memoryManager', 'memoryManager.cpp', dependencies: HiCRTestBui/;"	B
memoryManager	tests/backends/host/hwloc/L1/meson.build	/^test('memoryManager', executable('memoryManager', 'memoryManager.cpp', dependencies: HiCRTestBui/;"	t
memorySpaceList_t	include/hicr/L0/device.hpp	/^  typedef std::unordered_set<std::shared_ptr<L0::MemorySpace>> memorySpaceList_t;$/;"	t	class:HiCR::L0::Device	typeref:typename:std::unordered_set<std::shared_ptr<L0::MemorySpace>>
memory_internal	extern/parallel_hashmap/phmap.h	/^namespace memory_internal {$/;"	n	namespace:phmap::priv
memory_internal	extern/parallel_hashmap/phmap_base.h	/^namespace memory_internal {$/;"	n	namespace:phmap
memory_internal	extern/parallel_hashmap/phmap_base.h	/^namespace memory_internal {$/;"	n	namespace:phmap::priv
memory_resource	.vscode/settings.json	/^        "memory_resource": "cpp",$/;"	s	object:files.associations
merge	extern/parallel_hashmap/btree.h	/^            void merge(btree_container<T> &&src) {$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:void
merge	extern/parallel_hashmap/btree.h	/^            void merge(btree_container<T> &src) {  \/\/ NOLINT$/;"	f	class:phmap::priv::btree_set_container	typeref:typename:void
merge	extern/parallel_hashmap/btree.h	/^        void merge(btree_container<T> &&src) {$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:void
merge	extern/parallel_hashmap/btree.h	/^        void merge(btree_container<T> &src) {  \/\/ NOLINT$/;"	f	class:phmap::priv::btree_multiset_container	typeref:typename:void
merge	extern/parallel_hashmap/btree.h	/^    void btree_node<P>::merge(btree_node *src, allocator_type *alloc) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
merge	extern/parallel_hashmap/phmap.h	/^    void merge(parallel_hash_set<N, RefSet, Mtx_, Policy, Hash, E, Alloc>& src) {  \/\/ NOLINT$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
merge	extern/parallel_hashmap/phmap.h	/^    void merge(parallel_hash_set<N, RefSet, Mtx_, Policy, Hash, E, Alloc>&& src) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
merge	extern/parallel_hashmap/phmap.h	/^    void merge(raw_hash_set<Policy, H, E, Alloc>& src) {  \/\/ NOLINT$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
merge	extern/parallel_hashmap/phmap.h	/^    void merge(raw_hash_set<Policy, H, E, Alloc>&& src) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
merge	include/hicr/L0/topology.hpp	/^  __USED__ inline void merge(const Topology &source)$/;"	f	class:HiCR::L0::Topology	typeref:typename:__USED__ void
merge_nodes	extern/parallel_hashmap/btree.h	/^    void btree<P>::merge_nodes(node_type *left, node_type *right) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
merge_patch	extern/nlohmann_json/json.hpp	/^    void merge_patch(const basic_json& apply_patch)$/;"	f	class:basic_json	typeref:typename:void
meta	extern/nlohmann_json/json.hpp	/^    static basic_json meta()$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
min_size	extern/atomic_queue/atomic_queue.h	/^    static unsigned constexpr min_size = 1u << (bits * 2);$/;"	m	struct:atomic_queue::details::GetIndexShuffleBits	typeref:typename:unsigned 
minus	extern/nlohmann_json/json.hpp	/^    diyfp minus;$/;"	m	struct:detail::dtoa_impl::boundaries	typeref:typename:diyfp
modify_if	extern/parallel_hashmap/phmap.h	/^    bool modify_if(const key_arg<K>& key, F&& f) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
modify_if_impl	extern/parallel_hashmap/phmap.h	/^    bool modify_if_impl(const key_arg<K>& key, F&& f) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
movable	extern/parallel_hashmap/phmap_base.h	/^enum class copy_traits { copyable = 0, movable = 1, non_movable = 2 };$/;"	e	enum:phmap::optional_internal::copy_traits
move	extern/nlohmann_json/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
move	extern/parallel_hashmap/btree.h	/^        static void move(Alloc * \/*alloc*\/, slot_type *src, slot_type *dest) {$/;"	f	struct:phmap::priv::set_slot_policy	typeref:typename:void
move	extern/parallel_hashmap/btree.h	/^        static void move(Alloc *alloc, slot_type *first, slot_type *last,$/;"	f	struct:phmap::priv::common_params	typeref:typename:void
move	extern/parallel_hashmap/btree.h	/^        static void move(Alloc *alloc, slot_type *first, slot_type *last,$/;"	f	struct:phmap::priv::set_slot_policy	typeref:typename:void
move	extern/parallel_hashmap/btree.h	/^        static void move(Alloc *alloc, slot_type *src, slot_type *dest) {$/;"	f	struct:phmap::priv::common_params	typeref:typename:void
move	extern/parallel_hashmap/phmap_base.h	/^    static void move(Allocator* alloc, slot_type* first, slot_type* last,$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:void
move	extern/parallel_hashmap/phmap_base.h	/^    static void move(Allocator* alloc, slot_type* src, slot_type* dest) {$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:void
move	extern/parallel_hashmap/phmap_base.h	/^constexpr phmap::remove_reference_t<T>&& move(T&& t) noexcept {$/;"	f	namespace:phmap	typeref:typename:phmap::remove_reference_t<T> &&
move_assign	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set& move_assign(parallel_hash_set<N, RefSet, Mtx2_, Policy, Hash, Eq, Alloc>&/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:parallel_hash_set &
move_assign	extern/parallel_hashmap/phmap.h	/^    raw_hash_set& move_assign(raw_hash_set&& that, std::false_type) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:raw_hash_set &
move_assign	extern/parallel_hashmap/phmap.h	/^    raw_hash_set& move_assign(raw_hash_set&& that, std::true_type) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:raw_hash_set &
move_tag_t	extern/parallel_hashmap/phmap_base.h	/^    struct move_tag_t {};$/;"	s	class:phmap::priv::node_handle_base
moved_or_copied	extern/nlohmann_json/json.hpp	/^    value_type moved_or_copied() const$/;"	f	class:detail::json_ref	typeref:typename:value_type
mpi	examples/channels/fixedSize/mpsc/meson.build	/^	mpi = executable('mpi', [ 'source\/mpi.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	B
mpi	examples/channels/fixedSize/mpsc/meson.build	/^	mpi = executable('mpi', [ 'source\/mpi.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	V
mpi	examples/channels/fixedSize/mpsc/meson.build	/^	test('mpi', mpirunExecutable, args : [ '-n', '16', mpi.full_path(), '3' ], timeout: test_timeou/;"	t
mpi	examples/channels/fixedSize/spsc/meson.build	/^	  test('mpi', mpirunExecutable, args : [ '-n', '2', mpi.full_path(), '3' ], timeout: test_timeo/;"	t
mpi	examples/channels/fixedSize/spsc/meson.build	/^	mpi = executable('mpi', [ 'source\/mpi.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	B
mpi	examples/channels/fixedSize/spsc/meson.build	/^	mpi = executable('mpi', [ 'source\/mpi.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	V
mpi	examples/channels/variableSize/spsc/meson.build	/^	  test('mpi', mpirunExecutable, args : [ '-n', '2', mpi.full_path(), '3' ], timeout: test_timeo/;"	t
mpi	examples/channels/variableSize/spsc/meson.build	/^	mpi = executable('mpi', [ 'source\/mpi.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	B
mpi	examples/channels/variableSize/spsc/meson.build	/^	mpi = executable('mpi', [ 'source\/mpi.cpp' ], dependencies: hicrBuildDep, include_directories:/;"	V
mpi	examples/hicr/topologyRPC/meson.build	/^	  test('mpi', mpirunExecutable, args : [ '-n', '4', mpi.full_path() ], timeout: test_timeout, s/;"	t
mpi	examples/hicr/topologyRPC/meson.build	/^	mpi = executable('mpi', [ 'source\/mpi.cpp'], dependencies: hicrBuildDep, include_directories: /;"	B
mpi	examples/hicr/topologyRPC/meson.build	/^	mpi = executable('mpi', [ 'source\/mpi.cpp'], dependencies: hicrBuildDep, include_directories: /;"	V
mpi	examples/machineModel/meson.build	/^	  test('mpi', mpirunExecutable, args : [ '-n', '7', mpi.full_path(), meson.current_source_dir()/;"	t
mpi	examples/machineModel/meson.build	/^	mpi = executable('mpi', [ 'source\/main.cpp'], dependencies: hicrBuildDep, include_directories:/;"	B
mpi	examples/machineModel/meson.build	/^	mpi = executable('mpi', [ 'source\/main.cpp'], dependencies: hicrBuildDep, include_directories:/;"	V
mpi	examples/runtime/meson.build	/^	  test('mpi', mpirunExecutable, args : [ '-n', '7', mpi.full_path(), meson.current_source_dir()/;"	t
mpi	examples/runtime/meson.build	/^	mpi = executable('mpi', [ 'source\/main.cpp'], dependencies: hicrBuildDep, include_directories:/;"	B
mpi	examples/runtime/meson.build	/^	mpi = executable('mpi', [ 'source\/main.cpp'], dependencies: hicrBuildDep, include_directories:/;"	V
mpi	include/backends/mpi/L0/globalMemorySlot.hpp	/^namespace mpi$/;"	n	namespace:HiCR::backend
mpi	include/backends/mpi/L0/instance.hpp	/^namespace mpi$/;"	n	namespace:HiCR::backend
mpi	include/backends/mpi/L1/communicationManager.hpp	/^namespace mpi$/;"	n	namespace:HiCR::backend
mpi	include/backends/mpi/L1/instanceManager.hpp	/^namespace mpi$/;"	n	namespace:HiCR::backend
mpi	include/backends/mpi/L1/memoryManager.hpp	/^namespace mpi$/;"	n	namespace:HiCR::backend
mpiDep	include/backends/lpf/meson.build	/^  mpiDep = dependency('mpich', required: false)$/;"	V
mpiDep	include/backends/lpf/meson.build	/^mpiDep = dependency('mpi', language: 'cpp', required: true)$/;"	V
mpiDep	include/backends/mpi/meson.build	/^  mpiDep = dependency('mpich', required: false)$/;"	V
mpiDep	include/backends/mpi/meson.build	/^mpiDep = dependency('mpi', language: 'cpp', required: true)$/;"	V
mpiTagMask	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  static const dataObjectId_t mpiTagMask = 32767;$/;"	m	class:HiCR::runtime::DataObject	typeref:typename:const dataObjectId_t
mpirunExecutable	include/backends/mpi/meson.build	/^mpirunExecutable = find_program('mpirun', '\/usr\/bin\/mpirun', '\/usr\/local\/bin\/mpirun', req/;"	V
mpsc	examples/channels/fixedSize/meson.build	/^subdir('mpsc')$/;"	S
msgpack	extern/nlohmann_json/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
mul	extern/nlohmann_json/json.hpp	/^    static diyfp mul(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
mutable_allocator	extern/parallel_hashmap/btree.h	/^        allocator_type *mutable_allocator() noexcept {$/;"	f	class:phmap::priv::btree	typeref:typename:allocator_type *
mutable_child	extern/parallel_hashmap/btree.h	/^        btree_node *&mutable_child(size_type i) { return GetField<3>()[i]; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:btree_node * &
mutable_count	extern/parallel_hashmap/btree.h	/^        field_type &mutable_count()        { return GetField<1>()[2]; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:field_type &
mutable_key_comp	extern/parallel_hashmap/btree.h	/^        key_compare *mutable_key_comp() noexcept { return &root_.template get<0>(); }$/;"	f	class:phmap::priv::btree	typeref:typename:key_compare *
mutable_root	extern/parallel_hashmap/btree.h	/^        node_type *&mutable_root() noexcept { return root_.template get<2>(); }$/;"	f	class:phmap::priv::btree	typeref:typename:node_type * &
mutable_value	extern/parallel_hashmap/phmap_base.h	/^    mutable_value_type mutable_value;$/;"	m	union:phmap::priv::map_slot_type	typeref:typename:mutable_value_type
mutable_value_type	extern/parallel_hashmap/btree.h	/^        using mutable_value_type = Key;$/;"	t	struct:phmap::priv::set_slot_policy	typeref:typename:Key
mutable_value_type	extern/parallel_hashmap/phmap_base.h	/^    using mutable_value_type = std::pair<K, V>;$/;"	t	struct:phmap::priv::map_slot_policy	typeref:typename:std::pair<K,V>
mutable_value_type	extern/parallel_hashmap/phmap_base.h	/^    using mutable_value_type = std::pair<K, V>;$/;"	t	union:phmap::priv::map_slot_type	typeref:typename:std::pair<K,V>
mutex	.vscode/settings.json	/^        "mutex": "cpp",$/;"	s	object:files.associations
mutex	extern/parallel_hashmap/phmap_base.h	/^        mutex_type *mutex() const noexcept { return m_; }$/;"	f	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:mutex_type *
mutex	extern/parallel_hashmap/phmap_base.h	/^        mutex_type *mutex() const noexcept { return m_; }$/;"	f	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:mutex_type *
mutex_type	extern/parallel_hashmap/phmap_base.h	/^        using mutex_type      = boost::shared_mutex;$/;"	t	class:phmap::LockableImpl	typeref:typename:boost::shared_mutex
mutex_type	extern/parallel_hashmap/phmap_base.h	/^        using mutex_type      = boost::upgrade_mutex;$/;"	t	class:phmap::LockableImpl	typeref:typename:boost::upgrade_mutex
mutex_type	extern/parallel_hashmap/phmap_base.h	/^        using mutex_type      = phmap::AbslMutex;$/;"	t	class:phmap::LockableImpl	typeref:typename:phmap::AbslMutex
mutex_type	extern/parallel_hashmap/phmap_base.h	/^        using mutex_type      = std::shared_mutex;$/;"	t	class:phmap::LockableImpl	typeref:typename:std::shared_mutex
mutex_type	extern/parallel_hashmap/phmap_base.h	/^        using mutex_type = MutexType;  $/;"	t	class:phmap::LockableBaseImpl::ReadLocks	typeref:typename:MutexType
mutex_type	extern/parallel_hashmap/phmap_base.h	/^        using mutex_type = MutexType;  $/;"	t	class:phmap::LockableBaseImpl::WriteLocks	typeref:typename:MutexType
mutex_type	extern/parallel_hashmap/phmap_base.h	/^        using mutex_type = MutexType;  $/;"	t	struct:phmap::LockableBaseImpl::DoNothing	typeref:typename:MutexType
mutex_type	extern/parallel_hashmap/phmap_base.h	/^        using mutex_type = MutexType;$/;"	t	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:MutexType
mutex_type	extern/parallel_hashmap/phmap_base.h	/^        using mutex_type = MutexType;$/;"	t	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:MutexType
mutex_type	extern/parallel_hashmap/phmap_base.h	/^    using mutex_type      = Mtx_;$/;"	t	class:phmap::LockableImpl	typeref:typename:Mtx_
mutex_type	extern/parallel_hashmap/phmap_base.h	/^    using mutex_type      = phmap::NullMutex;$/;"	t	class:phmap::LockableImpl	typeref:typename:phmap::NullMutex
myst_enable_extensions	docs/source/conf.py	/^myst_enable_extensions = ["colon_fence"]$/;"	v
myst_heading_anchors	docs/source/conf.py	/^myst_heading_anchors = 4$/;"	v
name	.vscode/c_cpp_properties.json	/^            "name": "Linux",$/;"	s	object:configurations.0
name	extern/doxygen-awesome-css/package.json	/^    "name": "jothepro",$/;"	s	object:author
name	extern/doxygen-awesome-css/package.json	/^  "name": "@jothepro\/doxygen-awesome-css",$/;"	s
name	extern/nlohmann_json/json.hpp	/^    static std::string name(const std::string& ename, int id_)$/;"	f	class:detail::exception	typeref:typename:std::string
name_separator	extern/nlohmann_json/json.hpp	/^        name_separator,   \/\/\/< the name separator `:`$/;"	e	enum:detail::lexer_base::token_type
ncmp	extern/parallel_hashmap/btree.h	/^        enum class ncmp : value_type { unordered = -127 };$/;"	g	namespace:phmap::compare_internal	typeref:typename:value_type
negation	extern/nlohmann_json/json.hpp	/^template<class B> struct negation : std::integral_constant < bool, !B::value > { };$/;"	s	namespace:detail
negation	extern/parallel_hashmap/phmap_base.h	/^struct negation : std::integral_constant<bool, !T::value> {};$/;"	s	namespace:phmap
never_out_of_range	extern/nlohmann_json/json.hpp	/^using never_out_of_range = std::integral_constant < bool,$/;"	t	namespace:detail
new	.vscode/settings.json	/^        "new": "cpp",$/;"	s	object:files.associations
new_element	extern/parallel_hashmap/phmap.h	/^        static T* new_element(Allocator* alloc, Args&&... args) {$/;"	f	struct:phmap::priv::NodeHashSetPolicy	typeref:typename:T *
new_element	extern/parallel_hashmap/phmap.h	/^        static value_type* new_element(Allocator* alloc, Args&&... args) {$/;"	f	class:phmap::priv::NodeHashMapPolicy	typeref:typename:value_type *
new_internal_node	extern/parallel_hashmap/btree.h	/^        node_type* new_internal_node(node_type *parent) {$/;"	f	class:phmap::priv::btree	typeref:typename:node_type *
new_leaf_node	extern/parallel_hashmap/btree.h	/^        node_type* new_leaf_node(node_type *parent) {$/;"	f	class:phmap::priv::btree	typeref:typename:node_type *
new_leaf_root_node	extern/parallel_hashmap/btree.h	/^        node_type *new_leaf_root_node(const int max_count) {$/;"	f	class:phmap::priv::btree	typeref:typename:node_type *
next	extern/parallel_hashmap/phmap.h	/^    void next() {$/;"	f	class:phmap::priv::probe_seq	typeref:typename:void
next_byte_in_range	extern/nlohmann_json/json.hpp	/^    bool next_byte_in_range(std::initializer_list<char_int_type> ranges)$/;"	f	class:detail::lexer	typeref:typename:bool
next_unget	extern/nlohmann_json/json.hpp	/^    bool next_unget = false;$/;"	m	class:detail::lexer	typeref:typename:bool
nil	extern/atomic_queue/atomic_queue.h	/^constexpr T nil() noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:T
no	extern/parallel_hashmap/phmap.h	/^        using no  = std::false_type;$/;"	t	struct:phmap::priv::raw_hash_set::has_difference_operator	typeref:typename:std::false_type
no	extern/parallel_hashmap/phmap_utils.h	/^    typedef std::false_type no;$/;"	t	struct:phmap::has_hash_value	typeref:typename:std::false_type
node	extern/parallel_hashmap/btree.h	/^        Node *node;$/;"	m	struct:phmap::priv::btree_iterator	typeref:typename:Node *
node	extern/parallel_hashmap/phmap_base.h	/^    NodeType node;$/;"	m	struct:phmap::priv::InsertReturnType	typeref:typename:NodeType
node_count_type	extern/parallel_hashmap/btree.h	/^        using node_count_type =$/;"	t	struct:phmap::priv::common_params
node_handle	extern/parallel_hashmap/phmap_base.h	/^    constexpr node_handle() {}$/;"	f	class:phmap::priv::node_handle
node_handle	extern/parallel_hashmap/phmap_base.h	/^class node_handle : public node_handle_base<PolicyTraits, Alloc> $/;"	c	namespace:phmap::priv
node_handle	extern/parallel_hashmap/phmap_base.h	/^class node_handle<Policy, PolicyTraits, Alloc,$/;"	c	namespace:phmap::priv
node_handle_base	extern/parallel_hashmap/phmap_base.h	/^    constexpr node_handle_base() {}$/;"	f	class:phmap::priv::node_handle_base
node_handle_base	extern/parallel_hashmap/phmap_base.h	/^    node_handle_base(const allocator_type& a, slot_type* s) : alloc_(a) {$/;"	f	class:phmap::priv::node_handle_base
node_handle_base	extern/parallel_hashmap/phmap_base.h	/^    node_handle_base(move_tag_t, const allocator_type& a, slot_type* s)$/;"	f	class:phmap::priv::node_handle_base
node_handle_base	extern/parallel_hashmap/phmap_base.h	/^    node_handle_base(node_handle_base&& other) noexcept {$/;"	f	class:phmap::priv::node_handle_base
node_handle_base	extern/parallel_hashmap/phmap_base.h	/^    node_handle_base(transfer_tag_t, const allocator_type& a, slot_type* s)$/;"	f	class:phmap::priv::node_handle_base
node_handle_base	extern/parallel_hashmap/phmap_base.h	/^class node_handle_base $/;"	c	namespace:phmap::priv
node_handle_type	extern/parallel_hashmap/btree.h	/^        using node_handle_type = node_handle<Params, Params, allocator_type>;$/;"	t	class:phmap::priv::btree	typeref:typename:node_handle<Params,Params,allocator_type>
node_hash_map	extern/parallel_hashmap/phmap.h	/^    node_hash_map() {}$/;"	f	class:phmap::node_hash_map
node_hash_map	extern/parallel_hashmap/phmap.h	/^class node_hash_map$/;"	c	namespace:phmap
node_hash_policy	extern/parallel_hashmap/phmap.h	/^struct node_hash_policy {$/;"	s	namespace:phmap::priv
node_hash_set	extern/parallel_hashmap/phmap.h	/^    node_hash_set() {}$/;"	f	class:phmap::node_hash_set
node_hash_set	extern/parallel_hashmap/phmap.h	/^class node_hash_set$/;"	c	namespace:phmap
node_stats	extern/parallel_hashmap/btree.h	/^            node_stats(size_type l, size_type i)$/;"	f	struct:phmap::priv::btree::node_stats
node_stats	extern/parallel_hashmap/btree.h	/^        struct node_stats {$/;"	s	class:phmap::priv::btree
node_type	extern/parallel_hashmap/btree.h	/^        using node_type = Node;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:Node
node_type	extern/parallel_hashmap/btree.h	/^        using node_type = btree_node<Params>;$/;"	t	class:phmap::priv::btree	typeref:typename:btree_node<Params>
node_type	extern/parallel_hashmap/btree.h	/^        using node_type = typename Tree::node_handle_type;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::node_handle_type
node_type	extern/parallel_hashmap/btree.h	/^        using node_type = typename super_type::node_type;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:super_type::node_type
node_type	extern/parallel_hashmap/btree.h	/^        using node_type = typename super_type::node_type;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:super_type::node_type
node_type	extern/parallel_hashmap/phmap.h	/^    using node_type = node_handle<Policy, hash_policy_traits<Policy>, Alloc>;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:node_handle<Policy,hash_policy_traits<Policy>,Alloc>
node_type	extern/parallel_hashmap/phmap.h	/^    using node_type = node_handle<Policy, hash_policy_traits<Policy>, Alloc>;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:node_handle<Policy,hash_policy_traits<Policy>,Alloc>
nodes	extern/parallel_hashmap/btree.h	/^        size_type nodes() const {$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
non_movable	extern/parallel_hashmap/phmap_base.h	/^enum class copy_traits { copyable = 0, movable = 1, non_movable = 2 };$/;"	e	enum:phmap::optional_internal::copy_traits
none	include/backends/ascend/L1/communicationManager.hpp	/^    none,$/;"	e	enum:HiCR::backend::ascend::L1::CommunicationManager::deviceType_t
nonequal	extern/parallel_hashmap/btree.h	/^                nonequal = 1,$/;"	e	enum:phmap::compare_internal::eq
nonequivalent	extern/parallel_hashmap/btree.h	/^                nonequivalent = nonequal,$/;"	e	enum:phmap::compare_internal::eq
nonesuch	extern/nlohmann_json/json.hpp	/^struct nonesuch$/;"	s	namespace:detail
normal_node	extern/parallel_hashmap/btree.h	/^        using normal_node = typename std::remove_const<Node>::type;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:std::remove_const<Node>::type
normal_pointer	extern/parallel_hashmap/btree.h	/^        using normal_pointer = typename params_type::pointer;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:params_type::pointer
normal_reference	extern/parallel_hashmap/btree.h	/^        using normal_reference = typename params_type::reference;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:params_type::reference
normalize	extern/nlohmann_json/json.hpp	/^    static diyfp normalize(diyfp x) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
normalize_to	extern/nlohmann_json/json.hpp	/^    static diyfp normalize_to(const diyfp& x, const int target_exponent) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
npm-pack	extern/doxygen-awesome-css/package.json	/^    "npm-pack": "npm pack",$/;"	s	object:scripts
npm/xpm dependency	extern/doxygen-awesome-css/README.md	/^### npm\/xpm dependency$/;"	S	section:Doxygen Awesome""Installation
npos	extern/nlohmann_json/json.hpp	/^    constexpr std::size_t binary_reader<BasicJsonType, InputAdapterType, SAX>::npos;$/;"	m	class:detail::binary_reader<BasicJsonType, InputAdapterType, SAX>	typeref:typename:std::size_t
npos	extern/nlohmann_json/json.hpp	/^    static JSON_INLINE_VARIABLE constexpr std::size_t npos = static_cast<std::size_t>(-1);$/;"	m	class:detail::binary_reader	typeref:typename:JSON_INLINE_VARIABLE std::size_t
npos	extern/parallel_hashmap/phmap_base.h	/^    static const size_type npos = ~(size_type(0));$/;"	m	class:phmap::Span	typeref:typename:const size_type
npos	extern/parallel_hashmap/phmap_base.h	/^const typename Span<T>::size_type Span<T>::npos;$/;"	m	class:phmap::Span<T>	typeref:typename:const typename Span<T>::size_type
ns266209310101	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^<svg host="65bd71144e" xmlns="http:\/\/www.w3.org\/2000\/svg" xmlns:xlink="http:\/\/www.w3.org\//;"	n	uri:http://www.w3.org/2000/svg
ns266209310201	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310301	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310401	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310501	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310601	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310701	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310801	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310901	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310a01	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310b01	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310c01	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310d01	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns266209310e01	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^                    <div xmlns="http:\/\/www.w3.org\/1999\/xhtml" style="display: flex; align-it/;"	n	uri:http://www.w3.org/1999/xhtml
ns3e9b44ae0101	extern/doxygen-awesome-css/logo.drawio.svg	/^<svg xmlns="http:\/\/www.w3.org\/2000\/svg" xmlns:xlink="http:\/\/www.w3.org\/1999\/xlink" versi/;"	n	uri:http://www.w3.org/2000/svg
null	extern/nlohmann_json/json.hpp	/^    bool null()$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
null	extern/nlohmann_json/json.hpp	/^    bool null()$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
null	extern/nlohmann_json/json.hpp	/^    bool null()$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
null	extern/nlohmann_json/json.hpp	/^    null,             \/\/\/< null value$/;"	e	enum:detail::value_t
null_function_t	extern/nlohmann_json/json.hpp	/^using null_function_t = decltype(std::declval<T&>().null());$/;"	t	namespace:detail
nullopt_t	extern/parallel_hashmap/phmap_base.h	/^    explicit constexpr nullopt_t(init_t& \/*unused*\/) {}$/;"	f	struct:phmap::nullopt_t
nullopt_t	extern/parallel_hashmap/phmap_base.h	/^struct nullopt_t $/;"	s	namespace:phmap
num_tables	extern/parallel_hashmap/phmap.h	/^    constexpr static size_t num_tables = 1 << N;$/;"	m	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
numaAffinity_t	include/backends/host/L0/computeResource.hpp	/^  typedef int numaAffinity_t;$/;"	t	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:int
number_buffer	extern/nlohmann_json/json.hpp	/^    std::array<char, 64> number_buffer{{}};$/;"	m	class:detail::serializer	typeref:typename:std::array<char,64>
number_float	extern/nlohmann_json/json.hpp	/^        number_float_t number_float;$/;"	m	union:basic_json::json_value	typeref:typename:number_float_t
number_float	extern/nlohmann_json/json.hpp	/^    bool number_float(number_float_t \/*unused*\/, const string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
number_float	extern/nlohmann_json/json.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
number_float	extern/nlohmann_json/json.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
number_float	extern/nlohmann_json/json.hpp	/^    number_float,     \/\/\/< number value (floating-point)$/;"	e	enum:detail::value_t
number_float_function_t	extern/nlohmann_json/json.hpp	/^using number_float_function_t = decltype(std::declval<T&>().number_float($/;"	t	namespace:detail
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = NumberFloatType;$/;"	t	class:basic_json	typeref:typename:NumberFloatType
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::binary_writer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/nlohmann_json/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::number_float_t
number_integer	extern/nlohmann_json/json.hpp	/^        number_integer_t number_integer;$/;"	m	union:basic_json::json_value	typeref:typename:number_integer_t
number_integer	extern/nlohmann_json/json.hpp	/^    bool number_integer(number_integer_t \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
number_integer	extern/nlohmann_json/json.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
number_integer	extern/nlohmann_json/json.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
number_integer	extern/nlohmann_json/json.hpp	/^    number_integer,   \/\/\/< number value (signed integer)$/;"	e	enum:detail::value_t
number_integer_function_t	extern/nlohmann_json/json.hpp	/^using number_integer_function_t =$/;"	t	namespace:detail
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = NumberIntegerType;$/;"	t	class:basic_json	typeref:typename:NumberIntegerType
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/nlohmann_json/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::number_integer_t
number_unsigned	extern/nlohmann_json/json.hpp	/^        number_unsigned_t number_unsigned;$/;"	m	union:basic_json::json_value	typeref:typename:number_unsigned_t
number_unsigned	extern/nlohmann_json/json.hpp	/^    bool number_unsigned(number_unsigned_t \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
number_unsigned	extern/nlohmann_json/json.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
number_unsigned	extern/nlohmann_json/json.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
number_unsigned	extern/nlohmann_json/json.hpp	/^    number_unsigned,  \/\/\/< number value (unsigned integer)$/;"	e	enum:detail::value_t
number_unsigned_function_t	extern/nlohmann_json/json.hpp	/^using number_unsigned_function_t =$/;"	t	namespace:detail
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = NumberUnsignedType;$/;"	t	class:basic_json	typeref:typename:NumberUnsignedType
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/nlohmann_json/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::number_unsigned_t
numbers	.vscode/settings.json	/^        "numbers": "cpp",$/;"	s	object:files.associations
numeric	.vscode/settings.json	/^        "numeric": "cpp",$/;"	s	object:files.associations
o	extern/nlohmann_json/json.hpp	/^    output_adapter_t<char> o = nullptr;$/;"	m	class:detail::serializer	typeref:typename:output_adapter_t<char>
oa	extern/nlohmann_json/json.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:detail::binary_writer	typeref:typename:output_adapter_t<CharType>
oa	extern/nlohmann_json/json.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:detail::output_adapter	typeref:typename:output_adapter_t<CharType>
object	extern/nlohmann_json/json.hpp	/^        object_t* object;$/;"	m	union:basic_json::json_value	typeref:typename:object_t *
object	extern/nlohmann_json/json.hpp	/^    object,           \/\/\/< object (unordered set of name\/value pairs)$/;"	e	enum:detail::value_t
object	extern/nlohmann_json/json.hpp	/^    static basic_json object(initializer_list_t init = {})$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
object_comparator_t	extern/nlohmann_json/json.hpp	/^    using object_comparator_t = detail::actual_object_comparator_t<basic_json>;$/;"	t	class:basic_json	typeref:typename:detail::actual_object_comparator_t<basic_json>
object_comparator_t	extern/nlohmann_json/json.hpp	/^    using object_comparator_t = typename BasicJsonType::default_object_comparator_t;$/;"	t	struct:detail::actual_object_comparator	typeref:typename:BasicJsonType::default_object_comparator_t
object_element	extern/nlohmann_json/json.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType *
object_element	extern/nlohmann_json/json.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType *
object_end	extern/nlohmann_json/json.hpp	/^    object_end,$/;"	e	enum:detail::parse_event_t
object_iterator	extern/nlohmann_json/json.hpp	/^    typename BasicJsonType::object_t::iterator object_iterator {};$/;"	m	struct:detail::internal_iterator	typeref:typename:BasicJsonType::object_t::iterator
object_start	extern/nlohmann_json/json.hpp	/^    object_start,$/;"	e	enum:detail::parse_event_t
object_t	extern/nlohmann_json/json.hpp	/^    using object_t = ObjectType<StringType,$/;"	t	class:basic_json	typeref:typename:ObjectType<StringType,basic_json,default_object_comparator_t,AllocatorType<std::pair<const StringType,basic_json>>>
object_t	extern/nlohmann_json/json.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/nlohmann_json/json.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:detail::actual_object_comparator	typeref:typename:BasicJsonType::object_t
object_t	extern/nlohmann_json/json.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:detail::is_compatible_object_type_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/nlohmann_json/json.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:detail::is_constructible_object_type_impl	typeref:typename:BasicJsonType::object_t
offset	extern/parallel_hashmap/phmap.h	/^        size_t offset;$/;"	m	struct:phmap::priv::raw_hash_set::FindInfo	typeref:typename:size_t
offset	extern/parallel_hashmap/phmap.h	/^    size_t offset() const { return offset_; }$/;"	f	class:phmap::priv::probe_seq	typeref:typename:size_t
offset	extern/parallel_hashmap/phmap.h	/^    size_t offset(size_t i) const { return (offset_ + i) & mask_; }$/;"	f	class:phmap::priv::probe_seq	typeref:typename:size_t
offset_	extern/parallel_hashmap/phmap.h	/^    size_t offset_;$/;"	m	class:phmap::priv::probe_seq	typeref:typename:size_t
ofs_	extern/parallel_hashmap/phmap_dump.h	/^    std::ofstream ofs_;$/;"	m	class:phmap::BinaryOutputArchive	typeref:typename:std::ofstream
onSystemPreferenceChanged	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static onSystemPreferenceChanged() {$/;"	m	class:DoxygenAwesomeDarkModeToggle
onTaskExecute	include/frontends/tasking/task.hpp	/^    onTaskExecute,$/;"	e	enum:HiCR::tasking::Task::event_t
onTaskFinish	examples/tasking/runtime.hpp	/^  __USED__ inline void onTaskFinish(HiCR::tasking::Task *task)$/;"	f	class:taskr::Runtime	typeref:typename:__USED__ void
onTaskFinish	include/frontends/tasking/task.hpp	/^    onTaskFinish$/;"	e	enum:HiCR::tasking::Task::event_t
onTaskSuspend	include/frontends/tasking/task.hpp	/^    onTaskSuspend,$/;"	e	enum:HiCR::tasking::Task::event_t
onUserPreferenceChanged	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static onUserPreferenceChanged() {$/;"	m	class:DoxygenAwesomeDarkModeToggle
one	extern/nlohmann_json/json.hpp	/^    using one = char;$/;"	t	struct:detail::is_ordered_map	typeref:typename:char
operator !=	extern/nlohmann_json/json.hpp	/^    bool operator!=(const IterImpl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator !=	extern/nlohmann_json/json.hpp	/^    bool operator!=(const byte_container_with_subtype& rhs) const$/;"	f	class:byte_container_with_subtype	typeref:typename:bool
operator !=	extern/nlohmann_json/json.hpp	/^    bool operator!=(const iteration_proxy_value& o) const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:bool
operator !=	extern/nlohmann_json/json.hpp	/^    bool operator!=(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:bool
operator !=	extern/nlohmann_json/json.hpp	/^inline bool operator!=(const StringType& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator!=(json_pointer,json_pointer))bool
operator !=	extern/nlohmann_json/json.hpp	/^inline bool operator!=(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator!=(json_pointer,json_pointer))bool
operator !=	extern/nlohmann_json/json.hpp	/^inline bool operator!=(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:bool
operator !=	extern/parallel_hashmap/btree.h	/^        bool operator!=(const const_iterator &x) const {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:bool
operator !=	extern/parallel_hashmap/btree.h	/^        bool operator!=(const iterator &x) const {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:bool
operator !=	extern/parallel_hashmap/btree.h	/^        friend bool operator!=(const btree_container &x, const btree_container &y) { return !(x /;"	f	namespace:phmap::priv	typeref:typename:bool
operator !=	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator!=($/;"	f	namespace:phmap	typeref:typename:bool
operator !=	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator!=(compare_internal::OnlyLiteralZero<>,$/;"	f	namespace:phmap	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap.h	/^        friend bool operator!=(const const_iterator& a, const const_iterator& b) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap.h	/^        friend bool operator!=(const const_iterator& a, const const_iterator& b) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap.h	/^        friend bool operator!=(const iterator& a, const iterator& b) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap.h	/^        friend bool operator!=(const iterator& a, const iterator& b) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap.h	/^    friend bool operator!=(const BitMask& a, const BitMask& b) {$/;"	f	namespace:phmap::priv	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap.h	/^    friend bool operator!=(const parallel_hash_set& a, const parallel_hash_set& b) {$/;"	f	namespace:phmap::priv	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap.h	/^    friend bool operator!=(const raw_hash_set& a, const raw_hash_set& b) {$/;"	f	namespace:phmap::priv	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap_base.h	/^bool operator!=(Span<T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap_base.h	/^bool operator!=(Span<T> a, Span<const T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap_base.h	/^bool operator!=(Span<T> a, const U& b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap_base.h	/^bool operator!=(Span<const T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap_base.h	/^bool operator!=(const U& a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator!=(const U& v, const optional<T>& x)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (v!=* x))
operator !=	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator!=(const optional<T>& x, const U& v)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x!=v))
operator !=	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator!=(const optional<T>& x, const optional<U>& y)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x!=* y))
operator !=	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator!=(const optional<T>& x, nullopt_t) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator !=	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator!=(nullopt_t, const optional<T>& x) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator ""_json	extern/nlohmann_json/json.hpp	/^inline nlohmann::json operator "" _json(const char* s, std::size_t n)$/;"	f	namespace:literals::json_literals
operator ""_json_pointer	extern/nlohmann_json/json.hpp	/^inline nlohmann::json::json_pointer operator "" _json_pointer(const char* s, std::size_t n)$/;"	f	namespace:literals::json_literals
operator ()	extern/nlohmann_json/json.hpp	/^    auto operator()(BasicJsonType& j, T&& val) const noexcept(noexcept(to_json(j, std::forward<T/;"	f	struct:detail::to_json_fn	typeref:typename:auto
operator ()	extern/nlohmann_json/json.hpp	/^    auto operator()(const BasicJsonType& j, T&& val) const$/;"	f	struct:detail::from_json_fn	typeref:typename:auto
operator ()	extern/nlohmann_json/json.hpp	/^    bool operator()(::nlohmann::detail::value_t lhs,$/;"	f	struct:std::less	typeref:typename:bool
operator ()	extern/nlohmann_json/json.hpp	/^    std::size_t operator()(const nlohmann::NLOHMANN_BASIC_JSON_TPL& j) const$/;"	f	struct:std::hash	typeref:typename:std::size_t
operator ()	extern/parallel_hashmap/btree.h	/^            auto operator()(const T &left, const U &right) const$/;"	f	struct:phmap::priv::map_params::value_compare	typeref:typename:decltype(std::declval<key_compare> ()(left.first,right.first))
operator ()	extern/parallel_hashmap/btree.h	/^        bool operator()(const K &a, const LK &b) const {$/;"	f	struct:phmap::priv::upper_bound_adapter	typeref:typename:bool
operator ()	extern/parallel_hashmap/btree.h	/^        phmap::weak_ordering operator()(std::string lhs,$/;"	f	struct:phmap::priv::StringBtreeDefaultGreater	typeref:typename:phmap::weak_ordering
operator ()	extern/parallel_hashmap/btree.h	/^        phmap::weak_ordering operator()(std::string lhs,$/;"	f	struct:phmap::priv::StringBtreeDefaultLess	typeref:typename:phmap::weak_ordering
operator ()	extern/parallel_hashmap/btree.h	/^        phmap::weak_ordering operator()(std::string_view lhs,$/;"	f	struct:phmap::priv::StringBtreeDefaultGreater	typeref:typename:phmap::weak_ordering
operator ()	extern/parallel_hashmap/btree.h	/^        phmap::weak_ordering operator()(std::string_view lhs,$/;"	f	struct:phmap::priv::StringBtreeDefaultLess	typeref:typename:phmap::weak_ordering
operator ()	extern/parallel_hashmap/phmap.h	/^        bool operator()(const A& a, const B& b) const {$/;"	f	struct:phmap::priv::HashEq::Eq	typeref:typename:bool
operator ()	extern/parallel_hashmap/phmap.h	/^        bool operator()(const K2& lhs, Args&&...) const {$/;"	f	struct:phmap::priv::parallel_hash_set::EqualElement	typeref:typename:bool
operator ()	extern/parallel_hashmap/phmap.h	/^        bool operator()(const K2& lhs, Args&&...) const {$/;"	f	struct:phmap::priv::raw_hash_set::EqualElement	typeref:typename:bool
operator ()	extern/parallel_hashmap/phmap.h	/^        bool operator()(std::basic_string_view<CharT> lhs,$/;"	f	struct:phmap::priv::StringHashEqT::Eq	typeref:typename:bool
operator ()	extern/parallel_hashmap/phmap.h	/^        const_iterator operator()(const K& key, Args&&...) const {$/;"	f	struct:phmap::priv::parallel_hash_set::FindElement	typeref:typename:const_iterator
operator ()	extern/parallel_hashmap/phmap.h	/^        const_iterator operator()(const K& key, Args&&...) const {$/;"	f	struct:phmap::priv::raw_hash_set::FindElement	typeref:typename:const_iterator
operator ()	extern/parallel_hashmap/phmap.h	/^        size_t operator()(const K& key, Args&&...) const {$/;"	f	struct:phmap::priv::parallel_hash_set::HashElement	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap.h	/^        size_t operator()(const K& key, Args&&...) const {$/;"	f	struct:phmap::priv::raw_hash_set::HashElement	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap.h	/^        size_t operator()(const U& ptr) const {$/;"	f	struct:phmap::priv::HashEq::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap.h	/^        size_t operator()(std::basic_string_view<CharT> v) const {$/;"	f	struct:phmap::priv::StringHashEqT::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap.h	/^        std::pair<iterator, bool> operator()(const K& key, Args&&... args) const {$/;"	f	struct:phmap::priv::parallel_hash_set::EmplaceDecomposable	typeref:typename:std::pair<iterator,bool>
operator ()	extern/parallel_hashmap/phmap.h	/^        std::pair<iterator, bool> operator()(const K& key, Args&&... args) const {$/;"	f	struct:phmap::priv::parallel_hash_set::EmplaceDecomposableHashval	typeref:typename:std::pair<iterator,bool>
operator ()	extern/parallel_hashmap/phmap.h	/^        std::pair<iterator, bool> operator()(const K& key, Args&&... args) const {$/;"	f	struct:phmap::priv::raw_hash_set::EmplaceDecomposable	typeref:typename:std::pair<iterator,bool>
operator ()	extern/parallel_hashmap/phmap.h	/^        std::pair<iterator, bool> operator()(const K& key, Args&&... args) const {$/;"	f	struct:phmap::priv::raw_hash_set::EmplaceDecomposableHashval	typeref:typename:std::pair<iterator,bool>
operator ()	extern/parallel_hashmap/phmap.h	/^        std::pair<iterator, bool> operator()(const K& key, Args&&...) && {$/;"	f	struct:phmap::priv::raw_hash_set::InsertSlot	typeref:typename:std::pair<iterator,bool>
operator ()	extern/parallel_hashmap/phmap.h	/^        std::pair<iterator, bool> operator()(const K& key, Args&&...) && {$/;"	f	struct:phmap::priv::raw_hash_set::InsertSlotWithHash	typeref:typename:std::pair<iterator,bool>
operator ()	extern/parallel_hashmap/phmap.h	/^        void operator()(Args&&... args) const {$/;"	f	class:phmap::priv::raw_hash_set::constructor	typeref:typename:void
operator ()	extern/parallel_hashmap/phmap.h	/^    decltype(std::declval<F>()(std::declval<T>())) operator()($/;"	f	struct:phmap::priv::memory_internal::WithConstructedImplF	typeref:typename:decltype(std::declval<F> ()(std::declval<T> ()))
operator ()	extern/parallel_hashmap/phmap_base.h	/^    inline bool operator()(const T& a, const T& b) const$/;"	f	struct:phmap::EqualTo	typeref:typename:bool
operator ()	extern/parallel_hashmap/phmap_base.h	/^    inline bool operator()(const T& a, const T& b) const$/;"	f	struct:phmap::Less	typeref:typename:bool
operator ()	extern/parallel_hashmap/phmap_base.h	/^    size_t operator()(const phmap::optional<T>& opt) const {$/;"	f	struct:phmap::optional_internal::optional_hash_base	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^        inline size_t operator()(size_t a) const$/;"	f	struct:phmap::phmap_mix	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    H operator()(H h, size_t k)$/;"	f	struct:phmap::Combiner	typeref:typename:H
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    H operator()(H h1, size_t k1)$/;"	f	struct:phmap::Combiner	typeref:typename:H
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(bool val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(char val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(const T& val) const$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(double val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(float val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(int16_t val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(int32_t val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(int64_t val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(signed char val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(size_t a) const$/;"	f	struct:phmap::phmap_mix	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(uint16_t val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(uint32_t val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(uint64_t a) const$/;"	f	struct:phmap::fold_if_needed	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(uint64_t val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(unsigned char val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    inline size_t operator()(wchar_t val) const noexcept$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    size_t operator()(std::pair<T1, T2> const& p) const noexcept {$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator ()	extern/parallel_hashmap/phmap_utils.h	/^    size_t operator()(std::tuple<T...> const& t) const noexcept {$/;"	f	struct:phmap::Hash	typeref:typename:size_t
operator *	extern/nlohmann_json/json.hpp	/^    const iteration_proxy_value& operator*() const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:const iteration_proxy_value &
operator *	extern/nlohmann_json/json.hpp	/^    reference operator*() const$/;"	f	class:detail::iter_impl	typeref:typename:reference
operator *	extern/nlohmann_json/json.hpp	/^    value_type const& operator*() const$/;"	f	class:detail::json_ref	typeref:typename:value_type const &
operator *	extern/parallel_hashmap/btree.h	/^        reference operator*() const {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:reference
operator *	extern/parallel_hashmap/phmap.h	/^        reference operator*()  const { return *(iter_); }$/;"	f	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:reference
operator *	extern/parallel_hashmap/phmap.h	/^        reference operator*()  const { return *it_; }$/;"	f	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:reference
operator *	extern/parallel_hashmap/phmap.h	/^        reference operator*() const { return *inner_; }$/;"	f	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:reference
operator *	extern/parallel_hashmap/phmap.h	/^        reference operator*() const { return PolicyTraits::element(slot_); }$/;"	f	class:phmap::priv::raw_hash_set::iterator	typeref:typename:reference
operator *	extern/parallel_hashmap/phmap.h	/^    uint32_t operator*() const { return LowestBitSet(); }$/;"	f	class:phmap::priv::BitMask	typeref:typename:uint32_t
operator *	extern/parallel_hashmap/phmap_base.h	/^    T& operator*() & {$/;"	f	class:phmap::optional	typeref:typename:T &
operator *	extern/parallel_hashmap/phmap_base.h	/^    T&& operator*() && {$/;"	f	class:phmap::optional	typeref:typename:T &&
operator *	extern/parallel_hashmap/phmap_base.h	/^    constexpr const T& operator*() const & { return reference(); }$/;"	f	class:phmap::optional	typeref:typename:const T &
operator *	extern/parallel_hashmap/phmap_base.h	/^    constexpr const T&& operator*() const && {$/;"	f	class:phmap::optional	typeref:typename:const T &&
operator +	extern/nlohmann_json/json.hpp	/^    friend iter_impl operator+(difference_type i, const iter_impl& it)$/;"	f	namespace:detail	typeref:typename:iter_impl
operator +	extern/nlohmann_json/json.hpp	/^    iter_impl operator+(difference_type i) const$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator +	extern/nlohmann_json/json.hpp	/^    json_reverse_iterator operator+(difference_type i) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator +	extern/nlohmann_json/json.hpp	/^    primitive_iterator_t operator+(difference_type n) noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator ++	extern/nlohmann_json/json.hpp	/^    iter_impl operator++(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator ++	extern/nlohmann_json/json.hpp	/^    iter_impl& operator++()$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator ++	extern/nlohmann_json/json.hpp	/^    iteration_proxy_value operator++(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::iteration_proxy_value	typeref:typename:iteration_proxy_value
operator ++	extern/nlohmann_json/json.hpp	/^    iteration_proxy_value& operator++()$/;"	f	class:detail::iteration_proxy_value	typeref:typename:iteration_proxy_value &
operator ++	extern/nlohmann_json/json.hpp	/^    json_reverse_iterator operator++(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator ++	extern/nlohmann_json/json.hpp	/^    json_reverse_iterator& operator++()$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator ++	extern/nlohmann_json/json.hpp	/^    primitive_iterator_t operator++(int)& noexcept \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator ++	extern/nlohmann_json/json.hpp	/^    primitive_iterator_t& operator++() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator ++	extern/parallel_hashmap/btree.h	/^        btree_iterator operator++(int) {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:btree_iterator
operator ++	extern/parallel_hashmap/btree.h	/^        btree_iterator& operator++() {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:btree_iterator &
operator ++	extern/parallel_hashmap/phmap.h	/^        const_iterator operator++(int) { return inner_++; }$/;"	f	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:const_iterator
operator ++	extern/parallel_hashmap/phmap.h	/^        const_iterator operator++(int) { return iter_++; }$/;"	f	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:const_iterator
operator ++	extern/parallel_hashmap/phmap.h	/^        const_iterator& operator++() {$/;"	f	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:const_iterator &
operator ++	extern/parallel_hashmap/phmap.h	/^        const_iterator& operator++() {$/;"	f	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:const_iterator &
operator ++	extern/parallel_hashmap/phmap.h	/^        iterator operator++(int) {$/;"	f	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:iterator
operator ++	extern/parallel_hashmap/phmap.h	/^        iterator operator++(int) {$/;"	f	class:phmap::priv::raw_hash_set::iterator	typeref:typename:iterator
operator ++	extern/parallel_hashmap/phmap.h	/^        iterator& operator++() {$/;"	f	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:iterator &
operator ++	extern/parallel_hashmap/phmap.h	/^        iterator& operator++() {$/;"	f	class:phmap::priv::raw_hash_set::iterator	typeref:typename:iterator &
operator ++	extern/parallel_hashmap/phmap.h	/^    BitMask& operator++() {    \/\/ ++iterator$/;"	f	class:phmap::priv::BitMask	typeref:typename:BitMask &
operator +=	extern/nlohmann_json/json.hpp	/^    iter_impl& operator+=(difference_type i)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator +=	extern/nlohmann_json/json.hpp	/^    json_reverse_iterator& operator+=(difference_type i)$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator +=	extern/nlohmann_json/json.hpp	/^    primitive_iterator_t& operator+=(difference_type n) noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator +=	extern/nlohmann_json/json.hpp	/^    reference operator+=(basic_json&& val)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/nlohmann_json/json.hpp	/^    reference operator+=(const basic_json& val)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/nlohmann_json/json.hpp	/^    reference operator+=(const typename object_t::value_type& val)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/nlohmann_json/json.hpp	/^    reference operator+=(initializer_list_t init)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/parallel_hashmap/btree.h	/^            node_stats& operator+=(const node_stats &x) {$/;"	f	struct:phmap::priv::btree::node_stats	typeref:typename:node_stats &
operator -	extern/nlohmann_json/json.hpp	/^    difference_type operator-(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:difference_type
operator -	extern/nlohmann_json/json.hpp	/^    difference_type operator-(const json_reverse_iterator& other) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:difference_type
operator -	extern/nlohmann_json/json.hpp	/^    friend constexpr difference_type operator-(primitive_iterator_t lhs, primitive_iterator_t rh/;"	f	namespace:detail	typeref:typename:difference_type
operator -	extern/nlohmann_json/json.hpp	/^    iter_impl operator-(difference_type i) const$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator -	extern/nlohmann_json/json.hpp	/^    json_reverse_iterator operator-(difference_type i) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator --	extern/nlohmann_json/json.hpp	/^    iter_impl operator--(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator --	extern/nlohmann_json/json.hpp	/^    iter_impl& operator--()$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator --	extern/nlohmann_json/json.hpp	/^    json_reverse_iterator operator--(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator --	extern/nlohmann_json/json.hpp	/^    json_reverse_iterator& operator--()$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator --	extern/nlohmann_json/json.hpp	/^    primitive_iterator_t operator--(int)& noexcept \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator --	extern/nlohmann_json/json.hpp	/^    primitive_iterator_t& operator--() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator --	extern/parallel_hashmap/btree.h	/^        btree_iterator operator--(int) {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:btree_iterator
operator --	extern/parallel_hashmap/btree.h	/^        btree_iterator& operator--() {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:btree_iterator &
operator --	extern/parallel_hashmap/phmap.h	/^        iterator operator--(int) {$/;"	f	class:phmap::priv::raw_hash_set::iterator	typeref:typename:iterator
operator --	extern/parallel_hashmap/phmap.h	/^        iterator& operator--() {$/;"	f	class:phmap::priv::raw_hash_set::iterator	typeref:typename:iterator &
operator -=	extern/nlohmann_json/json.hpp	/^    iter_impl& operator-=(difference_type i)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator -=	extern/nlohmann_json/json.hpp	/^    primitive_iterator_t& operator-=(difference_type n) noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator ->	extern/nlohmann_json/json.hpp	/^    pointer operator->() const$/;"	f	class:detail::iter_impl	typeref:typename:pointer
operator ->	extern/nlohmann_json/json.hpp	/^    value_type const* operator->() const$/;"	f	class:detail::json_ref	typeref:typename:value_type const *
operator ->	extern/parallel_hashmap/btree.h	/^        pointer operator->() const {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:pointer
operator ->	extern/parallel_hashmap/phmap.h	/^        pointer   operator->() const { return &operator*(); }$/;"	f	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:pointer
operator ->	extern/parallel_hashmap/phmap.h	/^        pointer   operator->() const { return iter_.operator->(); }$/;"	f	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:pointer
operator ->	extern/parallel_hashmap/phmap.h	/^        pointer operator->() const { return &operator*(); }$/;"	f	class:phmap::priv::raw_hash_set::iterator	typeref:typename:pointer
operator ->	extern/parallel_hashmap/phmap.h	/^        pointer operator->() const { return inner_.operator->(); }$/;"	f	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:pointer
operator ->	extern/parallel_hashmap/phmap_base.h	/^    T* operator->() {$/;"	f	class:phmap::optional	typeref:typename:T *
operator ->	extern/parallel_hashmap/phmap_base.h	/^    const T* operator->() const {$/;"	f	class:phmap::optional	typeref:typename:const T *
operator /	extern/nlohmann_json/json.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs, std::size_t array_idx)$/;"	f	typeref:typename:json_pointer
operator /	extern/nlohmann_json/json.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs, string_t token) \/\/ NOLINT(performa/;"	f	typeref:typename:json_pointer
operator /	extern/nlohmann_json/json.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs,$/;"	f	typeref:typename:json_pointer
operator /=	extern/nlohmann_json/json.hpp	/^    json_pointer& operator\/=(const json_pointer& ptr)$/;"	f	class:json_pointer	typeref:typename:json_pointer &
operator /=	extern/nlohmann_json/json.hpp	/^    json_pointer& operator\/=(std::size_t array_idx)$/;"	f	class:json_pointer	typeref:typename:json_pointer &
operator /=	extern/nlohmann_json/json.hpp	/^    json_pointer& operator\/=(string_t token)$/;"	f	class:json_pointer	typeref:typename:json_pointer &
operator <	extern/nlohmann_json/json.hpp	/^    bool operator<(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator <	extern/nlohmann_json/json.hpp	/^    friend constexpr bool operator<(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcept$/;"	f	namespace:detail	typeref:typename:bool
operator <	extern/nlohmann_json/json.hpp	/^inline bool operator<(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:bool
operator <	extern/nlohmann_json/json.hpp	/^inline bool operator<(const value_t lhs, const value_t rhs) noexcept$/;"	f	namespace:detail	typeref:typename:bool
operator <	extern/parallel_hashmap/btree.h	/^        friend bool operator<(const btree_container &x, const btree_container &y) {$/;"	f	namespace:phmap::priv	typeref:typename:bool
operator <	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator<($/;"	f	namespace:phmap	typeref:typename:bool
operator <	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator<(compare_internal::OnlyLiteralZero<>,$/;"	f	namespace:phmap	typeref:typename:bool
operator <	extern/parallel_hashmap/phmap_base.h	/^bool operator<(Span<T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <	extern/parallel_hashmap/phmap_base.h	/^bool operator<(Span<T> a, Span<const T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <	extern/parallel_hashmap/phmap_base.h	/^bool operator<(Span<T> a, const U& b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <	extern/parallel_hashmap/phmap_base.h	/^bool operator<(Span<const T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <	extern/parallel_hashmap/phmap_base.h	/^bool operator<(const U& a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator<(const U& v, const optional<T>& x)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (v<* x))
operator <	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator<(const optional<T>& x, const U& v)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x<v))
operator <	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator<(const optional<T>& x, const optional<U>& y)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x<* y))
operator <	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator<(const optional<T>&, nullopt_t) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator <	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator<(nullopt_t, const optional<T>& x) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator <<	extern/nlohmann_json/json.hpp	/^    friend std::istream& operator<<(basic_json& j, std::istream& i)$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.0.0,operator>> (std::istream &,basic_json &))std::istream &
operator <<	extern/nlohmann_json/json.hpp	/^    friend std::ostream& operator<<(std::ostream& o, const basic_json& j)$/;"	f	typeref:typename:std::ostream &
operator <<	extern/nlohmann_json/json.hpp	/^    friend std::ostream& operator<<(std::ostream& o, const json_pointer& ptr)$/;"	f	typeref:typename:std::ostream &
operator <=	extern/nlohmann_json/json.hpp	/^    bool operator<=(ScalarType rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> bool
operator <=	extern/nlohmann_json/json.hpp	/^    bool operator<=(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator <=	extern/nlohmann_json/json.hpp	/^    bool operator<=(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,undef JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON)bool
operator <=	extern/parallel_hashmap/btree.h	/^        friend bool operator<=(const btree_container &x, const btree_container &y) { return !(y /;"	f	namespace:phmap::priv	typeref:typename:bool
operator <=	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator<=($/;"	f	namespace:phmap	typeref:typename:bool
operator <=	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator<=(compare_internal::OnlyLiteralZero<>,$/;"	f	namespace:phmap	typeref:typename:bool
operator <=	extern/parallel_hashmap/phmap_base.h	/^bool operator<=(Span<T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <=	extern/parallel_hashmap/phmap_base.h	/^bool operator<=(Span<T> a, Span<const T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <=	extern/parallel_hashmap/phmap_base.h	/^bool operator<=(Span<T> a, const U& b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <=	extern/parallel_hashmap/phmap_base.h	/^bool operator<=(Span<const T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <=	extern/parallel_hashmap/phmap_base.h	/^bool operator<=(const U& a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator <=	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator<=(const U& v, const optional<T>& x)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (v<=* x))
operator <=	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator<=(const optional<T>& x, const U& v)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x<=v))
operator <=	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator<=(const optional<T>& x, const optional<U>& y)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x<=* y))
operator <=	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator<=(const optional<T>& x, nullopt_t) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator <=	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator<=(nullopt_t, const optional<T>&) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator <=>	extern/nlohmann_json/json.hpp	/^    inline std::partial_ordering operator<=>(const value_t lhs, const value_t rhs) noexcept \/\//;"	f	namespace:detail	typeref:typename:std::partial_ordering
operator <=>	extern/nlohmann_json/json.hpp	/^    std::partial_ordering operator<=>(ScalarType rhs) const noexcept \/\/ *NOPAD*$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> std::partial_ordering
operator <=>	extern/nlohmann_json/json.hpp	/^    std::partial_ordering operator<=>(const_reference rhs) const noexcept \/\/ *NOPAD*$/;"	f	class:basic_json	typeref:typename:std::partial_ordering
operator <=>	extern/nlohmann_json/json.hpp	/^    std::strong_ordering operator<=>(const json_pointer<RefStringTypeRhs>& rhs) const noexcept \//;"	f	class:json_pointer	typeref:typename:std::strong_ordering
operator =	extern/atomic_queue/atomic_queue.h	/^    AtomicQueueB& operator=(AtomicQueueB&& b) noexcept {$/;"	f	class:atomic_queue::AtomicQueueB	typeref:typename:AtomicQueueB &
operator =	extern/atomic_queue/atomic_queue.h	/^    AtomicQueueB2& operator=(AtomicQueueB2&& b) noexcept {$/;"	f	class:atomic_queue::AtomicQueueB2	typeref:typename:AtomicQueueB2 &
operator =	extern/atomic_queue/atomic_queue.h	/^    AtomicQueueCommon& operator=(AtomicQueueCommon const& b) noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:AtomicQueueCommon &
operator =	extern/nlohmann_json/json.hpp	/^    basic_json& operator=(basic_json other) noexcept ($/;"	f	class:basic_json	typeref:typename:basic_json &
operator =	extern/nlohmann_json/json.hpp	/^    iter_impl& operator=(const iter_impl<const BasicJsonType>& other) noexcept$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator =	extern/nlohmann_json/json.hpp	/^    iter_impl& operator=(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator =	extern/parallel_hashmap/btree.h	/^    auto btree<P>::operator=(btree &&x) noexcept -> btree & {$/;"	f	class:phmap::priv::btree	typeref:typename:auto
operator =	extern/parallel_hashmap/btree.h	/^    auto btree<P>::operator=(const btree &x) -> btree & {$/;"	f	class:phmap::priv::btree	typeref:typename:btree &
operator =	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set& operator=(const parallel_hash_set& that) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:parallel_hash_set &
operator =	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set& operator=(parallel_hash_set&& that) noexcept($/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:parallel_hash_set &
operator =	extern/parallel_hashmap/phmap.h	/^    raw_hash_set& operator=(const raw_hash_set& that) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:raw_hash_set &
operator =	extern/parallel_hashmap/phmap.h	/^    raw_hash_set& operator=(raw_hash_set&& that) noexcept($/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:raw_hash_set &
operator =	extern/parallel_hashmap/phmap_base.h	/^        DoNothing& operator=(DoNothing&&) { return *this; }$/;"	f	struct:phmap::LockableBaseImpl::DoNothing	typeref:typename:DoNothing &
operator =	extern/parallel_hashmap/phmap_base.h	/^        DoNothing& operator=(const DoNothing&) { return *this; }$/;"	f	struct:phmap::LockableBaseImpl::DoNothing	typeref:typename:DoNothing &
operator =	extern/parallel_hashmap/phmap_base.h	/^        ReadLock& operator=(ReadLock&& other) {$/;"	f	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:ReadLock &
operator =	extern/parallel_hashmap/phmap_base.h	/^        WriteLock& operator=(WriteLock&& other) {$/;"	f	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:WriteLock &
operator =	extern/parallel_hashmap/phmap_base.h	/^        optional& operator=(U&& v) {$/;"	f	class:phmap::optional	typeref:typename:optional &
operator =	extern/parallel_hashmap/phmap_base.h	/^        optional& operator=(const optional<U>& rhs) {$/;"	f	class:phmap::optional	typeref:typename:optional &
operator =	extern/parallel_hashmap/phmap_base.h	/^        optional& operator=(optional<U>&& rhs) {$/;"	f	class:phmap::optional	typeref:typename:optional &
operator =	extern/parallel_hashmap/phmap_base.h	/^    node_handle_base& operator=(node_handle_base&& other) noexcept {$/;"	f	class:phmap::priv::node_handle_base	typeref:typename:node_handle_base &
operator =	extern/parallel_hashmap/phmap_base.h	/^    optional& operator=(nullopt_t) noexcept {$/;"	f	class:phmap::optional	typeref:typename:optional &
operator =	extern/parallel_hashmap/phmap_base.h	/^    optional_data& operator=(const optional_data& rhs) {$/;"	f	class:phmap::optional_internal::optional_data	typeref:typename:optional_data &
operator =	extern/parallel_hashmap/phmap_base.h	/^    optional_data& operator=(optional_data&& rhs) noexcept($/;"	f	class:phmap::optional_internal::optional_data	typeref:typename:optional_data &
operator ==	extern/nlohmann_json/json.hpp	/^    bool operator==(ScalarType rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> bool
operator ==	extern/nlohmann_json/json.hpp	/^    bool operator==(const IterImpl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator ==	extern/nlohmann_json/json.hpp	/^    bool operator==(const byte_container_with_subtype& rhs) const$/;"	f	class:byte_container_with_subtype	typeref:typename:bool
operator ==	extern/nlohmann_json/json.hpp	/^    bool operator==(const iteration_proxy_value& o) const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:bool
operator ==	extern/nlohmann_json/json.hpp	/^    bool operator==(const json_pointer<RefStringTypeRhs>& rhs) const noexcept$/;"	f	class:json_pointer	typeref:typename:bool
operator ==	extern/nlohmann_json/json.hpp	/^    bool operator==(const string_t& rhs) const$/;"	f	class:json_pointer	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator==(json_pointer))bool
operator ==	extern/nlohmann_json/json.hpp	/^    bool operator==(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:bool
operator ==	extern/nlohmann_json/json.hpp	/^    friend constexpr bool operator==(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcep/;"	f	namespace:detail	typeref:typename:bool
operator ==	extern/nlohmann_json/json.hpp	/^inline bool operator==(const StringType& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator==(json_pointer,json_pointer))bool
operator ==	extern/nlohmann_json/json.hpp	/^inline bool operator==(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator==(json_pointer,json_pointer))bool
operator ==	extern/nlohmann_json/json.hpp	/^inline bool operator==(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:bool
operator ==	extern/parallel_hashmap/btree.h	/^        bool operator==(const const_iterator &x) const {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:bool
operator ==	extern/parallel_hashmap/btree.h	/^        bool operator==(const iterator &x) const {$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:bool
operator ==	extern/parallel_hashmap/btree.h	/^        friend bool operator==(const btree_container &x, const btree_container &y) {$/;"	f	namespace:phmap::priv	typeref:typename:bool
operator ==	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator==($/;"	f	namespace:phmap	typeref:typename:bool
operator ==	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator==(compare_internal::OnlyLiteralZero<>,$/;"	f	namespace:phmap	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap.h	/^        bool operator==(const Inner& o) const$/;"	f	struct:phmap::priv::parallel_hash_set::Inner	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap.h	/^        friend bool operator==(const const_iterator& a, const const_iterator& b) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap.h	/^        friend bool operator==(const const_iterator& a, const const_iterator& b) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap.h	/^        friend bool operator==(const iterator& a, const iterator& b) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap.h	/^        friend bool operator==(const iterator& a, const iterator& b) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap.h	/^    friend bool operator==(const BitMask& a, const BitMask& b) {$/;"	f	namespace:phmap::priv	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap.h	/^    friend bool operator==(const parallel_hash_set& a, const parallel_hash_set& b) {$/;"	f	namespace:phmap::priv	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap.h	/^    friend bool operator==(const raw_hash_set& a, const raw_hash_set& b) {$/;"	f	namespace:phmap::priv	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap_base.h	/^bool operator==(Span<T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap_base.h	/^bool operator==(Span<T> a, Span<const T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap_base.h	/^bool operator==(Span<T> a, const U& b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap_base.h	/^bool operator==(Span<const T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap_base.h	/^bool operator==(const U& a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator==(const U& v, const optional<T>& x)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (v==* x))
operator ==	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator==(const optional<T>& x, const U& v)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x==v))
operator ==	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator==(const optional<T>& x, const optional<U>& y)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x==* y))
operator ==	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator==(const optional<T>& x, nullopt_t) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator ==	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator==(nullopt_t, const optional<T>& x) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator >	extern/nlohmann_json/json.hpp	/^    bool operator>(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator >	extern/parallel_hashmap/btree.h	/^        friend bool operator>(const btree_container &x, const btree_container &y) { return y < x/;"	f	namespace:phmap::priv	typeref:typename:bool
operator >	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator>($/;"	f	namespace:phmap	typeref:typename:bool
operator >	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator>(compare_internal::OnlyLiteralZero<>,$/;"	f	namespace:phmap	typeref:typename:bool
operator >	extern/parallel_hashmap/phmap_base.h	/^bool operator>(Span<T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >	extern/parallel_hashmap/phmap_base.h	/^bool operator>(Span<T> a, Span<const T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >	extern/parallel_hashmap/phmap_base.h	/^bool operator>(Span<T> a, const U& b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >	extern/parallel_hashmap/phmap_base.h	/^bool operator>(Span<const T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >	extern/parallel_hashmap/phmap_base.h	/^bool operator>(const U& a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator>(const U& v, const optional<T>& x)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (v> * x))
operator >	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator>(const optional<T>& x, const U& v)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x> v))
operator >	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator>(const optional<T>& x, const optional<U>& y)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x> * y))
operator >	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator>(const optional<T>& x, nullopt_t) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator >	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator>(nullopt_t, const optional<T>&) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator >=	extern/nlohmann_json/json.hpp	/^    bool operator>=(ScalarType rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> bool
operator >=	extern/nlohmann_json/json.hpp	/^    bool operator>=(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator >=	extern/nlohmann_json/json.hpp	/^    bool operator>=(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,undef JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON)bool
operator >=	extern/parallel_hashmap/btree.h	/^        friend bool operator>=(const btree_container &x, const btree_container &y) { return !(x /;"	f	namespace:phmap::priv	typeref:typename:bool
operator >=	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator>=($/;"	f	namespace:phmap	typeref:typename:bool
operator >=	extern/parallel_hashmap/btree.h	/^        friend constexpr bool operator>=(compare_internal::OnlyLiteralZero<>,$/;"	f	namespace:phmap	typeref:typename:bool
operator >=	extern/parallel_hashmap/phmap_base.h	/^bool operator>=(Span<T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >=	extern/parallel_hashmap/phmap_base.h	/^bool operator>=(Span<T> a, Span<const T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >=	extern/parallel_hashmap/phmap_base.h	/^bool operator>=(Span<T> a, const U& b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >=	extern/parallel_hashmap/phmap_base.h	/^bool operator>=(Span<const T> a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >=	extern/parallel_hashmap/phmap_base.h	/^bool operator>=(const U& a, Span<T> b) {$/;"	f	namespace:phmap	typeref:typename:bool
operator >=	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator>=(const U& v, const optional<T>& x)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (v>=* x))
operator >=	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator>=(const optional<T>& x, const U& v)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x>=v))
operator >=	extern/parallel_hashmap/phmap_base.h	/^constexpr auto operator>=(const optional<T>& x, const optional<U>& y)$/;"	f	namespace:phmap	typeref:typename:decltype(optional_internal::convertible_to_bool (* x>=* y))
operator >=	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator>=(const optional<T>&, nullopt_t) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator >=	extern/parallel_hashmap/phmap_base.h	/^constexpr bool operator>=(nullopt_t, const optional<T>& x) noexcept {$/;"	f	namespace:phmap	typeref:typename:bool
operator >>	extern/nlohmann_json/json.hpp	/^    friend std::istream& operator>>(std::istream& i, basic_json& j)$/;"	f	typeref:typename:std::istream &
operator >>	extern/nlohmann_json/json.hpp	/^    friend std::ostream& operator>>(const basic_json& j, std::ostream& o)$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.0.0,operator<<(std::ostream &,const basic_json &))std::ostream &
operator ValueType	extern/nlohmann_json/json.hpp	/^                                        JSON_EXPLICIT operator ValueType() const$/;"	f	class:basic_json	typeref:typename:JSON_EXPLICIT
operator []	extern/nlohmann_json/json.hpp	/^    T & operator[](KeyType && key)$/;"	f	struct:ordered_map	typeref:typename:T &
operator []	extern/nlohmann_json/json.hpp	/^    T& operator[](const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:T &
operator []	extern/nlohmann_json/json.hpp	/^    const T & operator[](KeyType && key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
operator []	extern/nlohmann_json/json.hpp	/^    const T& operator[](const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
operator []	extern/nlohmann_json/json.hpp	/^    const_reference operator[](KeyType && key) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/nlohmann_json/json.hpp	/^    const_reference operator[](T* key) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/nlohmann_json/json.hpp	/^    const_reference operator[](const ::nlohmann::json_pointer<BasicJsonType>& ptr) const$/;"	f	class:basic_json
operator []	extern/nlohmann_json/json.hpp	/^    const_reference operator[](const json_pointer& ptr) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/nlohmann_json/json.hpp	/^    const_reference operator[](const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/nlohmann_json/json.hpp	/^    const_reference operator[](size_type idx) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/nlohmann_json/json.hpp	/^    reference operator[](KeyType && key)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/nlohmann_json/json.hpp	/^    reference operator[](T* key)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/nlohmann_json/json.hpp	/^    reference operator[](const ::nlohmann::json_pointer<BasicJsonType>& ptr)$/;"	f	class:basic_json
operator []	extern/nlohmann_json/json.hpp	/^    reference operator[](const json_pointer& ptr)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/nlohmann_json/json.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:detail::iter_impl	typeref:typename:reference
operator []	extern/nlohmann_json/json.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:reference
operator []	extern/nlohmann_json/json.hpp	/^    reference operator[](size_type idx)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/nlohmann_json/json.hpp	/^    reference operator[](typename object_t::key_type key)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/parallel_hashmap/btree.h	/^        mapped_type &operator[](const key_type &k) {$/;"	f	class:phmap::priv::btree_map_container	typeref:typename:mapped_type &
operator []	extern/parallel_hashmap/btree.h	/^        mapped_type &operator[](key_type &&k) {$/;"	f	class:phmap::priv::btree_map_container	typeref:typename:mapped_type &
operator []	extern/parallel_hashmap/phmap.h	/^    MappedReference<P> operator[](const key_arg<K>& key) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:MappedReference<P>
operator []	extern/parallel_hashmap/phmap.h	/^    MappedReference<P> operator[](const key_arg<K>& key) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:MappedReference<P>
operator []	extern/parallel_hashmap/phmap.h	/^    MappedReference<P> operator[](key_arg<K>&& key) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:MappedReference<P>
operator []	extern/parallel_hashmap/phmap.h	/^    MappedReference<P> operator[](key_arg<K>&& key) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:MappedReference<P>
operator []	extern/parallel_hashmap/phmap_base.h	/^    constexpr reference operator[](size_type i) const noexcept {$/;"	f	class:phmap::Span	typeref:typename:reference
operator bool	extern/parallel_hashmap/phmap.h	/^    explicit operator bool() const { return mask_ != 0; }$/;"	f	class:phmap::priv::BitMask
operator bool	extern/parallel_hashmap/phmap_base.h	/^    constexpr explicit operator bool() const noexcept { return this->engaged_; }$/;"	f	class:phmap::optional
operator bool	extern/parallel_hashmap/phmap_base.h	/^    explicit operator bool() const noexcept { return !empty(); }$/;"	f	class:phmap::priv::node_handle_base
operator output_adapter_t<CharType>	extern/nlohmann_json/json.hpp	/^    operator output_adapter_t<CharType>()$/;"	f	class:detail::output_adapter
operator partial_ordering	extern/parallel_hashmap/btree.h	/^        constexpr operator partial_ordering() const noexcept {  \/\/ NOLINT$/;"	f	class:phmap::strong_ordering
operator partial_ordering	extern/parallel_hashmap/btree.h	/^        constexpr operator partial_ordering() const noexcept {  \/\/ NOLINT$/;"	f	class:phmap::weak_ordering
operator size_t	extern/nlohmann_json/json.hpp	/^    constexpr operator size_t() const$/;"	f	struct:detail::position_t
operator strong_equality	extern/parallel_hashmap/btree.h	/^        constexpr operator strong_equality() const noexcept {  \/\/ NOLINT$/;"	f	class:phmap::strong_ordering
operator value_t	extern/nlohmann_json/json.hpp	/^    constexpr operator value_t() const noexcept$/;"	f	class:basic_json
operator weak_ordering	extern/parallel_hashmap/btree.h	/^        constexpr operator weak_ordering() const noexcept {  \/\/ NOLINT$/;"	f	class:phmap::strong_ordering
optional	.vscode/settings.json	/^        "optional": "cpp",$/;"	s	object:files.associations
optional	extern/parallel_hashmap/phmap_base.h	/^        constexpr explicit optional(InPlaceT, Args&&... args)$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^        constexpr explicit optional(in_place_t, std::initializer_list<U> il,$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^        constexpr optional(U&& v) : data_base(in_place_t(), phmap::forward<U>(v)) {}$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^        explicit constexpr optional(U&& v)$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^        explicit optional(const optional<U>& rhs) {$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^        explicit optional(optional<U>&& rhs) {$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^        optional(optional<U>&& rhs) {$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^    constexpr optional() noexcept {}$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^    constexpr optional(nullopt_t) noexcept {}  \/\/ NOLINT(runtime\/explicit)$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^    optional(const optional<U>& rhs) {$/;"	f	class:phmap::optional
optional	extern/parallel_hashmap/phmap_base.h	/^class optional : private optional_internal::optional_data<T>,$/;"	c	namespace:phmap
optional_assign_base	extern/parallel_hashmap/phmap_base.h	/^class optional_assign_base<copy_traits::copyable> $/;"	c	namespace:phmap::optional_internal
optional_assign_base	extern/parallel_hashmap/phmap_base.h	/^class optional_assign_base<copy_traits::movable> $/;"	c	namespace:phmap::optional_internal
optional_assign_base	extern/parallel_hashmap/phmap_base.h	/^class optional_assign_base<copy_traits::non_movable> $/;"	c	namespace:phmap::optional_internal
optional_ctor_base	extern/parallel_hashmap/phmap_base.h	/^class optional_ctor_base<copy_traits::copyable> $/;"	c	namespace:phmap::optional_internal
optional_ctor_base	extern/parallel_hashmap/phmap_base.h	/^class optional_ctor_base<copy_traits::movable> $/;"	c	namespace:phmap::optional_internal
optional_ctor_base	extern/parallel_hashmap/phmap_base.h	/^class optional_ctor_base<copy_traits::non_movable> $/;"	c	namespace:phmap::optional_internal
optional_data	extern/parallel_hashmap/phmap_base.h	/^    optional_data(const optional_data& rhs) : optional_data_base<T>() {$/;"	f	class:phmap::optional_internal::optional_data
optional_data	extern/parallel_hashmap/phmap_base.h	/^    optional_data(optional_data&& rhs) noexcept($/;"	f	class:phmap::optional_internal::optional_data
optional_data	extern/parallel_hashmap/phmap_base.h	/^class optional_data<T, false> : public optional_data_base<T> $/;"	c	namespace:phmap::optional_internal
optional_data	extern/parallel_hashmap/phmap_base.h	/^class optional_data<T, true> : public optional_data_base<T> $/;"	c	namespace:phmap::optional_internal
optional_data_base	extern/parallel_hashmap/phmap_base.h	/^    constexpr explicit optional_data_base(in_place_t t, Args&&... args)$/;"	f	class:phmap::optional_internal::optional_data_base
optional_data_base	extern/parallel_hashmap/phmap_base.h	/^class optional_data_base : public optional_data_dtor_base<T> $/;"	c	namespace:phmap::optional_internal
optional_data_dtor_base	extern/parallel_hashmap/phmap_base.h	/^    constexpr explicit optional_data_dtor_base(in_place_t, Args&&... args)$/;"	f	class:phmap::optional_internal::optional_data_dtor_base
optional_data_dtor_base	extern/parallel_hashmap/phmap_base.h	/^    constexpr optional_data_dtor_base() noexcept : engaged_(false), dummy_{{}} {}$/;"	f	class:phmap::optional_internal::optional_data_dtor_base
optional_data_dtor_base	extern/parallel_hashmap/phmap_base.h	/^class optional_data_dtor_base $/;"	c	namespace:phmap::optional_internal
optional_data_dtor_base	extern/parallel_hashmap/phmap_base.h	/^class optional_data_dtor_base<T, true> $/;"	c	namespace:phmap::optional_internal
optional_hash_base	extern/parallel_hashmap/phmap_base.h	/^struct optional_hash_base $/;"	s	namespace:phmap::optional_internal
optional_hash_base	extern/parallel_hashmap/phmap_base.h	/^struct optional_hash_base<T, decltype(std::hash<phmap::remove_const_t<T> >()($/;"	s	namespace:phmap::optional_internal
optional_internal	extern/parallel_hashmap/phmap_base.h	/^namespace optional_internal {$/;"	n	namespace:phmap
or_equal	extern/atomic_queue/atomic_queue.h	/^constexpr T or_equal(T x, unsigned u) noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:T
or_equal	extern/atomic_queue/atomic_queue.h	/^constexpr T or_equal(T x, unsigned u, Args... rest) noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:T
ord	extern/parallel_hashmap/btree.h	/^        enum class ord : value_type { less = -1, greater = 1 };$/;"	g	namespace:phmap::compare_internal	typeref:typename:value_type
ordered_json	extern/nlohmann_json/json.hpp	/^    using ordered_json = basic_json<nlohmann::ordered_map>;$/;"	t	typeref:typename:basic_json<nlohmann::ordered_map>
ordered_map	extern/nlohmann_json/json.hpp	/^                  struct ordered_map : std::vector<std::pair<const Key, T>, Allocator>$/;"	s
ordered_map	extern/nlohmann_json/json.hpp	/^    explicit ordered_map(const Allocator& alloc) noexcept(noexcept(Container(alloc))) : Containe/;"	f	struct:ordered_map
ordered_map	extern/nlohmann_json/json.hpp	/^    ordered_map() noexcept(noexcept(Container())) : Container{} {}$/;"	f	struct:ordered_map
ordered_map	extern/nlohmann_json/json.hpp	/^    ordered_map(It first, It last, const Allocator& alloc = Allocator())$/;"	f	struct:ordered_map
ordered_map	extern/nlohmann_json/json.hpp	/^    ordered_map(std::initializer_list<value_type> init, const Allocator& alloc = Allocator() )$/;"	f	struct:ordered_map
original_theme_active	extern/doxygen-awesome-css/doxygen-custom/toggle-alternative-theme.js	/^let original_theme_active = true;$/;"	v
ostream	.vscode/settings.json	/^        "ostream": "cpp",$/;"	s	object:files.associations
other_array_t	extern/nlohmann_json/json.hpp	/^        using other_array_t = typename BasicJsonType::array_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::array_t
other_binary_t	extern/nlohmann_json/json.hpp	/^        using other_binary_t = typename BasicJsonType::binary_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::binary_t
other_boolean_t	extern/nlohmann_json/json.hpp	/^        using other_boolean_t = typename BasicJsonType::boolean_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::boolean_t
other_error	extern/nlohmann_json/json.hpp	/^    other_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:detail::other_error
other_error	extern/nlohmann_json/json.hpp	/^    using other_error = detail::other_error;$/;"	t	class:basic_json	typeref:typename:detail::other_error
other_error	extern/nlohmann_json/json.hpp	/^class other_error : public exception$/;"	c	namespace:detail
other_iter_impl	extern/nlohmann_json/json.hpp	/^    using other_iter_impl = iter_impl<typename std::conditional<std::is_const<BasicJsonType>::va/;"	t	class:detail::iter_impl
other_number_float_t	extern/nlohmann_json/json.hpp	/^        using other_number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::number_float_t
other_number_integer_t	extern/nlohmann_json/json.hpp	/^        using other_number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::number_integer_t
other_number_unsigned_t	extern/nlohmann_json/json.hpp	/^        using other_number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::number_unsigned_t
other_object_t	extern/nlohmann_json/json.hpp	/^        using other_object_t = typename BasicJsonType::object_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::object_t
other_string_t	extern/nlohmann_json/json.hpp	/^        using other_string_t = typename BasicJsonType::string_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::string_t
out_of_range	extern/nlohmann_json/json.hpp	/^    out_of_range(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:detail::out_of_range
out_of_range	extern/nlohmann_json/json.hpp	/^    using out_of_range = detail::out_of_range;$/;"	t	class:basic_json	typeref:typename:detail::out_of_range
out_of_range	extern/nlohmann_json/json.hpp	/^class out_of_range : public exception$/;"	c	namespace:detail
output_adapter	extern/nlohmann_json/json.hpp	/^    output_adapter(StringType& s)$/;"	f	class:detail::output_adapter
output_adapter	extern/nlohmann_json/json.hpp	/^    output_adapter(std::basic_ostream<CharType>& s)$/;"	f	class:detail::output_adapter
output_adapter	extern/nlohmann_json/json.hpp	/^    output_adapter(std::vector<CharType, AllocatorType>& vec)$/;"	f	class:detail::output_adapter
output_adapter	extern/nlohmann_json/json.hpp	/^class output_adapter$/;"	c	namespace:detail
output_adapter_protocol	extern/nlohmann_json/json.hpp	/^template<typename CharType> struct output_adapter_protocol$/;"	s	namespace:detail
output_adapter_t	extern/nlohmann_json/json.hpp	/^    using output_adapter_t = ::nlohmann::detail::output_adapter_t<CharType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::output_adapter_t<CharType>
output_adapter_t	extern/nlohmann_json/json.hpp	/^using output_adapter_t = std::shared_ptr<output_adapter_protocol<CharType>>;$/;"	t	namespace:detail	typeref:typename:std::shared_ptr<output_adapter_protocol<CharType>>
output_stream_adapter	extern/nlohmann_json/json.hpp	/^    explicit output_stream_adapter(std::basic_ostream<CharType>& s) noexcept$/;"	f	class:detail::output_stream_adapter
output_stream_adapter	extern/nlohmann_json/json.hpp	/^class output_stream_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:detail
output_string_adapter	extern/nlohmann_json/json.hpp	/^    explicit output_string_adapter(StringType& s) noexcept$/;"	f	class:detail::output_string_adapter
output_string_adapter	extern/nlohmann_json/json.hpp	/^class output_string_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:detail
output_vector_adapter	extern/nlohmann_json/json.hpp	/^    explicit output_vector_adapter(std::vector<CharType, AllocatorType>& vec) noexcept$/;"	f	class:detail::output_vector_adapter
output_vector_adapter	extern/nlohmann_json/json.hpp	/^class output_vector_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:detail
overhead	extern/parallel_hashmap/btree.h	/^        double overhead() const {$/;"	f	class:phmap::priv::btree	typeref:typename:double
owned_value	extern/nlohmann_json/json.hpp	/^    mutable value_type owned_value = nullptr;$/;"	m	class:detail::json_ref	typeref:typename:value_type
owns_lock	extern/parallel_hashmap/phmap_base.h	/^        bool owns_lock() const noexcept { return locked_; }$/;"	f	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:bool
owns_lock	extern/parallel_hashmap/phmap_base.h	/^        bool owns_lock() const noexcept { return locked_; }$/;"	f	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:bool
owns_lock	extern/parallel_hashmap/phmap_base.h	/^        bool owns_lock() const noexcept { return true; }$/;"	f	struct:phmap::LockableBaseImpl::DoNothing	typeref:typename:bool
p	extern/doxygen-awesome-css/doxygen-awesome.css	/^body, table, div, p, dl, #nav-tree .label, .title,$/;"	s
p	extern/doxygen-awesome-css/doxygen-awesome.css	/^p, div, table, dl, p.reference, p.definition {$/;"	s
p.definition	extern/doxygen-awesome-css/doxygen-awesome.css	/^.navpath li.navelem a:hover, p.reference, p.definition {$/;"	c
p.definition	extern/doxygen-awesome-css/doxygen-awesome.css	/^p, div, table, dl, p.reference, p.definition {$/;"	c
p.definition	extern/doxygen-awesome-css/doxygen-awesome.css	/^p.reference, p.definition {$/;"	c
p.reference	extern/doxygen-awesome-css/doxygen-awesome.css	/^.navpath li.navelem a:hover, p.reference, p.definition {$/;"	c
p.reference	extern/doxygen-awesome-css/doxygen-awesome.css	/^p, div, table, dl, p.reference, p.definition {$/;"	c
p.reference	extern/doxygen-awesome-css/doxygen-awesome.css	/^p.reference, p.definition {$/;"	c
parallelHashMap_t	include/hicr/common/parallelHashMap.hpp	/^using parallelHashMap_t = phmap::parallel_flat_hash_map<K, V, phmap::priv::hash_default_hash<K>,/;"	t	namespace:HiCR::common
parallelHashSet_t	include/hicr/common/parallelHashSet.hpp	/^using parallelHashSet_t = phmap::parallel_flat_hash_set<V, phmap::priv::hash_default_hash<V>, ph/;"	t	namespace:HiCR::common
parallel_flat_hash_map	extern/parallel_hashmap/phmap.h	/^    parallel_flat_hash_map() {}$/;"	f	class:phmap::parallel_flat_hash_map
parallel_flat_hash_map	extern/parallel_hashmap/phmap.h	/^class parallel_flat_hash_map : public phmap::priv::parallel_hash_map<$/;"	c	namespace:phmap
parallel_flat_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_flat_hash_set() {}$/;"	f	class:phmap::parallel_flat_hash_set
parallel_flat_hash_set	extern/parallel_hashmap/phmap.h	/^class parallel_flat_hash_set$/;"	c	namespace:phmap
parallel_hash_map	extern/parallel_hashmap/phmap.h	/^    parallel_hash_map() {}$/;"	f	class:phmap::priv::parallel_hash_map
parallel_hash_map	extern/parallel_hashmap/phmap.h	/^class parallel_hash_map : public parallel_hash_set<N, RefSet, Mtx_, Policy, Hash, Eq, Alloc> $/;"	c	namespace:phmap::priv
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    explicit parallel_hash_set(const allocator_type& alloc)$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    explicit parallel_hash_set(size_t bucket_cnt, $/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set() noexcept($/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(InputIter first, InputIter last, const allocator_type& alloc)$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(InputIter first, InputIter last, size_t bucket_cnt = 0,$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(InputIter first, InputIter last, size_t bucket_cnt,$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(const parallel_hash_set& that)$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(const parallel_hash_set& that, const allocator_type& a)$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(parallel_hash_set&& that) noexcept($/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(parallel_hash_set&& that, const allocator_type& a)$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(size_t bucket_cnt, $/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(size_t bucket_cnt, const allocator_type& alloc)$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(std::initializer_list<T> init, const allocator_type& alloc)$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(std::initializer_list<T> init, size_t bucket_cnt = 0,$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(std::initializer_list<T> init, size_t bucket_cnt,$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(std::initializer_list<init_type> init, size_t bucket_cnt = 0,$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(std::initializer_list<init_type> init, size_t bucket_cnt,$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(std::initializer_list<init_type> init,$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_hash_set(typename Inner::Params const &p,$/;"	f	class:phmap::priv::parallel_hash_set
parallel_hash_set	extern/parallel_hashmap/phmap.h	/^class parallel_hash_set $/;"	c	namespace:phmap::priv
parallel_node_hash_map	extern/parallel_hashmap/phmap.h	/^    parallel_node_hash_map() {}$/;"	f	class:phmap::parallel_node_hash_map
parallel_node_hash_map	extern/parallel_hashmap/phmap.h	/^class parallel_node_hash_map$/;"	c	namespace:phmap
parallel_node_hash_set	extern/parallel_hashmap/phmap.h	/^    parallel_node_hash_set() {}$/;"	f	class:phmap::parallel_node_hash_set
parallel_node_hash_set	extern/parallel_hashmap/phmap.h	/^class parallel_node_hash_set$/;"	c	namespace:phmap
params_type	extern/parallel_hashmap/btree.h	/^        using params_type = Params;$/;"	t	class:phmap::priv::btree	typeref:typename:Params
params_type	extern/parallel_hashmap/btree.h	/^        using params_type = Params;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params
params_type	extern/parallel_hashmap/btree.h	/^        using params_type = typename Node::params_type;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:Node::params_type
params_type	extern/parallel_hashmap/btree.h	/^        using params_type = typename Tree::params_type;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::params_type
params_type	extern/parallel_hashmap/btree.h	/^        using params_type = typename Tree::params_type;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:Tree::params_type
params_type	extern/parallel_hashmap/btree.h	/^        using params_type = typename Tree::params_type;$/;"	t	class:phmap::priv::btree_multimap_container	typeref:typename:Tree::params_type
params_type	extern/parallel_hashmap/btree.h	/^        using params_type = typename Tree::params_type;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:Tree::params_type
params_type	extern/parallel_hashmap/btree.h	/^        using params_type = typename Tree::params_type;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:Tree::params_type
parent	extern/parallel_hashmap/btree.h	/^            node_type *parent;$/;"	m	struct:phmap::priv::btree::EmptyNodeType	typeref:typename:node_type *
parent	extern/parallel_hashmap/btree.h	/^        btree_node *parent() const { return *GetField<0>(); }$/;"	f	class:phmap::priv::btree_node	typeref:typename:btree_node *
parent_pointer	extern/nlohmann_json/json.hpp	/^    json_pointer parent_pointer() const$/;"	f	class:json_pointer	typeref:typename:json_pointer
parse	extern/nlohmann_json/json.hpp	/^    static basic_json parse(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
parse	extern/nlohmann_json/json.hpp	/^    static basic_json parse(IteratorType first,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
parse	extern/nlohmann_json/json.hpp	/^    static basic_json parse(detail::span_input_adapter&& i,$/;"	f	class:basic_json
parse	extern/nlohmann_json/json.hpp	/^    void parse(const bool strict, BasicJsonType& result)$/;"	f	class:detail::parser	typeref:typename:void
parseMachineModel	examples/machineModel/source/include/coordinator.hpp	/^std::vector<HiCR::MachineModel::request_t> parseMachineModel(const nlohmann::json &machineModelJ/;"	f	typeref:typename:std::vector<HiCR::MachineModel::request_t>
parseMachineModel	examples/runtime/source/include/machineModel.hpp	/^std::vector<HiCR::MachineModel::request_t> parseMachineModel(const nlohmann::json &machineModelJ/;"	f	typeref:typename:std::vector<HiCR::MachineModel::request_t>
parseTopology	examples/machineModel/source/include/coordinator.hpp	/^HiCR::L0::Topology parseTopology(const nlohmann::json &topologyJson)$/;"	f	typeref:typename:HiCR::L0::Topology
parseTopology	examples/runtime/source/include/machineModel.hpp	/^HiCR::L0::Topology parseTopology(const nlohmann::json &topologyJson)$/;"	f	typeref:typename:HiCR::L0::Topology
parse_bson_array	extern/nlohmann_json/json.hpp	/^    bool parse_bson_array()$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_element_internal	extern/nlohmann_json/json.hpp	/^    bool parse_bson_element_internal(const char_int_type element_type,$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_element_list	extern/nlohmann_json/json.hpp	/^    bool parse_bson_element_list(const bool is_array)$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_internal	extern/nlohmann_json/json.hpp	/^    bool parse_bson_internal()$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_cbor_internal	extern/nlohmann_json/json.hpp	/^    bool parse_cbor_internal(const bool get_char,$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_error	extern/nlohmann_json/json.hpp	/^        parse_error,      \/\/\/< indicating a parse error$/;"	e	enum:detail::lexer_base::token_type
parse_error	extern/nlohmann_json/json.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const detail::ex/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
parse_error	extern/nlohmann_json/json.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
parse_error	extern/nlohmann_json/json.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
parse_error	extern/nlohmann_json/json.hpp	/^    parse_error(int id_, std::size_t byte_, const char* what_arg)$/;"	f	class:detail::parse_error
parse_error	extern/nlohmann_json/json.hpp	/^    using parse_error = detail::parse_error;$/;"	t	class:basic_json	typeref:typename:detail::parse_error
parse_error	extern/nlohmann_json/json.hpp	/^class parse_error : public exception$/;"	c	namespace:detail
parse_error_function_t	extern/nlohmann_json/json.hpp	/^using parse_error_function_t = decltype(std::declval<T&>().parse_error($/;"	t	namespace:detail
parse_event_t	extern/nlohmann_json/json.hpp	/^    using parse_event_t = detail::parse_event_t;$/;"	t	class:basic_json	typeref:typename:detail::parse_event_t
parse_event_t	extern/nlohmann_json/json.hpp	/^    using parse_event_t = typename BasicJsonType::parse_event_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::parse_event_t
parse_event_t	extern/nlohmann_json/json.hpp	/^enum class parse_event_t : std::uint8_t$/;"	g	namespace:detail	typeref:typename:std::uint8_t
parse_msgpack_internal	extern/nlohmann_json/json.hpp	/^    bool parse_msgpack_internal()$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_ubjson_internal	extern/nlohmann_json/json.hpp	/^    bool parse_ubjson_internal(const bool get_char = true)$/;"	f	class:detail::binary_reader	typeref:typename:bool
parser	extern/nlohmann_json/json.hpp	/^    explicit parser(InputAdapterType&& adapter,$/;"	f	class:detail::parser
parser	extern/nlohmann_json/json.hpp	/^    static ::nlohmann::detail::parser<basic_json, InputAdapterType> parser($/;"	f	class:basic_json	typeref:typename:::nlohmann::detail::parser<basic_json,InputAdapterType>
parser	extern/nlohmann_json/json.hpp	/^class parser$/;"	c	namespace:detail
parser_callback_t	extern/nlohmann_json/json.hpp	/^    using parser_callback_t = detail::parser_callback_t<basic_json>;$/;"	t	class:basic_json	typeref:typename:detail::parser_callback_t<basic_json>
parser_callback_t	extern/nlohmann_json/json.hpp	/^    using parser_callback_t = typename BasicJsonType::parser_callback_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::parser_callback_t
parser_callback_t	extern/nlohmann_json/json.hpp	/^using parser_callback_t =$/;"	t	namespace:detail
partial_ordering	extern/parallel_hashmap/btree.h	/^        explicit constexpr partial_ordering(compare_internal::eq v) noexcept$/;"	f	class:phmap::partial_ordering
partial_ordering	extern/parallel_hashmap/btree.h	/^        explicit constexpr partial_ordering(compare_internal::ncmp v) noexcept$/;"	f	class:phmap::partial_ordering
partial_ordering	extern/parallel_hashmap/btree.h	/^        explicit constexpr partial_ordering(compare_internal::ord v) noexcept$/;"	f	class:phmap::partial_ordering
partial_ordering	extern/parallel_hashmap/btree.h	/^    class partial_ordering$/;"	c	namespace:phmap
partial_ordering_base	extern/parallel_hashmap/btree.h	/^        struct partial_ordering_base {$/;"	s	namespace:phmap::compare_internal
patch	extern/nlohmann_json/json.hpp	/^    basic_json patch(const basic_json& json_patch) const$/;"	f	class:basic_json	typeref:typename:basic_json
patch_inplace	extern/nlohmann_json/json.hpp	/^    void patch_inplace(const basic_json& json_patch)$/;"	f	class:basic_json	typeref:typename:void
patch_operations	extern/nlohmann_json/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	g	function:basic_json::patch_inplace
peek	include/frontends/channel/fixedSize/mpsc/consumer.hpp	/^  __USED__ inline ssize_t peek(const size_t pos = 0)$/;"	f	class:HiCR::channel::fixedSize::MPSC::Consumer	typeref:typename:__USED__ ssize_t
peek	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^  __USED__ inline size_t peek(const size_t pos = 0)$/;"	f	class:HiCR::channel::fixedSize::SPSC::Consumer	typeref:typename:__USED__ size_t
peek	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  __USED__ inline std::array<size_t, 2> peek(const size_t pos = 0)$/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:__USED__ std::array<size_t,2>
pendingOperationFunctionQueue_t	include/frontends/tasking/task.hpp	/^  typedef std::queue<pendingOperationFunction_t> pendingOperationFunctionQueue_t;$/;"	t	class:HiCR::tasking::Task	typeref:typename:std::queue<pendingOperationFunction_t>
pendingOperationFunction_t	include/frontends/tasking/task.hpp	/^  typedef std::function<bool()> pendingOperationFunction_t;$/;"	t	class:HiCR::tasking::Task
phmap	extern/parallel_hashmap/btree.h	/^namespace phmap {$/;"	n
phmap	extern/parallel_hashmap/phmap.h	/^namespace phmap {$/;"	n
phmap	extern/parallel_hashmap/phmap_base.h	/^namespace phmap {$/;"	n
phmap	extern/parallel_hashmap/phmap_bits.h	/^namespace phmap {$/;"	n
phmap	extern/parallel_hashmap/phmap_config.h	/^namespace phmap {$/;"	n
phmap	extern/parallel_hashmap/phmap_dump.h	/^namespace phmap$/;"	n
phmap	extern/parallel_hashmap/phmap_fwd_decl.h	/^namespace phmap {$/;"	n
phmap	extern/parallel_hashmap/phmap_utils.h	/^namespace phmap$/;"	n
phmap_base_h_guard_	extern/parallel_hashmap/phmap_base.h	/^#define phmap_base_h_guard_$/;"	d
phmap_bits_h_guard_	extern/parallel_hashmap/phmap_bits.h	/^#define phmap_bits_h_guard_$/;"	d
phmap_config_h_guard_	extern/parallel_hashmap/phmap_config.h	/^#define phmap_config_h_guard_$/;"	d
phmap_dump	extern/parallel_hashmap/phmap_dump.h	/^bool parallel_hash_set<N, RefSet, Mtx_, Policy, Hash, Eq, Alloc>::phmap_dump(OutputArchive& ar) /;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
phmap_dump	extern/parallel_hashmap/phmap_dump.h	/^bool raw_hash_set<Policy, Hash, Eq, Alloc>::phmap_dump(OutputArchive& ar) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
phmap_dump_h_guard_	extern/parallel_hashmap/phmap_dump.h	/^#define phmap_dump_h_guard_$/;"	d
phmap_fwd_decl_h_guard_	extern/parallel_hashmap/phmap_fwd_decl.h	/^#define phmap_fwd_decl_h_guard_$/;"	d
phmap_h_guard_	extern/parallel_hashmap/phmap.h	/^#define phmap_h_guard_$/;"	d
phmap_load	extern/parallel_hashmap/phmap_dump.h	/^bool parallel_hash_set<N, RefSet, Mtx_, Policy, Hash, Eq, Alloc>::phmap_load(InputArchive& ar) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:bool
phmap_load	extern/parallel_hashmap/phmap_dump.h	/^bool raw_hash_set<Policy, Hash, Eq, Alloc>::phmap_load(InputArchive& ar) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:bool
phmap_mix	extern/parallel_hashmap/phmap_utils.h	/^    struct phmap_mix<8>$/;"	s	namespace:phmap
phmap_mix	extern/parallel_hashmap/phmap_utils.h	/^struct phmap_mix$/;"	s	namespace:phmap
phmap_mix	extern/parallel_hashmap/phmap_utils.h	/^struct phmap_mix<4>$/;"	s	namespace:phmap
phmap_uint128	extern/parallel_hashmap/phmap_bits.h	/^    __extension__ typedef unsigned __int128 phmap_uint128;$/;"	t	typeref:typename:unsigned __int128
phmap_unary_function	extern/parallel_hashmap/phmap_utils.h	/^struct phmap_unary_function$/;"	s	namespace:phmap
phmap_utils_h_guard_	extern/parallel_hashmap/phmap_utils.h	/^#define phmap_utils_h_guard_$/;"	d
physicalProcessorId_t	include/backends/host/L0/computeResource.hpp	/^  typedef int physicalProcessorId_t;$/;"	t	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:int
plantuml	docs/source/conf.py	/^plantuml = "java -Djava.awt.headless=true -jar \/usr\/share\/plantuml\/plantuml.jar"$/;"	v
plantuml_output_format	docs/source/conf.py	/^plantuml_output_format = "svg"$/;"	v
plus	extern/nlohmann_json/json.hpp	/^    diyfp plus;$/;"	m	struct:detail::dtoa_impl::boundaries	typeref:typename:diyfp
pointer	extern/nlohmann_json/json.hpp	/^    using pointer = T*;$/;"	t	struct:detail::iterator_traits	typeref:typename:T *
pointer	extern/nlohmann_json/json.hpp	/^    using pointer = typename It::pointer;$/;"	t	struct:detail::iterator_types	typeref:typename:It::pointer
pointer	extern/nlohmann_json/json.hpp	/^    using pointer = typename std::allocator_traits<allocator_type>::pointer;$/;"	t	class:basic_json	typeref:typename:std::allocator_traits<allocator_type>::pointer
pointer	extern/nlohmann_json/json.hpp	/^    using pointer = typename std::conditional<std::is_const<BasicJsonType>::value,$/;"	t	class:detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_pointer,typename BasicJsonType::pointer>::type
pointer	extern/nlohmann_json/json.hpp	/^    using pointer = value_type *;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:value_type *
pointer	extern/parallel_hashmap/btree.h	/^        using pointer = Pointer;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:Pointer
pointer	extern/parallel_hashmap/btree.h	/^        using pointer = typename Params::pointer;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::pointer
pointer	extern/parallel_hashmap/btree.h	/^        using pointer = typename Params::pointer;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::pointer
pointer	extern/parallel_hashmap/btree.h	/^        using pointer = typename Tree::pointer;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::pointer
pointer	extern/parallel_hashmap/btree.h	/^        using pointer = value_type *;$/;"	t	struct:phmap::priv::common_params	typeref:typename:value_type *
pointer	extern/parallel_hashmap/phmap.h	/^        using pointer           = phmap::remove_reference_t<reference>*;$/;"	t	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:phmap::remove_reference_t<reference> *
pointer	extern/parallel_hashmap/phmap.h	/^        using pointer           = typename parallel_hash_set::const_pointer;$/;"	t	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:parallel_hash_set::const_pointer
pointer	extern/parallel_hashmap/phmap.h	/^        using pointer = phmap::remove_reference_t<reference>*;$/;"	t	class:phmap::priv::raw_hash_set::iterator	typeref:typename:phmap::remove_reference_t<reference> *
pointer	extern/parallel_hashmap/phmap.h	/^        using pointer = typename raw_hash_set::const_pointer;$/;"	t	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:raw_hash_set::const_pointer
pointer	extern/parallel_hashmap/phmap.h	/^    using pointer         = typename phmap::allocator_traits<$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:phmap::allocator_traits<allocator_type>::template rebind_traits<value_type>::pointer
pointer	extern/parallel_hashmap/phmap.h	/^    using pointer = typename phmap::allocator_traits<$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:phmap::allocator_traits<allocator_type>::template rebind_traits<value_type>::pointer
pointer	extern/parallel_hashmap/phmap_base.h	/^    using pointer    = typename std::remove_reference<reference>::type*;$/;"	t	struct:phmap::priv::hash_policy_traits	typeref:typename:std::remove_reference<reference>::type *
pointer	extern/parallel_hashmap/phmap_base.h	/^    using pointer = Ptr;$/;"	t	struct:phmap::pointer_traits	typeref:typename:Ptr
pointer	extern/parallel_hashmap/phmap_base.h	/^    using pointer = T*;$/;"	t	class:phmap::Span	typeref:typename:T *
pointer	extern/parallel_hashmap/phmap_base.h	/^    using pointer = T*;$/;"	t	struct:phmap::pointer_traits	typeref:typename:T *
pointer	extern/parallel_hashmap/phmap_base.h	/^    using pointer = memory_internal::ExtractOrT<memory_internal::GetPointer,$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetPointer,Alloc,value_type * >
pointer_t	extern/nlohmann_json/json.hpp	/^using pointer_t = typename T::pointer;$/;"	t	namespace:detail	typeref:typename:T::pointer
pointer_to	extern/parallel_hashmap/phmap_base.h	/^    static pointer pointer_to($/;"	f	struct:phmap::pointer_traits	typeref:typename:pointer
pointer_to	extern/parallel_hashmap/phmap_base.h	/^    static pointer pointer_to(element_type& r) {  \/\/ NOLINT(runtime\/references)$/;"	f	struct:phmap::pointer_traits	typeref:typename:pointer
pointer_traits	extern/parallel_hashmap/phmap_base.h	/^struct pointer_traits $/;"	s	namespace:phmap
pointer_traits	extern/parallel_hashmap/phmap_base.h	/^struct pointer_traits<T*> $/;"	s	namespace:phmap
policy_type	extern/parallel_hashmap/phmap.h	/^    using policy_type     = Policy;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:Policy
policy_type	extern/parallel_hashmap/phmap.h	/^    using policy_type = Policy;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:Policy
pop	extern/atomic_queue/atomic_queue.h	/^    T pop() noexcept {$/;"	f	struct:atomic_queue::RetryDecorator	typeref:typename:T
pop	extern/atomic_queue/atomic_queue.h	/^    auto pop() noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:auto
pop	include/frontends/channel/fixedSize/mpsc/consumer.hpp	/^  __USED__ inline bool pop(const size_t n = 1)$/;"	f	class:HiCR::channel::fixedSize::MPSC::Consumer	typeref:typename:__USED__ bool
pop	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^  __USED__ inline void pop(const size_t n = 1)$/;"	f	class:HiCR::channel::fixedSize::SPSC::Consumer	typeref:typename:__USED__ void
pop	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  __USED__ inline void pop(const size_t n = 1)$/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:__USED__ void
pop	include/hicr/common/concurrentQueue.hpp	/^  __USED__ inline P pop()$/;"	f	class:HiCR::common::ConcurrentQueue	typeref:typename:__USED__ P
pop_back	extern/nlohmann_json/json.hpp	/^    void pop_back()$/;"	f	class:json_pointer	typeref:typename:void
populateMemorySlot	examples/hicr/kernel/source/ascend.cpp	/^void populateMemorySlot(std::shared_ptr<HiCR::L0::LocalMemorySlot> memorySlot, float value)$/;"	f	typeref:typename:void
position	extern/nlohmann_json/json.hpp	/^    position_t position {};$/;"	m	class:detail::lexer	typeref:typename:position_t
position	extern/parallel_hashmap/btree.h	/^            field_type position = 0;$/;"	m	struct:phmap::priv::btree::EmptyNodeType	typeref:typename:field_type
position	extern/parallel_hashmap/btree.h	/^        field_type position() const { return GetField<1>()[0]; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:field_type
position	extern/parallel_hashmap/btree.h	/^        int position;$/;"	m	struct:phmap::priv::btree_iterator	typeref:typename:int
position	extern/parallel_hashmap/phmap_base.h	/^    Iterator position;$/;"	m	struct:phmap::priv::InsertReturnType	typeref:typename:Iterator
position_string	extern/nlohmann_json/json.hpp	/^    static std::string position_string(const position_t& pos)$/;"	f	class:detail::parse_error	typeref:typename:std::string
position_t	extern/nlohmann_json/json.hpp	/^struct position_t$/;"	s	namespace:detail
pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^    div.fragment, pre.fragment {$/;"	c
pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, code a, pre.fragment, div.fragment, div.fragment .line, div.fragment span, div.fragment .l/;"	c
pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^code, div.fragment, pre.fragment {$/;"	c
pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment .line, pre.fragment {$/;"	c
pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^div.fragment, pre.fragment {$/;"	c
pre.fragment	extern/doxygen-awesome-css/doxygen-awesome.css	/^pre.fragment,$/;"	c
pre.fragment::-webkit-scrollbar	extern/doxygen-awesome-css/doxygen-awesome.css	/^pre.fragment::-webkit-scrollbar,$/;"	c
pre.fragment::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^pre.fragment::-webkit-scrollbar-thumb,$/;"	c
pre.fragment::-webkit-scrollbar-track	extern/doxygen-awesome-css/doxygen-awesome.css	/^pre.fragment::-webkit-scrollbar-track,$/;"	c
pre.fragment:hover::-webkit-scrollbar-thumb	extern/doxygen-awesome-css/doxygen-awesome.css	/^pre.fragment:hover::-webkit-scrollbar-thumb,$/;"	c
prefersDarkModeInLightModeKey	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static prefersDarkModeInLightModeKey = "prefers-dark-mode-in-light-mode"$/;"	M	class:DoxygenAwesomeDarkModeToggle
prefersLightModeInDarkModeKey	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static prefersLightModeInDarkModeKey = "prefers-light-mode-in-dark-mode"$/;"	M	class:DoxygenAwesomeDarkModeToggle
prefetch	extern/parallel_hashmap/phmap.h	/^    void prefetch(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
prefetch	extern/parallel_hashmap/phmap.h	/^    void prefetch(const key_arg<K>& key) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
prefetch_hash	extern/parallel_hashmap/phmap.h	/^    void prefetch_hash(size_t hashval) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
prefetch_hash	extern/parallel_hashmap/phmap.h	/^    void prefetch_hash(size_t hashval) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
prepare_insert	extern/parallel_hashmap/phmap.h	/^    size_t prepare_insert(size_t hashval) PHMAP_ATTRIBUTE_NOINLINE {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:size_t
primary_domain	docs/source/conf.py	/^primary_domain = 'cpp'$/;"	v
primitive_iterator	extern/nlohmann_json/json.hpp	/^    primitive_iterator_t primitive_iterator {};$/;"	m	struct:detail::internal_iterator	typeref:typename:primitive_iterator_t
primitive_iterator_t	extern/nlohmann_json/json.hpp	/^    using primitive_iterator_t = ::nlohmann::detail::primitive_iterator_t;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::primitive_iterator_t
primitive_iterator_t	extern/nlohmann_json/json.hpp	/^class primitive_iterator_t$/;"	c	namespace:detail
printBytes	examples/channels/variableSize/spsc/include/common.hpp	/^  static void printBytes(const string prepend, void *buffer, size_t channelCapacity, size_t star/;"	f	class:Printer	typeref:typename:void
print_diff	extern/run-clang-format/run-clang-format.py	/^def print_diff(diff_lines, use_color):$/;"	f
print_trouble	extern/run-clang-format/run-clang-format.py	/^def print_trouble(prog, message, use_colors):$/;"	f
priority_tag	extern/nlohmann_json/json.hpp	/^template<> struct priority_tag<0> {};$/;"	s	namespace:detail
priority_tag	extern/nlohmann_json/json.hpp	/^template<unsigned N> struct priority_tag : priority_tag < N - 1 > {};$/;"	s	namespace:detail
priv	extern/parallel_hashmap/btree.h	/^namespace priv {$/;"	n	namespace:phmap
priv	extern/parallel_hashmap/phmap.h	/^    namespace priv {$/;"	n	namespace:phmap
priv	extern/parallel_hashmap/phmap.h	/^namespace priv {$/;"	n	namespace:phmap
priv	extern/parallel_hashmap/phmap_base.h	/^namespace priv {$/;"	n	namespace:phmap
priv	extern/parallel_hashmap/phmap_dump.h	/^namespace priv {$/;"	n	namespace:phmap
priv	extern/parallel_hashmap/phmap_fwd_decl.h	/^    namespace priv {$/;"	n	namespace:phmap
probe	extern/parallel_hashmap/phmap.h	/^    probe_seq<Group::kWidth> probe(size_t hashval) const {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:probe_seq<Group::kWidth>
probe_length	extern/parallel_hashmap/phmap.h	/^        size_t probe_length;$/;"	m	struct:phmap::priv::raw_hash_set::FindInfo	typeref:typename:size_t
probe_seq	extern/parallel_hashmap/phmap.h	/^    probe_seq(size_t hashval, size_t mask) {$/;"	f	class:phmap::priv::probe_seq
probe_seq	extern/parallel_hashmap/phmap.h	/^class probe_seq $/;"	c	namespace:phmap::priv
processingUnit	tests/backends/host/pthreads/L0/meson.build	/^test('processingUnit', executable('processingUnit', 'processingUnit.cpp', dependencies: HiCRTest/;"	B
processingUnit	tests/backends/host/pthreads/L0/meson.build	/^test('processingUnit', executable('processingUnit', 'processingUnit.cpp', dependencies: HiCRTest/;"	t
producer	tests/frontends/channel/fixedSize/spsc/meson.build	/^ test('producer', executable('producer', 'producer.cpp', dependencies: HiCRTestBuildDependencies/;"	B
producer	tests/frontends/channel/fixedSize/spsc/meson.build	/^ test('producer', executable('producer', 'producer.cpp', dependencies: HiCRTestBuildDependencies/;"	t
producerFc	examples/channels/fixedSize/mpsc/include/producer.hpp	/^void producerFc(HiCR::L1::MemoryManager &memoryManager, HiCR::L1::CommunicationManager &communic/;"	f	typeref:typename:void
producerFc	examples/channels/fixedSize/spsc/include/producer.hpp	/^void producerFc(HiCR::L1::MemoryManager &memoryManager, HiCR::L1::CommunicationManager &communic/;"	f	typeref:typename:void
producerFc	examples/channels/variableSize/spsc/include/producer.hpp	/^void producerFc(HiCR::L1::MemoryManager &memoryManager, HiCR::L1::CommunicationManager &communic/;"	f	typeref:typename:void
project	docs/source/conf.py	/^project = 'HiCR'$/;"	v
projectalign	extern/doxygen-awesome-css/doxygen-custom/header.html	/^  <td id="projectalign" style="padding-left: 0.5em;">$/;"	I
projectbrief	extern/doxygen-awesome-css/doxygen-custom/header.html	/^    <div id="projectbrief">$projectbrief<\/div>$/;"	I
projectbrief	extern/doxygen-awesome-css/doxygen-custom/header.html	/^   <!--BEGIN PROJECT_BRIEF--><div id="projectbrief">$projectbrief<\/div><!--END PROJECT_BRIEF-->$/;"	I
projectlogo	extern/doxygen-awesome-css/doxygen-custom/header.html	/^  <td id="projectlogo"><img alt="Logo" src="$relpath^$projectlogo"\/><\/td>$/;"	I
projectname	extern/doxygen-awesome-css/doxygen-custom/header.html	/^   <div id="projectname">$projectname$/;"	I
projectnumber	extern/doxygen-awesome-css/doxygen-custom/header.html	/^   <!--BEGIN PROJECT_NUMBER-->&#160;<span id="projectnumber">$projectnumber<\/span><!--END PROJE/;"	I
propagate_on_container_copy_assignment	extern/parallel_hashmap/phmap_base.h	/^    using propagate_on_container_copy_assignment = memory_internal::ExtractOrT<$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetPropagateOnContainerCopyAssignment,Alloc,std::false_type>
propagate_on_container_move_assignment	extern/parallel_hashmap/phmap_base.h	/^    using propagate_on_container_move_assignment = memory_internal::ExtractOrT<$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetPropagateOnContainerMoveAssignment,Alloc,std::false_type>
propagate_on_container_swap	extern/parallel_hashmap/phmap_base.h	/^    using propagate_on_container_swap =$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetPropagateOnContainerSwap,Alloc,std::false_type>
pthreads	include/backends/host/pthreads/L0/processingUnit.hpp	/^namespace pthreads$/;"	n	namespace:HiCR::backend::host
pthreads	include/backends/host/pthreads/L1/communicationManager.hpp	/^namespace pthreads$/;"	n	namespace:HiCR::backend::host
pthreads	include/backends/host/pthreads/L1/computeManager.hpp	/^namespace pthreads$/;"	n	namespace:HiCR::backend::host
pthreads	tests/backends/host/meson.build	/^  subdir('pthreads')$/;"	S
ptr_	extern/parallel_hashmap/phmap_base.h	/^    pointer ptr_;$/;"	m	class:phmap::Span	typeref:typename:pointer
publish	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  __USED__ inline void publish()$/;"	f	class:HiCR::runtime::DataObject	typeref:typename:__USED__ void
publishRequest	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  MPI_Request publishRequest;$/;"	m	class:HiCR::runtime::DataObject	typeref:typename:MPI_Request
pull	include/frontends/tasking/dispatcher.hpp	/^  __USED__ inline Task *pull()$/;"	f	class:HiCR::tasking::Dispatcher	typeref:typename:__USED__ Task *
pullFunction_t	include/frontends/tasking/dispatcher.hpp	/^typedef std::function<HiCR::tasking::Task *()> pullFunction_t;$/;"	t	namespace:HiCR::tasking
push	extern/atomic_queue/atomic_queue.h	/^    void push(T element) noexcept {$/;"	f	struct:atomic_queue::RetryDecorator	typeref:typename:void
push	extern/atomic_queue/atomic_queue.h	/^    void push(T&& element) noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:void
push	include/frontends/channel/fixedSize/mpsc/producer.hpp	/^  __USED__ inline bool push(std::shared_ptr<L0::LocalMemorySlot> sourceSlot, const size_t n = 1)$/;"	f	class:HiCR::channel::fixedSize::MPSC::Producer	typeref:typename:__USED__ bool
push	include/frontends/channel/fixedSize/spsc/producer.hpp	/^  __USED__ inline void push(std::shared_ptr<L0::LocalMemorySlot> sourceSlot, const size_t n = 1)$/;"	f	class:HiCR::channel::fixedSize::SPSC::Producer	typeref:typename:__USED__ void
push	include/frontends/channel/variableSize/spsc/producer.hpp	/^  __USED__ inline void push(std::shared_ptr<L0::LocalMemorySlot> sourceSlot, const size_t n = 1)$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:__USED__ void
push	include/hicr/common/concurrentQueue.hpp	/^  __USED__ inline void push(P obj)$/;"	f	class:HiCR::common::ConcurrentQueue	typeref:typename:__USED__ void
push_back	extern/nlohmann_json/json.hpp	/^    void push_back(basic_json&& val)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/nlohmann_json/json.hpp	/^    void push_back(const basic_json& val)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/nlohmann_json/json.hpp	/^    void push_back(const string_t& token)$/;"	f	class:json_pointer	typeref:typename:void
push_back	extern/nlohmann_json/json.hpp	/^    void push_back(const typename object_t::value_type& val)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/nlohmann_json/json.hpp	/^    void push_back(initializer_list_t init)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/nlohmann_json/json.hpp	/^    void push_back(string_t&& token)$/;"	f	class:json_pointer	typeref:typename:void
pygments_style	docs/source/conf.py	/^pygments_style = 'sphinx'$/;"	v
queryComputeResources	include/backends/ascend/L1/topologyManager.hpp	/^  __USED__ inline HiCR::L0::Device::computeResourceList_t queryComputeResources()$/;"	f	class:HiCR::backend::ascend::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Device::computeResourceList_t
queryComputeResources	include/backends/host/hwloc/L1/topologyManager.hpp	/^  __USED__ inline HiCR::L0::Device::computeResourceList_t queryComputeResources(const host::L0::/;"	f	class:HiCR::backend::host::hwloc::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Device::computeResourceList_t
queryInstanceIds	include/frontends/runtime/instance.hpp	/^  void queryInstanceIds()$/;"	f	class:HiCR::runtime::Instance	typeref:typename:void
queryMemorySlotUpdates	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void queryMemorySlotUpdates(std::shared_ptr<L0::GlobalMemorySlot> memorySlot)$/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
queryMemorySlotUpdatesImpl	include/backends/ascend/L1/communicationManager.hpp	/^  __USED__ inline void queryMemorySlotUpdatesImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> me/;"	f	class:HiCR::backend::ascend::L1::CommunicationManager	typeref:typename:__USED__ void
queryMemorySlotUpdatesImpl	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void queryMemorySlotUpdatesImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> me/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
queryMemorySlotUpdatesImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void queryMemorySlotUpdatesImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> me/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
queryMemorySlotUpdatesImpl	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void queryMemorySlotUpdatesImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> me/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
queryMemorySpaces	include/backends/ascend/L1/topologyManager.hpp	/^  __USED__ inline HiCR::L0::Device::memorySpaceList_t queryMemorySpaces()$/;"	f	class:HiCR::backend::ascend::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Device::memorySpaceList_t
queryMemorySpaces	include/backends/host/hwloc/L1/topologyManager.hpp	/^  __USED__ inline HiCR::L0::Device::memorySpaceList_t queryMemorySpaces(const host::L0::Device::/;"	f	class:HiCR::backend::host::hwloc::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Device::memorySpaceList_t
queryTopology	include/backends/ascend/L1/topologyManager.hpp	/^  __USED__ inline HiCR::L0::Topology queryTopology() override$/;"	f	class:HiCR::backend::ascend::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Topology
queryTopology	include/backends/host/hwloc/L1/topologyManager.hpp	/^  __USED__ inline HiCR::L0::Topology queryTopology() override$/;"	f	class:HiCR::backend::host::hwloc::L1::TopologyManager	typeref:typename:__USED__ HiCR::L0::Topology
qux	extern/run-clang-format/src/third_party/qux.cpp	/^int qux(bool cond) {$/;"	f	typeref:typename:int
random	.vscode/settings.json	/^        "random": "cpp",$/;"	s	object:files.associations
range_value_t	extern/nlohmann_json/json.hpp	/^using range_value_t = value_type_t<iterator_traits<iterator_t<T>>>;$/;"	t	namespace:detail	typeref:typename:value_type_t<iterator_traits<iterator_t<T>>>
ranges	.vscode/settings.json	/^        "ranges": "cpp",$/;"	s	object:files.associations
ratio	.vscode/settings.json	/^        "ratio": "cpp",$/;"	s	object:files.associations
raw_hash_map	extern/parallel_hashmap/phmap.h	/^    raw_hash_map() {}$/;"	f	class:phmap::priv::raw_hash_map
raw_hash_map	extern/parallel_hashmap/phmap.h	/^class raw_hash_map : public raw_hash_set<Policy, Hash, Eq, Alloc> $/;"	c	namespace:phmap::priv
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    explicit raw_hash_set(const allocator_type& alloc)$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    explicit raw_hash_set(size_t bucket_cnt, const hasher& hashfn = hasher(),$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set() noexcept($/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(InputIter first, InputIter last, const allocator_type& alloc)$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(InputIter first, InputIter last, size_t bucket_cnt = 0,$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(InputIter first, InputIter last, size_t bucket_cnt,$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(const raw_hash_set& that)$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(const raw_hash_set& that, const allocator_type& a)$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(raw_hash_set&& that) noexcept($/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(raw_hash_set&& that, const allocator_type& a)$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(size_t bucket_cnt, const allocator_type& alloc)$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(size_t bucket_cnt, const hasher& hashfn,$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(std::initializer_list<T> init, const allocator_type& alloc)$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(std::initializer_list<T> init, size_t bucket_cnt = 0,$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(std::initializer_list<T> init, size_t bucket_cnt,$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(std::initializer_list<init_type> init, size_t bucket_cnt = 0,$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(std::initializer_list<init_type> init, size_t bucket_cnt,$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^    raw_hash_set(std::initializer_list<init_type> init,$/;"	f	class:phmap::priv::raw_hash_set
raw_hash_set	extern/parallel_hashmap/phmap.h	/^class raw_hash_set $/;"	c	namespace:phmap::priv
rbegin	extern/nlohmann_json/json.hpp	/^    const_reverse_iterator rbegin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
rbegin	extern/nlohmann_json/json.hpp	/^    reverse_iterator rbegin() noexcept$/;"	f	class:basic_json	typeref:typename:reverse_iterator
rbegin	extern/parallel_hashmap/btree.h	/^        const_reverse_iterator rbegin() const  { return tree_.rbegin(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:const_reverse_iterator
rbegin	extern/parallel_hashmap/btree.h	/^        const_reverse_iterator rbegin() const {$/;"	f	class:phmap::priv::btree	typeref:typename:const_reverse_iterator
rbegin	extern/parallel_hashmap/btree.h	/^        reverse_iterator rbegin()              { return tree_.rbegin(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:reverse_iterator
rbegin	extern/parallel_hashmap/btree.h	/^        reverse_iterator rbegin() {$/;"	f	class:phmap::priv::btree	typeref:typename:reverse_iterator
rbegin	extern/parallel_hashmap/phmap_base.h	/^    constexpr reverse_iterator rbegin() const noexcept {$/;"	f	class:phmap::Span	typeref:typename:reverse_iterator
ready	include/frontends/tasking/worker.hpp	/^    ready,$/;"	e	enum:HiCR::tasking::Worker::state_t
ready	include/hicr/L0/processingUnit.hpp	/^    ready,$/;"	e	enum:HiCR::L0::ProcessingUnit::state_t
rebalance_after_delete	extern/parallel_hashmap/btree.h	/^    auto btree<P>::rebalance_after_delete(iterator iter) -> iterator {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
rebalance_left_to_right	extern/parallel_hashmap/btree.h	/^    void btree_node<P>::rebalance_left_to_right(const int to_move,$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
rebalance_or_split	extern/parallel_hashmap/btree.h	/^    void btree<P>::rebalance_or_split(iterator *iter) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
rebalance_right_to_left	extern/parallel_hashmap/btree.h	/^    void btree_node<P>::rebalance_right_to_left(const int to_move,$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
rebind	extern/parallel_hashmap/phmap_base.h	/^    using rebind = U*;$/;"	t	struct:phmap::pointer_traits	typeref:typename:U *
rebind	extern/parallel_hashmap/phmap_base.h	/^    using rebind = typename memory_internal::RebindPtr<Ptr, U>::type;$/;"	t	struct:phmap::pointer_traits	typeref:typename:memory_internal::RebindPtr<Ptr,U>::type
rebind_alloc	extern/parallel_hashmap/phmap_base.h	/^    using rebind_alloc = typename memory_internal::RebindAlloc<Alloc, T>::type;$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::RebindAlloc<Alloc,T>::type
rebind_traits	extern/parallel_hashmap/phmap_base.h	/^    using rebind_traits = phmap::allocator_traits<rebind_alloc<T>>;$/;"	t	struct:phmap::allocator_traits	typeref:typename:phmap::allocator_traits<rebind_alloc<T>>
recvMessage	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^__USED__ inline std::pair<const void *, size_t> Instance::recvMessage(const HiCR::L0::Instance::/;"	f	class:Instance	typeref:typename:__USED__ std::pair<const void *,size_t>
recvMessageAsync	include/frontends/runtime/instance.hpp	/^  __USED__ inline std::pair<const void *, size_t> recvMessageAsync(const HiCR::L0::Instance::ins/;"	f	class:HiCR::runtime::Instance	typeref:typename:__USED__ std::pair<const void *,size_t>
red	extern/doxygen-awesome-css/include/MyLibrary/example.hpp	/^  red,$/;"	e	enum:MyLibrary::Color
red	extern/run-clang-format/run-clang-format.py	/^    def red(s):$/;"	f	function:colorize	file:
ref_stack	extern/nlohmann_json/json.hpp	/^    std::vector<BasicJsonType*> ref_stack {};$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:std::vector<BasicJsonType * >
ref_stack	extern/nlohmann_json/json.hpp	/^    std::vector<BasicJsonType*> ref_stack {};$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:std::vector<BasicJsonType * >
reference	extern/nlohmann_json/json.hpp	/^    using reference = T&;$/;"	t	struct:detail::iterator_traits	typeref:typename:T &
reference	extern/nlohmann_json/json.hpp	/^    using reference = typename Base::reference;$/;"	t	class:detail::json_reverse_iterator	typeref:typename:Base::reference
reference	extern/nlohmann_json/json.hpp	/^    using reference = typename It::reference;$/;"	t	struct:detail::iterator_types	typeref:typename:It::reference
reference	extern/nlohmann_json/json.hpp	/^    using reference = value_type &;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:value_type &
reference	extern/nlohmann_json/json.hpp	/^    using reference = value_type&;$/;"	t	class:basic_json	typeref:typename:value_type &
reference	extern/nlohmann_json/json.hpp	/^    using reference =$/;"	t	class:detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_reference,typename BasicJsonType::reference>::type
reference	extern/parallel_hashmap/btree.h	/^        using reference = Reference;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:Reference
reference	extern/parallel_hashmap/btree.h	/^        using reference = typename Params::reference;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::reference
reference	extern/parallel_hashmap/btree.h	/^        using reference = typename Params::reference;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::reference
reference	extern/parallel_hashmap/btree.h	/^        using reference = typename Tree::reference;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::reference
reference	extern/parallel_hashmap/btree.h	/^        using reference = value_type &;$/;"	t	struct:phmap::priv::common_params	typeref:typename:value_type &
reference	extern/parallel_hashmap/phmap.h	/^        using reference         = typename parallel_hash_set::const_reference;$/;"	t	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:parallel_hash_set::const_reference
reference	extern/parallel_hashmap/phmap.h	/^        using reference         =$/;"	t	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:phmap::conditional_t<PolicyTraits::constant_iterators::value,const value_type &,value_type &>
reference	extern/parallel_hashmap/phmap.h	/^        using reference = typename raw_hash_set::const_reference;$/;"	t	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:raw_hash_set::const_reference
reference	extern/parallel_hashmap/phmap.h	/^        using reference =$/;"	t	class:phmap::priv::raw_hash_set::iterator	typeref:typename:phmap::conditional_t<PolicyTraits::constant_iterators::value,const value_type &,value_type &>
reference	extern/parallel_hashmap/phmap.h	/^    using reference       = value_type&;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:value_type &
reference	extern/parallel_hashmap/phmap.h	/^    using reference = value_type&;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:value_type &
reference	extern/parallel_hashmap/phmap_base.h	/^    T& reference() { return this->data_; }$/;"	f	class:phmap::optional	typeref:typename:T &
reference	extern/parallel_hashmap/phmap_base.h	/^    constexpr const T& reference() const { return this->data_; }$/;"	f	class:phmap::optional	typeref:typename:const T &
reference	extern/parallel_hashmap/phmap_base.h	/^    using reference  = decltype(Policy::element(std::declval<slot_type*>()));$/;"	t	struct:phmap::priv::hash_policy_traits
reference	extern/parallel_hashmap/phmap_base.h	/^    using reference = T&;$/;"	t	class:phmap::Span	typeref:typename:T &
reference_t	extern/nlohmann_json/json.hpp	/^using reference_t = typename T::reference;$/;"	t	namespace:detail	typeref:typename:T::reference
reference_tokens	extern/nlohmann_json/json.hpp	/^    std::vector<string_t> reference_tokens;$/;"	m	class:json_pointer	typeref:typename:std::vector<string_t>
regex	.vscode/settings.json	/^        "regex": "cpp",$/;"	s	object:files.associations
registerEntryPoint	include/frontends/runtime/runtime.hpp	/^  __USED__ inline void registerEntryPoint(const std::string &entryPointName, const HiCR::L1::Ins/;"	f	class:HiCR::Runtime	typeref:typename:__USED__ void
registerGlobalMemorySlot	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void registerGlobalMemorySlot(std::shared_ptr<L0::GlobalMemorySlot> memorySlot/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
registerLocalMemorySlot	include/hicr/L1/memoryManager.hpp	/^  virtual std::shared_ptr<L0::LocalMemorySlot> registerLocalMemorySlot(std::shared_ptr<HiCR::L0:/;"	f	class:HiCR::L1::MemoryManager	typeref:typename:std::shared_ptr<L0::LocalMemorySlot>
registerLocalMemorySlotImpl	include/backends/ascend/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> registerLocalMemorySlotImpl(std::sh/;"	f	class:HiCR::backend::ascend::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
registerLocalMemorySlotImpl	include/backends/host/hwloc/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> registerLocalMemorySlotImpl(std::sh/;"	f	class:HiCR::backend::host::hwloc::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
registerLocalMemorySlotImpl	include/backends/lpf/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> registerLocalMemorySlotImpl(std::sh/;"	f	class:HiCR::backend::lpf::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
registerLocalMemorySlotImpl	include/backends/mpi/L1/memoryManager.hpp	/^  __USED__ inline std::shared_ptr<HiCR::L0::LocalMemorySlot> registerLocalMemorySlotImpl(std::sh/;"	f	class:HiCR::backend::mpi::L1::MemoryManager	typeref:typename:__USED__ std::shared_ptr<HiCR::L0::LocalMemorySlot>
registerPendingOperation	include/frontends/tasking/task.hpp	/^  __USED__ inline void registerPendingOperation(pendingOperationFunction_t op)$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ void
rehash	extern/parallel_hashmap/phmap.h	/^    void rehash(size_t n) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
rehash	extern/parallel_hashmap/phmap.h	/^    void rehash(size_t n) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
rehash_and_grow_if_necessary	extern/parallel_hashmap/phmap.h	/^    void rehash_and_grow_if_necessary() {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
relaxed_binding	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^    relaxed_binding = 0$/;"	e	enum:HiCR::backend::host::hwloc::L0::LocalMemorySlot::binding_type
release	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^  __USED__ inline bool release()$/;"	f	class:HiCR::runtime::DataObject	typeref:typename:__USED__ bool
releaseGlobalLock	include/hicr/L1/communicationManager.hpp	/^  __USED__ inline void releaseGlobalLock(std::shared_ptr<L0::GlobalMemorySlot> memorySlot)$/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:__USED__ void
releaseGlobalLockImpl	include/backends/ascend/L1/communicationManager.hpp	/^  __USED__ inline void releaseGlobalLockImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memoryS/;"	f	class:HiCR::backend::ascend::L1::CommunicationManager	typeref:typename:__USED__ void
releaseGlobalLockImpl	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void releaseGlobalLockImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memoryS/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
releaseGlobalLockImpl	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void releaseGlobalLockImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memoryS/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
releaseGlobalLockImpl	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void releaseGlobalLockImpl(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memoryS/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
remap_index	extern/atomic_queue/atomic_queue.h	/^constexpr unsigned remap_index(unsigned index) noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:unsigned
remap_index	extern/atomic_queue/atomic_queue.h	/^constexpr unsigned remap_index<0>(unsigned index) noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:unsigned
remap_index_with_mix	extern/atomic_queue/atomic_queue.h	/^constexpr unsigned remap_index_with_mix(unsigned index, unsigned mix) {$/;"	f	namespace:atomic_queue::details	typeref:typename:unsigned
remove	extern/nlohmann_json/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
removeEvent	include/frontends/tasking/eventMap.hpp	/^  __USED__ inline void removeEvent(const E event)$/;"	f	class:HiCR::tasking::EventMap	typeref:typename:__USED__ void
remove_all_extents_t	extern/parallel_hashmap/phmap_base.h	/^using remove_all_extents_t = typename std::remove_all_extents<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::remove_all_extents<T>::type
remove_const_t	extern/parallel_hashmap/phmap_base.h	/^using remove_const_t = typename std::remove_const<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::remove_const<T>::type
remove_cv_t	extern/parallel_hashmap/phmap_base.h	/^using remove_cv_t = typename std::remove_cv<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::remove_cv<T>::type
remove_extent_t	extern/parallel_hashmap/phmap_base.h	/^using remove_extent_t = typename std::remove_extent<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::remove_extent<T>::type
remove_pointer_t	extern/parallel_hashmap/phmap_base.h	/^using remove_pointer_t = typename std::remove_pointer<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::remove_pointer<T>::type
remove_prefix	extern/parallel_hashmap/phmap_base.h	/^    void remove_prefix(size_type n) noexcept {$/;"	f	class:phmap::Span	typeref:typename:void
remove_reference_t	extern/parallel_hashmap/phmap_base.h	/^using remove_reference_t = typename std::remove_reference<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::remove_reference<T>::type
remove_sign	extern/nlohmann_json/json.hpp	/^    inline number_unsigned_t remove_sign(number_integer_t x) noexcept$/;"	f	class:detail::serializer	typeref:typename:number_unsigned_t
remove_sign	extern/nlohmann_json/json.hpp	/^    number_unsigned_t remove_sign(number_unsigned_t x)$/;"	f	class:detail::serializer	typeref:typename:number_unsigned_t
remove_suffix	extern/parallel_hashmap/phmap_base.h	/^    void remove_suffix(size_type n) noexcept {$/;"	f	class:phmap::Span	typeref:typename:void
remove_value	extern/parallel_hashmap/btree.h	/^    inline void btree_node<P>::remove_value(const int i, allocator_type *alloc) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
remove_values_ignore_children	extern/parallel_hashmap/btree.h	/^    inline void btree_node<P>::remove_values_ignore_children($/;"	f	class:phmap::priv::btree_node	typeref:typename:void
remove_volatile_t	extern/parallel_hashmap/phmap_base.h	/^using remove_volatile_t = typename std::remove_volatile<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::remove_volatile<T>::type
rend	extern/nlohmann_json/json.hpp	/^    const_reverse_iterator rend() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
rend	extern/nlohmann_json/json.hpp	/^    reverse_iterator rend() noexcept$/;"	f	class:basic_json	typeref:typename:reverse_iterator
rend	extern/parallel_hashmap/btree.h	/^        const_reverse_iterator rend() const    { return tree_.rend(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:const_reverse_iterator
rend	extern/parallel_hashmap/btree.h	/^        const_reverse_iterator rend() const {$/;"	f	class:phmap::priv::btree	typeref:typename:const_reverse_iterator
rend	extern/parallel_hashmap/btree.h	/^        reverse_iterator rend()                { return tree_.rend(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:reverse_iterator
rend	extern/parallel_hashmap/btree.h	/^        reverse_iterator rend() {$/;"	f	class:phmap::priv::btree	typeref:typename:reverse_iterator
rend	extern/parallel_hashmap/phmap_base.h	/^    constexpr reverse_iterator rend() const noexcept {$/;"	f	class:phmap::Span	typeref:typename:reverse_iterator
replace	extern/nlohmann_json/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
replace	extern/nlohmann_json/json.hpp	/^    replace, \/\/\/< replace invalid UTF-8 sequences with U+FFFD$/;"	e	enum:detail::error_handler_t
replace_substring	extern/nlohmann_json/json.hpp	/^inline void replace_substring(StringType& s, const StringType& f,$/;"	f	namespace:detail	typeref:typename:void
replicaCount	include/frontends/machineModel/machineModel.hpp	/^    size_t replicaCount;$/;"	m	struct:HiCR::MachineModel::request_t	typeref:typename:size_t
repository	extern/doxygen-awesome-css/package.json	/^  "repository": {$/;"	o
request	include/frontends/runtime/coordinator.hpp	/^    const HiCR::MachineModel::request_t request;$/;"	m	struct:HiCR::runtime::Coordinator::worker_t	typeref:typename:const HiCR::MachineModel::request_t
request_t	include/frontends/machineModel/machineModel.hpp	/^  struct request_t$/;"	s	class:HiCR::MachineModel
require_input_iter	extern/nlohmann_json/json.hpp	/^    using require_input_iter = typename std::enable_if<std::is_convertible<typename std::iterato/;"	t	struct:ordered_map	typeref:typename:std::enable_if<std::is_convertible<typename std::iterator_traits<InputIt>::iterator_category,std::input_iterator_tag>::value>::type
reserve	extern/parallel_hashmap/phmap.h	/^    void reserve(size_t n) $/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
reserve	extern/parallel_hashmap/phmap.h	/^    void reserve(size_t n) { rehash(GrowthToLowerboundCapacity(n)); }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
reset	extern/nlohmann_json/json.hpp	/^    void reset() noexcept$/;"	f	class:detail::lexer	typeref:typename:void
reset	extern/parallel_hashmap/phmap_base.h	/^    PHMAP_ATTRIBUTE_REINITIALIZES void reset() noexcept { this->destruct(); }$/;"	f	class:phmap::optional	typeref:typename:PHMAP_ATTRIBUTE_REINITIALIZES void
reset	extern/parallel_hashmap/phmap_base.h	/^    void reset() {$/;"	f	class:phmap::priv::node_handle_base	typeref:typename:void
reset_ctrl	extern/parallel_hashmap/phmap.h	/^    void reset_ctrl(size_t capacity) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
reset_growth_left	extern/parallel_hashmap/phmap.h	/^    void reset_growth_left(size_t capacity) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
resize	extern/parallel_hashmap/phmap.h	/^    void resize(size_t new_capacity) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
resize	extern/parallel_hashmap/phmap.h	/^    void resize(typename Base::size_type hint) { this->rehash(hint); }$/;"	f	class:phmap::node_hash_map	typeref:typename:void
resize	extern/parallel_hashmap/phmap.h	/^    void resize(typename Base::size_type hint) { this->rehash(hint); }$/;"	f	class:phmap::node_hash_set	typeref:typename:void
resize	extern/parallel_hashmap/phmap.h	/^    void resize(typename Base::size_type hint) { this->rehash(hint); }$/;"	f	class:phmap::parallel_node_hash_map	typeref:typename:void
resize	extern/parallel_hashmap/phmap.h	/^    void resize(typename Base::size_type hint) { this->rehash(hint); }$/;"	f	class:phmap::parallel_node_hash_set	typeref:typename:void
resourceList	examples/tasking/meson.build	/^subdir('resourceList')$/;"	S
resourceList	examples/tasking/resourceList/meson.build	/^	  test('resourceList', resourceList, args : [ '4', '100', '0', '1', '2', '3' ], suite: testSuit/;"	t
resourceList	examples/tasking/resourceList/meson.build	/^	resourceList = executable('resourceList', [ 'source\/main.cpp'], dependencies: hicrBuildDep)$/;"	B
resourceList	examples/tasking/resourceList/meson.build	/^	resourceList = executable('resourceList', [ 'source\/main.cpp'], dependencies: hicrBuildDep)$/;"	V
result	extern/nlohmann_json/json.hpp	/^        json_pointer result = *this;$/;"	m	class:json_pointer	typeref:typename:json_pointer
result_type	extern/parallel_hashmap/phmap_base.h	/^    using result_type = size_t;$/;"	t	struct:phmap::optional_internal::optional_hash_base	typeref:typename:size_t
result_type	extern/parallel_hashmap/phmap_utils.h	/^    typedef ResultType result_type;$/;"	t	struct:phmap::phmap_unary_function	typeref:typename:ResultType
resume	include/backends/host/coroutine.hpp	/^  __USED__ inline void resume()$/;"	f	class:HiCR::backend::host::Coroutine	typeref:typename:__USED__ void
resume	include/frontends/tasking/worker.hpp	/^  __USED__ inline void resume()$/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ void
resume	include/hicr/L0/executionState.hpp	/^  __USED__ inline void resume()$/;"	f	class:HiCR::L0::ExecutionState	typeref:typename:__USED__ void
resume	include/hicr/L0/processingUnit.hpp	/^  __USED__ inline void resume()$/;"	f	class:HiCR::L0::ProcessingUnit	typeref:typename:__USED__ void
resumeImpl	include/backends/ascend/L0/executionState.hpp	/^  __USED__ inline void resumeImpl() override$/;"	f	class:HiCR::backend::ascend::L0::ExecutionState	typeref:typename:__USED__ void
resumeImpl	include/backends/ascend/L0/processingUnit.hpp	/^  __USED__ inline void resumeImpl() override$/;"	f	class:HiCR::backend::ascend::L0::ProcessingUnit	typeref:typename:__USED__ void
resumeImpl	include/backends/host/L0/executionState.hpp	/^  __USED__ inline void resumeImpl() override$/;"	f	class:HiCR::backend::host::L0::ExecutionState	typeref:typename:__USED__ void
resumeImpl	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ inline void resumeImpl() override$/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ void
reverse_iterator	extern/nlohmann_json/json.hpp	/^    using reverse_iterator = json_reverse_iterator<typename basic_json::iterator>;$/;"	t	class:basic_json	typeref:typename:json_reverse_iterator<typename basic_json::iterator>
reverse_iterator	extern/parallel_hashmap/btree.h	/^        using reverse_iterator = std::reverse_iterator<iterator>;$/;"	t	class:phmap::priv::btree	typeref:typename:std::reverse_iterator<iterator>
reverse_iterator	extern/parallel_hashmap/btree.h	/^        using reverse_iterator = typename Tree::reverse_iterator;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::reverse_iterator
reverse_iterator	extern/parallel_hashmap/phmap_base.h	/^    using reverse_iterator = std::reverse_iterator<iterator>;$/;"	t	class:phmap::Span	typeref:typename:std::reverse_iterator<iterator>
rhs	extern/parallel_hashmap/phmap.h	/^        const K1& rhs;$/;"	m	struct:phmap::priv::parallel_hash_set::EqualElement	typeref:typename:const K1 &
rhs	extern/parallel_hashmap/phmap.h	/^        const K1& rhs;$/;"	m	struct:phmap::priv::raw_hash_set::EqualElement	typeref:typename:const K1 &
rightmost_	extern/parallel_hashmap/btree.h	/^        node_type *rightmost_;$/;"	m	class:phmap::priv::btree	typeref:typename:node_type *
root	extern/nlohmann_json/json.hpp	/^    BasicJsonType& root;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType &
root	extern/nlohmann_json/json.hpp	/^    BasicJsonType& root;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType &
root	extern/parallel_hashmap/btree.h	/^        const node_type *root() const { return root_.template get<2>(); }$/;"	f	class:phmap::priv::btree	typeref:typename:const node_type *
root	extern/parallel_hashmap/btree.h	/^        node_type *root() { return root_.template get<2>(); }$/;"	f	class:phmap::priv::btree	typeref:typename:node_type *
root_	extern/parallel_hashmap/btree.h	/^        root_;$/;"	m	class:phmap::priv::btree	typeref:typename:phmap::priv::CompressedTuple<key_compare,allocator_type,node_type * >
round_up_to_power_of_2	extern/atomic_queue/atomic_queue.h	/^constexpr uint32_t round_up_to_power_of_2(uint32_t a) noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:uint32_t
round_up_to_power_of_2	extern/atomic_queue/atomic_queue.h	/^constexpr uint64_t round_up_to_power_of_2(uint64_t a) noexcept {$/;"	f	namespace:atomic_queue::details	typeref:typename:uint64_t
run	examples/tasking/runtime.hpp	/^  __USED__ inline void run(HiCR::L1::ComputeManager *computeManager)$/;"	f	class:taskr::Runtime	typeref:typename:__USED__ void
run	include/frontends/tasking/task.hpp	/^  __USED__ inline void run()$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ void
run_clang_format_diff	extern/run-clang-format/run-clang-format.py	/^def run_clang_format_diff(args, file):$/;"	f
run_clang_format_diff_wrapper	extern/run-clang-format/run-clang-format.py	/^def run_clang_format_diff_wrapper(args, file):$/;"	f
running	include/frontends/tasking/worker.hpp	/^    running,$/;"	e	enum:HiCR::tasking::Worker::state_t
running	include/hicr/L0/executionState.hpp	/^    running,$/;"	e	enum:HiCR::L0::ExecutionState::state_t
running	include/hicr/L0/processingUnit.hpp	/^    running,$/;"	e	enum:HiCR::L0::ProcessingUnit::state_t
runtime	examples/meson.build	/^subdir('runtime')$/;"	S
runtime	include/frontends/runtime/channel/hicr/consumerChannel.hpp	/^namespace runtime$/;"	n	namespace:HiCR
runtime	include/frontends/runtime/channel/hicr/producerChannel.hpp	/^namespace runtime$/;"	n	namespace:HiCR
runtime	include/frontends/runtime/coordinator.hpp	/^namespace runtime$/;"	n	namespace:HiCR
runtime	include/frontends/runtime/dataObject/mpi/dataObject.hpp	/^namespace runtime$/;"	n	namespace:HiCR
runtime	include/frontends/runtime/instance.hpp	/^namespace runtime$/;"	n	namespace:HiCR
runtime	include/frontends/runtime/worker.hpp	/^namespace runtime$/;"	n	namespace:HiCR
runtime	include/hicr/exceptions.hpp	/^  runtime,$/;"	e	enum:HiCR::exceptions::exception_t
s	extern/parallel_hashmap/phmap.h	/^        const parallel_hash_set& s;$/;"	m	struct:phmap::priv::parallel_hash_set::FindElement	typeref:typename:const parallel_hash_set &
s	extern/parallel_hashmap/phmap.h	/^        const raw_hash_set& s;$/;"	m	struct:phmap::priv::raw_hash_set::FindElement	typeref:typename:const raw_hash_set &
s	extern/parallel_hashmap/phmap.h	/^        parallel_hash_set& s;$/;"	m	struct:phmap::priv::parallel_hash_set::EmplaceDecomposable	typeref:typename:parallel_hash_set &
s	extern/parallel_hashmap/phmap.h	/^        parallel_hash_set& s;$/;"	m	struct:phmap::priv::parallel_hash_set::EmplaceDecomposableHashval	typeref:typename:parallel_hash_set &
s	extern/parallel_hashmap/phmap.h	/^        raw_hash_set& s;$/;"	m	struct:phmap::priv::raw_hash_set::EmplaceDecomposable	typeref:typename:raw_hash_set &
s	extern/parallel_hashmap/phmap.h	/^        raw_hash_set& s;$/;"	m	struct:phmap::priv::raw_hash_set::EmplaceDecomposableHashval	typeref:typename:raw_hash_set &
s	extern/parallel_hashmap/phmap.h	/^        raw_hash_set& s;$/;"	m	struct:phmap::priv::raw_hash_set::InsertSlot	typeref:typename:raw_hash_set &
s	extern/parallel_hashmap/phmap.h	/^        raw_hash_set& s;$/;"	m	struct:phmap::priv::raw_hash_set::InsertSlotWithHash	typeref:typename:raw_hash_set &
same_sign	extern/nlohmann_json/json.hpp	/^using same_sign = std::integral_constant < bool,$/;"	t	namespace:detail	typeref:typename:std::integral_constant<bool,all_signed<Types...>::value||all_unsigned<Types...>::value>
save	extern/parallel_hashmap/phmap_dump.h	/^    void save(typename std::enable_if<PhmapTrivCopyable<K>::value && PhmapTrivCopyable<V>::value/;"	f	namespace:cereal	typeref:typename:void
save	extern/parallel_hashmap/phmap_dump.h	/^    void save(typename std::enable_if<PhmapTrivCopyable<K>::value, typename cereal::BinaryOutput/;"	f	namespace:cereal	typeref:typename:void
saveBinary	extern/parallel_hashmap/phmap_dump.h	/^    auto saveBinary(const Map& v) -> decltype(v.phmap_dump(*this), bool())$/;"	f	class:phmap::BinaryOutputArchive	typeref:typename:decltype(v.phmap_dump (* this),bool ())
saveBinary	extern/parallel_hashmap/phmap_dump.h	/^    bool saveBinary(const void *p, size_t sz) {$/;"	f	class:phmap::BinaryOutputArchive	typeref:typename:bool
saveBinary	extern/parallel_hashmap/phmap_dump.h	/^    saveBinary(const V& v) {$/;"	f	class:phmap::BinaryOutputArchive	typeref:typename:std::enable_if<type_traits_internal::IsTriviallyCopyable<V>::value,bool>::type
sax	extern/nlohmann_json/json.hpp	/^    json_sax_t* sax = nullptr;$/;"	m	class:detail::binary_reader	typeref:typename:json_sax_t *
sax_parse	extern/nlohmann_json/json.hpp	/^    bool sax_parse(SAX* sax, const bool strict = true)$/;"	f	class:detail::parser	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse	extern/nlohmann_json/json.hpp	/^    bool sax_parse(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
sax_parse	extern/nlohmann_json/json.hpp	/^    static bool sax_parse(InputType&& i, SAX* sax,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse	extern/nlohmann_json/json.hpp	/^    static bool sax_parse(IteratorType first, IteratorType last, SAX* sax,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
sax_parse	extern/nlohmann_json/json.hpp	/^    static bool sax_parse(detail::span_input_adapter&& i, SAX* sax,$/;"	f	class:basic_json
sax_parse_internal	extern/nlohmann_json/json.hpp	/^    bool sax_parse_internal(SAX* sax)$/;"	f	class:detail::parser	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sb	extern/nlohmann_json/json.hpp	/^    std::streambuf* sb = nullptr;$/;"	m	class:detail::input_stream_adapter	typeref:typename:std::streambuf *
scalar	extern/parallel_hashmap/phmap_base.h	/^    using scalar = std::unique_ptr<T>;$/;"	t	struct:phmap::memory_internal::MakeUniqueResult	typeref:typename:std::unique_ptr<T>
scan	extern/nlohmann_json/json.hpp	/^    token_type scan()$/;"	f	class:detail::lexer	typeref:typename:token_type
scan_comment	extern/nlohmann_json/json.hpp	/^    bool scan_comment()$/;"	f	class:detail::lexer	typeref:typename:bool
scan_literal	extern/nlohmann_json/json.hpp	/^    token_type scan_literal(const char_type* literal_text, const std::size_t length,$/;"	f	class:detail::lexer
scan_number	extern/nlohmann_json/json.hpp	/^    token_type scan_number()  \/\/ lgtm [cpp\/use-of-goto]$/;"	f	class:detail::lexer	typeref:typename:token_type
scan_string	extern/nlohmann_json/json.hpp	/^    token_type scan_string()$/;"	f	class:detail::lexer	typeref:typename:token_type
scripts	extern/doxygen-awesome-css/package.json	/^  "scripts": {$/;"	o
second	extern/parallel_hashmap/phmap_base.h	/^        V second;$/;"	m	struct:phmap::priv::memory_internal::IsLayoutCompatible::Pair	typeref:typename:V
select	include/backends/ascend/L0/device.hpp	/^  __USED__ inline void select() const$/;"	f	class:HiCR::backend::ascend::L0::Device	typeref:typename:__USED__ void
selectDevice	include/backends/ascend/L0/device.hpp	/^  __USED__ static inline void selectDevice(const aclrtContext *deviceContext, const deviceIdenti/;"	f	class:HiCR::backend::ascend::L0::Device	typeref:typename:__USED__ void
select_on_container_copy_construction	extern/parallel_hashmap/phmap_base.h	/^    static Alloc select_on_container_copy_construction(const Alloc& a) {$/;"	f	struct:phmap::allocator_traits	typeref:typename:Alloc
select_on_container_copy_construction_impl	extern/parallel_hashmap/phmap_base.h	/^    static Alloc select_on_container_copy_construction_impl(char,$/;"	f	struct:phmap::allocator_traits	typeref:typename:Alloc
select_on_container_copy_construction_impl	extern/parallel_hashmap/phmap_base.h	/^    static auto select_on_container_copy_construction_impl(int, const A& a)$/;"	f	struct:phmap::allocator_traits	typeref:typename:decltype(a.select_on_container_copy_construction ())
semaphore	.vscode/settings.json	/^        "semaphore": "cpp",$/;"	s	object:files.associations
sendMessage	include/frontends/runtime/channel/hicr/channelsImpl.hpp	/^__USED__ inline void Instance::sendMessage(const HiCR::L0::Instance::instanceId_t instanceId, vo/;"	f	class:Instance	typeref:typename:__USED__ void
sendTopology	examples/hicr/topologyRPC/source/include/worker.hpp	/^void sendTopology(HiCR::L1::InstanceManager &instanceManager)$/;"	f	typeref:typename:void
sentinel	extern/nlohmann_json/json.hpp	/^    using sentinel = detected_t<result_of_end, t_ref>;$/;"	t	struct:detail::is_range	typeref:typename:detected_t<result_of_end,t_ref>
serialize	include/backends/host/cache.hpp	/^  __USED__ inline nlohmann::json serialize() const$/;"	f	class:HiCR::backend::host::Cache	typeref:typename:__USED__ nlohmann::json
serialize	include/hicr/L0/computeResource.hpp	/^  __USED__ inline nlohmann::json serialize() const$/;"	f	class:HiCR::L0::ComputeResource	typeref:typename:__USED__ nlohmann::json
serialize	include/hicr/L0/device.hpp	/^  __USED__ inline nlohmann::json serialize() const$/;"	f	class:HiCR::L0::Device	typeref:typename:__USED__ nlohmann::json
serialize	include/hicr/L0/memorySpace.hpp	/^  __USED__ inline nlohmann::json serialize() const$/;"	f	class:HiCR::L0::MemorySpace	typeref:typename:__USED__ nlohmann::json
serialize	include/hicr/L0/topology.hpp	/^  __USED__ inline nlohmann::json serialize() const$/;"	f	class:HiCR::L0::Topology	typeref:typename:__USED__ nlohmann::json
serializeImpl	include/backends/ascend/L0/computeResource.hpp	/^  __USED__ inline void serializeImpl(nlohmann::json &output) const override$/;"	f	class:HiCR::backend::ascend::L0::ComputeResource	typeref:typename:__USED__ void
serializeImpl	include/backends/ascend/L0/device.hpp	/^  __USED__ inline void serializeImpl(nlohmann::json &output) const override$/;"	f	class:HiCR::backend::ascend::L0::Device	typeref:typename:__USED__ void
serializeImpl	include/backends/ascend/L0/memorySpace.hpp	/^  __USED__ inline void serializeImpl(nlohmann::json &output) const override$/;"	f	class:HiCR::backend::ascend::L0::MemorySpace	typeref:typename:__USED__ void
serializeImpl	include/backends/host/L0/computeResource.hpp	/^  __USED__ inline void serializeImpl(nlohmann::json &output) const override$/;"	f	class:HiCR::backend::host::L0::ComputeResource	typeref:typename:__USED__ void
serializeImpl	include/backends/host/L0/device.hpp	/^  __USED__ inline void serializeImpl(nlohmann::json &output) const override$/;"	f	class:HiCR::backend::host::L0::Device	typeref:typename:__USED__ void
serializeImpl	include/backends/host/L0/memorySpace.hpp	/^  __USED__ inline void serializeImpl(nlohmann::json &output) const override$/;"	f	class:HiCR::backend::host::L0::MemorySpace	typeref:typename:__USED__ void
serializeImpl	include/backends/host/hwloc/L0/computeResource.hpp	/^  __USED__ inline void serializeImpl(nlohmann::json &output) const override$/;"	f	class:HiCR::backend::host::hwloc::L0::ComputeResource	typeref:typename:__USED__ void
serializeImpl	include/backends/host/hwloc/L0/device.hpp	/^  __USED__ inline void serializeImpl(nlohmann::json &output) const override$/;"	f	class:HiCR::backend::host::hwloc::L0::Device	typeref:typename:__USED__ void
serializeImpl	include/backends/host/hwloc/L0/memorySpace.hpp	/^  __USED__ inline void serializeImpl(nlohmann::json &output) const override$/;"	f	class:HiCR::backend::host::hwloc::L0::MemorySpace	typeref:typename:__USED__ void
serializer	extern/nlohmann_json/json.hpp	/^    serializer(output_adapter_t<char> s, const char ichar,$/;"	f	class:detail::serializer
serializer	extern/nlohmann_json/json.hpp	/^    using serializer = ::nlohmann::detail::serializer<basic_json>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::serializer<basic_json>
serializer	extern/nlohmann_json/json.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:detail::has_from_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/nlohmann_json/json.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:detail::has_non_default_from_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/nlohmann_json/json.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:detail::has_to_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/nlohmann_json/json.hpp	/^class serializer$/;"	c	namespace:detail
set	.vscode/settings.json	/^        "set": "cpp",$/;"	s	object:files.associations
setEvent	include/frontends/tasking/eventMap.hpp	/^  __USED__ inline void setEvent(const E event, eventCallback_t<T> fc)$/;"	f	class:HiCR::tasking::EventMap	typeref:typename:__USED__ void
setEventMap	include/frontends/tasking/task.hpp	/^  __USED__ inline void setEventMap(taskEventMap_t *eventMap) { _eventMap = eventMap; }$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ void
setExecutionUnit	include/frontends/tasking/task.hpp	/^  __USED__ inline void setExecutionUnit(std::shared_ptr<HiCR::L0::ExecutionUnit> executionUnit) /;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ void
setHead	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline void setHead(const size_t headAdvanceCounter)$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ void
setLockAcquiredValue	include/backends/mpi/L0/globalMemorySlot.hpp	/^  __USED__ inline void setLockAcquiredValue(const bool value) { _lockAcquired = value; }$/;"	f	class:HiCR::backend::mpi::L0::GlobalMemorySlot	typeref:typename:__USED__ void
setMaximumActiveWorkers	examples/tasking/runtime.hpp	/^  __USED__ inline void setMaximumActiveWorkers(const size_t max)$/;"	f	class:taskr::Runtime	typeref:typename:__USED__ void
setMessagesRecv	include/hicr/L0/localMemorySlot.hpp	/^  __USED__ inline void setMessagesRecv(const size_t count) noexcept { _messagesRecv = count; }$/;"	f	class:HiCR::L0::LocalMemorySlot	typeref:typename:__USED__ void
setMessagesRecv	include/hicr/L0/memorySlot.hpp	/^  __USED__ inline void setMessagesRecv(const size_t count) noexcept { _messagesRecv = count; }$/;"	f	class:HiCR::L0::MemorySlot	typeref:typename:__USED__ void
setMessagesSent	include/hicr/L0/localMemorySlot.hpp	/^  __USED__ inline void setMessagesSent(const size_t count) noexcept { _messagesSent = count; }$/;"	f	class:HiCR::L0::LocalMemorySlot	typeref:typename:__USED__ void
setMessagesSent	include/hicr/L0/memorySlot.hpp	/^  __USED__ inline void setMessagesSent(const size_t count) noexcept { _messagesSent = count; }$/;"	f	class:HiCR::L0::MemorySlot	typeref:typename:__USED__ void
setRequestedBindingType	include/backends/host/hwloc/L1/memoryManager.hpp	/^  void setRequestedBindingType(const L0::LocalMemorySlot::binding_type type) { _hwlocBindingRequ/;"	f	class:HiCR::backend::host::hwloc::L1::MemoryManager	typeref:typename:void
setTail	include/frontends/channel/circularBuffer.hpp	/^  __USED__ inline void setTail(const size_t tailAdvanceCounter)$/;"	f	class:HiCR::channel::CircularBuffer	typeref:typename:__USED__ void
set_	extern/parallel_hashmap/phmap.h	/^        EmbeddedSet set_;$/;"	m	struct:phmap::priv::parallel_hash_set::Inner	typeref:typename:EmbeddedSet
set_begin	extern/nlohmann_json/json.hpp	/^    void set_begin() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:void
set_child	extern/parallel_hashmap/btree.h	/^        void set_child(size_type i, btree_node *c) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
set_count	extern/parallel_hashmap/btree.h	/^        void set_count(field_type v)       { GetField<1>()[2] = v; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
set_ctrl	extern/parallel_hashmap/phmap.h	/^    void set_ctrl(size_t i, ctrl_t h) {$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
set_end	extern/nlohmann_json/json.hpp	/^    void set_end() noexcept$/;"	f	class:detail::iter_impl	typeref:typename:void
set_end	extern/nlohmann_json/json.hpp	/^    void set_end() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:void
set_max_count	extern/parallel_hashmap/btree.h	/^        void set_max_count(field_type v)   { GetField<1>()[3] = v; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
set_params	extern/parallel_hashmap/btree.h	/^    struct set_params : common_params<Key, Compare, Alloc, TargetNodeSize, Multi,$/;"	s	namespace:phmap::priv
set_parent	extern/nlohmann_json/json.hpp	/^    reference set_parent(reference j, std::size_t old_capacity = static_cast<std::size_t>(-1))$/;"	f	class:basic_json	typeref:typename:reference
set_parent	extern/parallel_hashmap/btree.h	/^        void set_parent(btree_node *p)     { *GetField<0>() = p; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
set_parents	extern/nlohmann_json/json.hpp	/^    iterator set_parents(iterator it, typename iterator::difference_type count_set_parents)$/;"	f	class:basic_json	typeref:typename:iterator
set_parents	extern/nlohmann_json/json.hpp	/^    void set_parents()$/;"	f	class:basic_json	typeref:typename:void
set_position	extern/parallel_hashmap/btree.h	/^        void set_position(field_type v)    { GetField<1>()[0] = v; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
set_slot_policy	extern/parallel_hashmap/btree.h	/^    struct set_slot_policy {$/;"	s	namespace:phmap::priv
set_start	extern/parallel_hashmap/btree.h	/^        void set_start(field_type v)       { GetField<1>()[1] = v; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
set_subtype	extern/nlohmann_json/json.hpp	/^    void set_subtype(subtype_type subtype_) noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:void
sets_	extern/parallel_hashmap/phmap.h	/^    std::array<Inner, num_tables> sets_;$/;"	m	class:phmap::priv::parallel_hash_set	typeref:typename:std::array<Inner,num_tables>
settings_	extern/parallel_hashmap/phmap.h	/^    settings_{0, hasher{}, key_equal{}, allocator_type{}};$/;"	m	class:phmap::priv::raw_hash_set	typeref:typename:phmap::priv::CompressedTuple<size_t,hasher,key_equal,allocator_type>
setupInterDeviceCommunication	include/backends/ascend/L1/topologyManager.hpp	/^  __USED__ inline void setupInterDeviceCommunication(std::unordered_set<std::shared_ptr<ascend::/;"	f	class:HiCR::backend::ascend::L1::TopologyManager	typeref:typename:__USED__ void
sharedMemory	examples/channels/fixedSize/mpsc/meson.build	/^	  test('sharedMemory', sharedMemory, args : [ '3', '15' ], timeout: test_timeout, suite: testSu/;"	t
sharedMemory	examples/channels/fixedSize/mpsc/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp' ], dependencies: hicrBui/;"	B
sharedMemory	examples/channels/fixedSize/mpsc/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp' ], dependencies: hicrBui/;"	V
sharedMemory	examples/channels/fixedSize/spsc/meson.build	/^	 test('sharedMemory', sharedMemory, args : [ '2' ], timeout: test_timeout, suite: testSuite )$/;"	t
sharedMemory	examples/channels/fixedSize/spsc/meson.build	/^	 test('sharedMemory', sharedMemory, args : [ '3' ], timeout: test_timeout, suite: testSuite )$/;"	t
sharedMemory	examples/channels/fixedSize/spsc/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp' ], dependencies: hicrBui/;"	B
sharedMemory	examples/channels/fixedSize/spsc/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp' ], dependencies: hicrBui/;"	V
sharedMemory	examples/channels/variableSize/spsc/meson.build	/^	 test('sharedMemory', sharedMemory, args : [ '2' ], timeout: test_timeout, suite: testSuite )$/;"	t
sharedMemory	examples/channels/variableSize/spsc/meson.build	/^	 test('sharedMemory', sharedMemory, args : [ '3' ], timeout: test_timeout, suite: testSuite )$/;"	t
sharedMemory	examples/channels/variableSize/spsc/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp' ], dependencies: hicrBui/;"	B
sharedMemory	examples/channels/variableSize/spsc/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp' ], dependencies: hicrBui/;"	V
sharedMemory	examples/hicr/kernel/meson.build	/^	 test('sharedMemory', sharedMemory, suite: testSuite )$/;"	t
sharedMemory	examples/hicr/kernel/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp' ], dependencies: hicrBui/;"	B
sharedMemory	examples/hicr/kernel/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp' ], dependencies: hicrBui/;"	V
sharedMemory	examples/hicr/memcpy/meson.build	/^	  test('sharedMemory', sharedMemory, args : [ ], timeout: test_timeout, suite: testSuite )$/;"	t
sharedMemory	examples/hicr/memcpy/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp'], dependencies: hicrBuil/;"	B
sharedMemory	examples/hicr/memcpy/meson.build	/^	sharedMemory = executable('sharedMemory', [ 'source\/sharedMemory.cpp'], dependencies: hicrBuil/;"	V
shared_mutex	.vscode/settings.json	/^        "shared_mutex": "cpp",$/;"	s	object:files.associations
size	extern/nlohmann_json/json.hpp	/^    size_type size() const noexcept$/;"	f	class:basic_json	typeref:typename:size_type
size	extern/nlohmann_json/json.hpp	/^    static constexpr std::size_t size() noexcept$/;"	f	struct:detail::integer_sequence	typeref:typename:std::size_t
size	extern/parallel_hashmap/btree.h	/^        size_type size() const { return size_; }$/;"	f	class:phmap::priv::btree	typeref:typename:size_type
size	extern/parallel_hashmap/btree.h	/^        size_type size() const { return tree_.size(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:size_type
size	extern/parallel_hashmap/phmap.h	/^    size_t size() const { $/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
size	extern/parallel_hashmap/phmap.h	/^    size_t size() const { return size_; }$/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:size_t
size	extern/parallel_hashmap/phmap_base.h	/^    constexpr size_type size() const noexcept { return len_; }$/;"	f	class:phmap::Span	typeref:typename:size_type
size	extern/parallel_hashmap/phmap_base.h	/^    static constexpr size_t size() noexcept { return sizeof...(Ints); }$/;"	f	struct:phmap::integer_sequence	typeref:typename:size_t
size_	extern/atomic_queue/atomic_queue.h	/^    static constexpr unsigned size_ = MINIMIZE_CONTENTION ? details::round_up_to_power_of_2(SIZE/;"	m	class:atomic_queue::AtomicQueue	typeref:typename:unsigned
size_	extern/atomic_queue/atomic_queue.h	/^    static constexpr unsigned size_ = MINIMIZE_CONTENTION ? details::round_up_to_power_of_2(SIZE/;"	m	class:atomic_queue::AtomicQueue2	typeref:typename:unsigned
size_	extern/parallel_hashmap/btree.h	/^        size_type size_;$/;"	m	class:phmap::priv::btree	typeref:typename:size_type
size_	extern/parallel_hashmap/phmap.h	/^    size_t size_ = 0;                \/\/ number of full slots$/;"	m	class:phmap::priv::raw_hash_set	typeref:typename:size_t
size_	extern/parallel_hashmap/phmap_base.h	/^    size_t size_[NumSizes > 0 ? NumSizes : 1];$/;"	m	class:phmap::priv::internal_layout::LayoutImpl	typeref:typename:size_t[]
size_type	extern/nlohmann_json/json.hpp	/^        using size_type = typename BasicJsonType::size_type;$/;"	t	function:json_pointer::array_index	typeref:typename:BasicJsonType::size_type
size_type	extern/nlohmann_json/json.hpp	/^    using size_type = std::size_t;$/;"	t	class:basic_json	typeref:typename:std::size_t
size_type	extern/nlohmann_json/json.hpp	/^    using size_type = typename Container::size_type;$/;"	t	struct:ordered_map	typeref:typename:Container::size_type
size_type	extern/parallel_hashmap/btree.h	/^            using size_type = typename Params::size_type;$/;"	t	struct:phmap::priv::btree::node_stats	typeref:typename:Params::size_type
size_type	extern/parallel_hashmap/btree.h	/^        using size_type = std::size_t ;$/;"	t	struct:phmap::priv::common_params	typeref:typename:std::size_t
size_type	extern/parallel_hashmap/btree.h	/^        using size_type = typename Node::size_type;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:Node::size_type
size_type	extern/parallel_hashmap/btree.h	/^        using size_type = typename Params::size_type;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::size_type
size_type	extern/parallel_hashmap/btree.h	/^        using size_type = typename Params::size_type;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::size_type
size_type	extern/parallel_hashmap/btree.h	/^        using size_type = typename Tree::size_type;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::size_type
size_type	extern/parallel_hashmap/btree.h	/^        using size_type = typename Tree::size_type;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:Tree::size_type
size_type	extern/parallel_hashmap/btree.h	/^        using size_type = typename Tree::size_type;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:Tree::size_type
size_type	extern/parallel_hashmap/phmap.h	/^    using size_type       = size_t;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
size_type	extern/parallel_hashmap/phmap.h	/^    using size_type = size_t;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:size_t
size_type	extern/parallel_hashmap/phmap_base.h	/^    using size_type = memory_internal::ExtractOrT<$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetSizeType,Alloc,typename std::make_unsigned<difference_type>::type>
size_type	extern/parallel_hashmap/phmap_base.h	/^    using size_type = size_t;$/;"	t	class:phmap::Span	typeref:typename:size_t
skip_bom	extern/nlohmann_json/json.hpp	/^    bool skip_bom()$/;"	f	class:detail::lexer	typeref:typename:bool
skip_empty	extern/parallel_hashmap/phmap.h	/^        void skip_empty() {$/;"	f	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:void
skip_empty_or_deleted	extern/parallel_hashmap/phmap.h	/^        void skip_empty_or_deleted() {$/;"	f	class:phmap::priv::raw_hash_set::iterator	typeref:typename:void
skip_whitespace	extern/nlohmann_json/json.hpp	/^    void skip_whitespace()$/;"	f	class:detail::lexer	typeref:typename:void
slot	extern/parallel_hashmap/btree.h	/^        const slot_type *slot(size_type i) const { return &GetField<2>()[i]; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:const slot_type *
slot	extern/parallel_hashmap/btree.h	/^        slot_type *slot() { return node->slot(position); }$/;"	f	struct:phmap::priv::btree_iterator	typeref:typename:slot_type *
slot	extern/parallel_hashmap/btree.h	/^        slot_type *slot(size_type i)       { return &GetField<2>()[i]; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:slot_type *
slot	extern/parallel_hashmap/phmap_base.h	/^    slot_type* slot() const {$/;"	f	class:phmap::priv::node_handle_base	typeref:typename:slot_type *
slot_	extern/parallel_hashmap/phmap.h	/^            slot_type* slot_;$/;"	m	union:phmap::priv::raw_hash_set::iterator::__anon8e551a73030a	typeref:typename:slot_type *
slot_	extern/parallel_hashmap/phmap.h	/^        slot_type** slot_;$/;"	m	class:phmap::priv::raw_hash_set::constructor	typeref:typename:slot_type **
slot_policy	extern/parallel_hashmap/btree.h	/^        using slot_policy = SlotPolicy;$/;"	t	struct:phmap::priv::common_params	typeref:typename:SlotPolicy
slot_policy	extern/parallel_hashmap/btree.h	/^        using slot_policy = typename super_type::slot_policy;$/;"	t	struct:phmap::priv::map_params	typeref:typename:super_type::slot_policy
slot_policy	extern/parallel_hashmap/phmap.h	/^    using slot_policy = priv::map_slot_policy<K, V>;$/;"	t	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:priv::map_slot_policy<K,V>
slot_space_	extern/parallel_hashmap/phmap_base.h	/^    mutable phmap::aligned_storage_t<sizeof(slot_type), alignof(slot_type)> slot_space_;$/;"	m	class:phmap::priv::node_handle_base	typeref:typename:phmap::aligned_storage_t<sizeof (slot_type),alignof (slot_type)>
slot_type	extern/parallel_hashmap/btree.h	/^        using slot_type = Key;$/;"	t	struct:phmap::priv::set_slot_policy	typeref:typename:Key
slot_type	extern/parallel_hashmap/btree.h	/^        using slot_type = typename Params::slot_type;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::slot_type
slot_type	extern/parallel_hashmap/btree.h	/^        using slot_type = typename Params::slot_type;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::slot_type
slot_type	extern/parallel_hashmap/btree.h	/^        using slot_type = typename params_type::slot_type;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:params_type::slot_type
slot_type	extern/parallel_hashmap/btree.h	/^        using slot_type = typename set_params::common_params::slot_type;$/;"	t	struct:phmap::priv::set_params	typeref:typename:set_params::common_params::slot_type
slot_type	extern/parallel_hashmap/btree.h	/^        using slot_type = typename slot_policy::slot_type;$/;"	t	struct:phmap::priv::common_params	typeref:typename:slot_policy::slot_type
slot_type	extern/parallel_hashmap/btree.h	/^        using slot_type = typename super_type::slot_type;$/;"	t	struct:phmap::priv::map_params	typeref:typename:super_type::slot_type
slot_type	extern/parallel_hashmap/phmap.h	/^    using slot_type       = typename PolicyTraits::slot_type;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:PolicyTraits::slot_type
slot_type	extern/parallel_hashmap/phmap.h	/^    using slot_type = T;$/;"	t	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:T
slot_type	extern/parallel_hashmap/phmap.h	/^    using slot_type = typename PolicyTraits::slot_type;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:PolicyTraits::slot_type
slot_type	extern/parallel_hashmap/phmap.h	/^    using slot_type = typename slot_policy::slot_type;$/;"	t	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:slot_policy::slot_type
slot_type	extern/parallel_hashmap/phmap.h	/^    using slot_type = typename std::remove_cv<$/;"	t	struct:phmap::priv::node_hash_policy	typeref:typename:std::remove_cv<typename std::remove_reference<Reference>::type>::type *
slot_type	extern/parallel_hashmap/phmap_base.h	/^    using slot_type  = typename Policy::slot_type;$/;"	t	struct:phmap::priv::hash_policy_traits	typeref:typename:Policy::slot_type
slot_type	extern/parallel_hashmap/phmap_base.h	/^    using slot_type = map_slot_type<K, V>;$/;"	t	struct:phmap::priv::map_slot_policy	typeref:typename:map_slot_type<K,V>
slot_type	extern/parallel_hashmap/phmap_base.h	/^    using slot_type = typename PolicyTraits::slot_type;$/;"	t	class:phmap::priv::node_handle	typeref:typename:PolicyTraits::slot_type
slot_type	extern/parallel_hashmap/phmap_base.h	/^    using slot_type = typename PolicyTraits::slot_type;$/;"	t	class:phmap::priv::node_handle_base	typeref:typename:PolicyTraits::slot_type
slots_	extern/parallel_hashmap/phmap.h	/^    slot_type* slots_ = nullptr;     \/\/ [capacity * slot_type]$/;"	m	class:phmap::priv::raw_hash_set	typeref:typename:slot_type *
slurp	examples/machineModel/source/include/common.hpp	/^inline std::string slurp(std::ifstream &in)$/;"	f	typeref:typename:std::string
slurp	examples/runtime/source/include/machineModel.hpp	/^inline std::string slurp(std::ifstream &in)$/;"	f	typeref:typename:std::string
source_suffix	docs/source/conf.py	/^source_suffix = '.rst'$/;"	v
sp	docs/source/conf.py	/^import subprocess as sp$/;"	I	nameref:module:subprocess
space_used	extern/parallel_hashmap/phmap.h	/^    static size_t space_used(const T*) { return 0; }$/;"	f	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:size_t
space_used	extern/parallel_hashmap/phmap.h	/^    static size_t space_used(const slot_type* slot) {$/;"	f	struct:phmap::priv::node_hash_policy	typeref:typename:size_t
space_used	extern/parallel_hashmap/phmap.h	/^    static size_t space_used(const slot_type*) { return 0; }$/;"	f	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:size_t
space_used	extern/parallel_hashmap/phmap_base.h	/^    static size_t space_used(const slot_type* slot) {$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:size_t
span.mlabel	extern/doxygen-awesome-css/doxygen-awesome.css	/^span.mlabel {$/;"	c
span.mlabel:last-of-type	extern/doxygen-awesome-css/doxygen-awesome.css	/^span.mlabel:last-of-type {$/;"	c
span_input_adapter	extern/nlohmann_json/json.hpp	/^    span_input_adapter(CharT b, std::size_t l)$/;"	f	class:detail::span_input_adapter
span_input_adapter	extern/nlohmann_json/json.hpp	/^    span_input_adapter(IteratorType first, IteratorType last)$/;"	f	class:detail::span_input_adapter
span_input_adapter	extern/nlohmann_json/json.hpp	/^class span_input_adapter$/;"	c	namespace:detail
span_internal	extern/parallel_hashmap/phmap_base.h	/^namespace span_internal {$/;"	n	namespace:phmap
sphinx	docs/Makefile	/^sphinx:$/;"	t
spin_loop_pause	extern/atomic_queue/defs.h	/^static inline void spin_loop_pause() noexcept {$/;"	f	namespace:atomic_queue	typeref:typename:void
spin_loop_pause	extern/atomic_queue/defs.h	/^static inline void spin_loop_pause() noexcept {} \/\/ TODO: Find the right instruction to use he/;"	f	namespace:atomic_queue	typeref:typename:void
spin_loop_pause	extern/atomic_queue/defs.h	/^static inline void spin_loop_pause() noexcept {}$/;"	f	namespace:atomic_queue	typeref:typename:void
split	extern/nlohmann_json/json.hpp	/^    static std::vector<string_t> split(const string_t& reference_string)$/;"	f	class:json_pointer	typeref:typename:std::vector<string_t>
split	extern/parallel_hashmap/btree.h	/^    void btree_node<P>::split(const int insert_position, btree_node *dest,$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
spmd	examples/channels/fixedSize/spsc/source/lpf.cpp	/^void spmd(lpf_t lpf, lpf_pid_t pid, lpf_pid_t nprocs, lpf_args_t args)$/;"	f	typeref:typename:void
spmd	examples/channels/variableSize/spsc/source/lpf.cpp	/^void spmd(lpf_t lpf, lpf_pid_t pid, lpf_pid_t nprocs, lpf_args_t args)$/;"	f	typeref:typename:void
spmd	examples/hicr/memcpy/source/lpf.cpp	/^void spmd(lpf_t lpf, lpf_pid_t pid, lpf_pid_t nprocs, lpf_args_t args)$/;"	f	typeref:typename:void
spmd	examples/hicr/memcpy/source/lpfMemcpyAndCountingFence.cpp	/^void spmd(lpf_t lpf, lpf_pid_t pid, lpf_pid_t nprocs, lpf_args_t args)$/;"	f	typeref:typename:void
spp	extern/parallel_hashmap/meminfo.h	/^namespace spp$/;"	n
spp_memory_h_guard	extern/parallel_hashmap/meminfo.h	/^#define spp_memory_h_guard$/;"	d
spsc	examples/channels/fixedSize/meson.build	/^subdir('spsc')$/;"	S
spsc	examples/channels/variableSize/meson.build	/^subdir('spsc')$/;"	S
spsc	tests/frontends/channel/fixedSize/meson.build	/^subdir('spsc')$/;"	S
spsc_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool spsc_ = SPSC;$/;"	m	class:atomic_queue::AtomicQueue	typeref:typename:bool
spsc_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool spsc_ = SPSC;$/;"	m	class:atomic_queue::AtomicQueue2	typeref:typename:bool
spsc_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool spsc_ = SPSC;$/;"	m	class:atomic_queue::AtomicQueueB	typeref:typename:bool
spsc_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool spsc_ = SPSC;$/;"	m	class:atomic_queue::AtomicQueueB2	typeref:typename:bool
sstream	.vscode/settings.json	/^        "sstream": "cpp",$/;"	s	object:files.associations
start	extern/parallel_hashmap/btree.h	/^            field_type start = 0;$/;"	m	struct:phmap::priv::btree::EmptyNodeType	typeref:typename:field_type
start	extern/parallel_hashmap/btree.h	/^        field_type start() const { return GetField<1>()[1]; }$/;"	f	class:phmap::priv::btree_node	typeref:typename:field_type
start	include/backends/ascend/L0/executionUnit.hpp	/^  __USED__ inline void start(const aclrtStream stream) const$/;"	f	class:HiCR::backend::ascend::L0::ExecutionUnit	typeref:typename:__USED__ void
start	include/backends/ascend/computationKernel.hpp	/^  __USED__ inline void start(const aclrtStream stream) override$/;"	f	class:HiCR::backend::ascend::ComputationKernel	typeref:typename:__USED__ void
start	include/backends/ascend/memoryKernel.hpp	/^  __USED__ inline void start(const aclrtStream stream) override$/;"	f	class:HiCR::backend::ascend::MemoryKernel	typeref:typename:__USED__ void
start	include/backends/host/coroutine.hpp	/^  __USED__ inline void start(coroutineFc_t fc)$/;"	f	class:HiCR::backend::host::Coroutine	typeref:typename:__USED__ void
start	include/frontends/tasking/worker.hpp	/^  __USED__ inline void start()$/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ void
start	include/hicr/L0/processingUnit.hpp	/^  __USED__ inline void start(std::unique_ptr<HiCR::L0::ExecutionState> executionState)$/;"	f	class:HiCR::L0::ProcessingUnit	typeref:typename:__USED__ void
startImpl	include/backends/ascend/L0/processingUnit.hpp	/^  __USED__ inline void startImpl(std::unique_ptr<HiCR::L0::ExecutionState> executionState) overr/;"	f	class:HiCR::backend::ascend::L0::ProcessingUnit	typeref:typename:__USED__ void
startImpl	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ inline void startImpl(std::unique_ptr<HiCR::L0::ExecutionState> executionState) overr/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ void
start_array	extern/nlohmann_json/json.hpp	/^    bool start_array(std::size_t \/*unused*\/ = static_cast<std::size_t>(-1))$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
start_array	extern/nlohmann_json/json.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
start_array	extern/nlohmann_json/json.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
start_array_function_t	extern/nlohmann_json/json.hpp	/^using start_array_function_t =$/;"	t	namespace:detail
start_object	extern/nlohmann_json/json.hpp	/^    bool start_object(std::size_t \/*unused*\/ = static_cast<std::size_t>(-1))$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
start_object	extern/nlohmann_json/json.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
start_object	extern/nlohmann_json/json.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
start_object_function_t	extern/nlohmann_json/json.hpp	/^using start_object_function_t =$/;"	t	namespace:detail
state	extern/nlohmann_json/json.hpp	/^        std::uint8_t state = UTF8_ACCEPT;$/;"	m	class:detail::serializer	typeref:typename:std::uint8_t
state_t	include/frontends/tasking/worker.hpp	/^  enum state_t$/;"	g	class:HiCR::tasking::Worker
state_t	include/hicr/L0/executionState.hpp	/^  enum state_t$/;"	g	class:HiCR::L0::ExecutionState
state_t	include/hicr/L0/processingUnit.hpp	/^  enum state_t$/;"	g	class:HiCR::L0::ProcessingUnit
states_	extern/atomic_queue/atomic_queue.h	/^    std::atomic<unsigned char>* states_;$/;"	m	class:atomic_queue::AtomicQueueB2	typeref:typename:std::atomic<unsigned char> *
static_assert_validation	extern/parallel_hashmap/btree.h	/^    constexpr bool btree<P>::static_assert_validation() {$/;"	f	class:phmap::priv::btree	typeref:typename:bool
static_const	extern/nlohmann_json/json.hpp	/^struct static_const$/;"	s	namespace:detail
std	extern/nlohmann_json/json.hpp	/^namespace std \/\/ NOLINT(cert-dcl58-cpp)$/;"	n
std	extern/nlohmann_json/json.hpp	/^namespace std$/;"	n
std	extern/parallel_hashmap/phmap_base.h	/^namespace std {$/;"	n
stdexcept	.vscode/settings.json	/^        "stdexcept": "cpp",$/;"	s	object:files.associations
stop_token	.vscode/settings.json	/^        "stop_token": "cpp",$/;"	s	object:files.associations
store	extern/nlohmann_json/json.hpp	/^    store    \/\/\/< store tags as binary type$/;"	e	enum:detail::cbor_tag_handler_t
str	extern/nlohmann_json/json.hpp	/^    StringType& str;$/;"	m	class:detail::output_string_adapter	typeref:typename:StringType &
stream	extern/nlohmann_json/json.hpp	/^    std::basic_ostream<CharType>& stream;$/;"	m	class:detail::output_stream_adapter	typeref:typename:std::basic_ostream<CharType> &
streambuf	.vscode/settings.json	/^        "streambuf": "cpp",$/;"	s	object:files.associations
strict	extern/nlohmann_json/json.hpp	/^    strict,  \/\/\/< throw a type_error exception in case of invalid UTF-8$/;"	e	enum:detail::error_handler_t
strict_binding	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^    strict_binding = 2,$/;"	e	enum:HiCR::backend::host::hwloc::L0::LocalMemorySlot::binding_type
strict_non_binding	include/backends/host/hwloc/L0/localMemorySlot.hpp	/^    strict_non_binding = 1,$/;"	e	enum:HiCR::backend::host::hwloc::L0::LocalMemorySlot::binding_type
string	.vscode/settings.json	/^        "string": "cpp",$/;"	s	object:files.associations
string	extern/nlohmann_json/json.hpp	/^        string_t* string;$/;"	m	union:basic_json::json_value	typeref:typename:string_t *
string	extern/nlohmann_json/json.hpp	/^    bool string(string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
string	extern/nlohmann_json/json.hpp	/^    bool string(string_t& val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
string	extern/nlohmann_json/json.hpp	/^    bool string(string_t& val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
string	extern/nlohmann_json/json.hpp	/^    string,           \/\/\/< string value$/;"	e	enum:detail::value_t
string_buffer	extern/nlohmann_json/json.hpp	/^    std::array<char, 512> string_buffer{{}};$/;"	m	class:detail::serializer	typeref:typename:std::array<char,512>
string_can_append	extern/nlohmann_json/json.hpp	/^using string_can_append = decltype(std::declval<StringType&>().append(std::declval < Arg && > ()/;"	t	namespace:detail
string_can_append_data	extern/nlohmann_json/json.hpp	/^using string_can_append_data = decltype(std::declval<StringType&>().append(std::declval<const Ar/;"	t	namespace:detail
string_can_append_iter	extern/nlohmann_json/json.hpp	/^using string_can_append_iter = decltype(std::declval<StringType&>().append(std::declval<const Ar/;"	t	namespace:detail
string_can_append_op	extern/nlohmann_json/json.hpp	/^using string_can_append_op = decltype(std::declval<StringType&>() += std::declval < Arg && > ())/;"	t	namespace:detail
string_function_t	extern/nlohmann_json/json.hpp	/^using string_function_t =$/;"	t	namespace:detail
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = StringType;$/;"	t	class:basic_json	typeref:typename:StringType
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::binary_writer	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::string_t
string_t	extern/nlohmann_json/json.hpp	/^    using string_t = typename string_t_helper<RefStringType>::type;$/;"	t	class:json_pointer	typeref:typename:string_t_helper<RefStringType>::type
string_t_helper	extern/nlohmann_json/json.hpp	/^    struct string_t_helper$/;"	s	class:json_pointer
string_t_helper	extern/nlohmann_json/json.hpp	/^    struct string_t_helper<NLOHMANN_BASIC_JSON_TPL>$/;"	s	class:json_pointer
string_type	extern/nlohmann_json/json.hpp	/^    using string_type = typename std::remove_cv< typename std::remove_reference<decltype( std::d/;"	t	class:detail::iteration_proxy_value
string_view	.vscode/settings.json	/^        "string_view": "cpp",$/;"	s	object:files.associations
strong_equality	extern/parallel_hashmap/btree.h	/^        explicit constexpr strong_equality(compare_internal::eq v) noexcept$/;"	f	class:phmap::strong_equality
strong_equality	extern/parallel_hashmap/btree.h	/^    class strong_equality$/;"	c	namespace:phmap
strong_equality_base	extern/parallel_hashmap/btree.h	/^        struct strong_equality_base {$/;"	s	namespace:phmap::compare_internal
strong_ordering	extern/parallel_hashmap/btree.h	/^        explicit constexpr strong_ordering(compare_internal::eq v) noexcept$/;"	f	class:phmap::strong_ordering
strong_ordering	extern/parallel_hashmap/btree.h	/^        explicit constexpr strong_ordering(compare_internal::ord v) noexcept$/;"	f	class:phmap::strong_ordering
strong_ordering	extern/parallel_hashmap/btree.h	/^    class strong_ordering$/;"	c	namespace:phmap
strong_ordering_base	extern/parallel_hashmap/btree.h	/^        struct strong_ordering_base {$/;"	s	namespace:phmap::compare_internal
strstream	.vscode/settings.json	/^        "strstream": "cpp",$/;"	s	object:files.associations
strtof	extern/nlohmann_json/json.hpp	/^    static void strtof(double& f, const char* str, char** endptr) noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/nlohmann_json/json.hpp	/^    static void strtof(float& f, const char* str, char** endptr) noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/nlohmann_json/json.hpp	/^    static void strtof(long double& f, const char* str, char** endptr) noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
sub	extern/nlohmann_json/json.hpp	/^    static diyfp sub(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
subcnt	extern/parallel_hashmap/phmap.h	/^    static size_t subcnt() {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
subidx	extern/parallel_hashmap/phmap.h	/^    static size_t subidx(size_t hashval) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:size_t
submitReturnValue	include/hicr/L1/instanceManager.hpp	/^  __USED__ inline void submitReturnValue(void *pointer, const size_t size) const$/;"	f	class:HiCR::L1::InstanceManager	typeref:typename:__USED__ void
submitReturnValueImpl	include/backends/mpi/L1/instanceManager.hpp	/^  __USED__ inline void submitReturnValueImpl(const void *pointer, const size_t size) const overr/;"	f	class:HiCR::backend::mpi::L1::InstanceManager	typeref:typename:__USED__ void
submitTopology	include/frontends/machineModel/machineModel.hpp	/^  __USED__ static inline void submitTopology(HiCR::L1::InstanceManager *instanceManager, std::ve/;"	f	class:HiCR::MachineModel	typeref:typename:__USED__ void
subscribe	include/frontends/tasking/worker.hpp	/^  __USED__ inline void subscribe(HiCR::tasking::Dispatcher *dispatcher) { _dispatchers.insert(di/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ void
subspan	extern/parallel_hashmap/phmap_base.h	/^    constexpr Span subspan(size_type pos = 0, size_type len = npos) const {$/;"	f	class:phmap::Span	typeref:typename:Span
subtype	extern/nlohmann_json/json.hpp	/^    constexpr subtype_type subtype() const noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:subtype_type
subtype_type	extern/nlohmann_json/json.hpp	/^    using subtype_type = std::uint64_t;$/;"	t	class:byte_container_with_subtype	typeref:typename:std::uint64_t
successDuration	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^    static successDuration = 980$/;"	M	class:DoxygenAwesomeFragmentCopyButton
successIcon	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^    static successIcon = `<svg xmlns="http:\/\/www.w3.org\/2000\/svg" viewBox="0 0 24 24" width=/;"	M	class:DoxygenAwesomeFragmentCopyButton
super_type	extern/parallel_hashmap/btree.h	/^        using super_type = btree_container<Tree>;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:btree_container<Tree>
super_type	extern/parallel_hashmap/btree.h	/^        using super_type = btree_container<Tree>;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:btree_container<Tree>
super_type	extern/parallel_hashmap/btree.h	/^        using super_type = btree_multiset_container<Tree>;$/;"	t	class:phmap::priv::btree_multimap_container	typeref:typename:btree_multiset_container<Tree>
super_type	extern/parallel_hashmap/btree.h	/^        using super_type = btree_set_container<Tree>;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:btree_set_container<Tree>
super_type	extern/parallel_hashmap/btree.h	/^        using super_type = typename map_params::common_params;$/;"	t	struct:phmap::priv::map_params	typeref:typename:map_params::common_params
suspend	include/frontends/tasking/task.hpp	/^  __USED__ inline void suspend()$/;"	f	class:HiCR::tasking::Task	typeref:typename:__USED__ void
suspend	include/frontends/tasking/worker.hpp	/^  __USED__ inline void suspend()$/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ void
suspend	include/hicr/L0/executionState.hpp	/^  __USED__ inline void suspend()$/;"	f	class:HiCR::L0::ExecutionState	typeref:typename:__USED__ void
suspend	include/hicr/L0/processingUnit.hpp	/^  __USED__ inline void suspend()$/;"	f	class:HiCR::L0::ProcessingUnit	typeref:typename:__USED__ void
suspendImpl	include/backends/ascend/L0/executionState.hpp	/^  __USED__ inline void suspendImpl()$/;"	f	class:HiCR::backend::ascend::L0::ExecutionState	typeref:typename:__USED__ void
suspendImpl	include/backends/ascend/L0/processingUnit.hpp	/^  __USED__ inline void suspendImpl() override$/;"	f	class:HiCR::backend::ascend::L0::ProcessingUnit	typeref:typename:__USED__ void
suspendImpl	include/backends/host/L0/executionState.hpp	/^  __USED__ inline void suspendImpl()$/;"	f	class:HiCR::backend::host::L0::ExecutionState	typeref:typename:__USED__ void
suspendImpl	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ inline void suspendImpl() override$/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ void
suspended	include/frontends/tasking/worker.hpp	/^    suspended,$/;"	e	enum:HiCR::tasking::Worker::state_t
suspended	include/hicr/L0/executionState.hpp	/^    suspended,$/;"	e	enum:HiCR::L0::ExecutionState::state_t
suspended	include/hicr/L0/processingUnit.hpp	/^    suspended,$/;"	e	enum:HiCR::L0::ProcessingUnit::state_t
swap	extern/atomic_queue/atomic_queue.h	/^    friend void swap(AtomicQueueB& a, AtomicQueueB& b) {$/;"	f	namespace:atomic_queue	typeref:typename:void
swap	extern/atomic_queue/atomic_queue.h	/^    friend void swap(AtomicQueueB2& a, AtomicQueueB2& b) noexcept {$/;"	f	namespace:atomic_queue	typeref:typename:void
swap	extern/atomic_queue/atomic_queue.h	/^    void swap(AtomicQueueB& b) noexcept {$/;"	f	class:atomic_queue::AtomicQueueB	typeref:typename:void
swap	extern/atomic_queue/atomic_queue.h	/^    void swap(AtomicQueueB2& b) noexcept {$/;"	f	class:atomic_queue::AtomicQueueB2	typeref:typename:void
swap	extern/atomic_queue/atomic_queue.h	/^    void swap(AtomicQueueCommon& b) noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:void
swap	extern/nlohmann_json/json.hpp	/^    friend void swap(reference left, reference right) noexcept ($/;"	f	typeref:typename:void
swap	extern/nlohmann_json/json.hpp	/^    void swap(array_t& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json	typeref:typename:void
swap	extern/nlohmann_json/json.hpp	/^    void swap(binary_t& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json	typeref:typename:void
swap	extern/nlohmann_json/json.hpp	/^    void swap(object_t& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json	typeref:typename:void
swap	extern/nlohmann_json/json.hpp	/^    void swap(reference other) noexcept ($/;"	f	class:basic_json	typeref:typename:void
swap	extern/nlohmann_json/json.hpp	/^    void swap(string_t& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json	typeref:typename:void
swap	extern/nlohmann_json/json.hpp	/^    void swap(typename binary_t::container_type& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json	typeref:typename:void
swap	extern/nlohmann_json/json.hpp	/^inline void swap(nlohmann::NLOHMANN_BASIC_JSON_TPL& j1, nlohmann::NLOHMANN_BASIC_JSON_TPL& j2) n/;"	f	namespace:std	typeref:typename:NLOHMANN_BASIC_JSON_TPL_DECLARATION void
swap	extern/parallel_hashmap/btree.h	/^        static void swap(Alloc * \/*alloc*\/, slot_type *a, slot_type *b) {$/;"	f	struct:phmap::priv::set_slot_policy	typeref:typename:void
swap	extern/parallel_hashmap/btree.h	/^        static void swap(Alloc *alloc, slot_type *a, slot_type *b) {$/;"	f	struct:phmap::priv::common_params	typeref:typename:void
swap	extern/parallel_hashmap/btree.h	/^        void swap(btree_container &x) { tree_.swap(x.tree_); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:void
swap	extern/parallel_hashmap/btree.h	/^    void btree<P>::swap(btree &x) {$/;"	f	class:phmap::priv::btree	typeref:typename:void
swap	extern/parallel_hashmap/btree.h	/^    void btree_node<P>::swap(btree_node *x, allocator_type *alloc) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
swap	extern/parallel_hashmap/btree.h	/^    void swap(btree_map<K, V, C, A> &x, btree_map<K, V, C, A> &y) {$/;"	f	namespace:phmap	typeref:typename:void
swap	extern/parallel_hashmap/btree.h	/^    void swap(btree_multimap<K, V, C, A> &x, btree_multimap<K, V, C, A> &y) {$/;"	f	namespace:phmap	typeref:typename:void
swap	extern/parallel_hashmap/btree.h	/^    void swap(btree_multiset<K, C, A> &x, btree_multiset<K, C, A> &y) {$/;"	f	namespace:phmap	typeref:typename:void
swap	extern/parallel_hashmap/btree.h	/^    void swap(btree_set<K, C, A> &x, btree_set<K, C, A> &y) {$/;"	f	namespace:phmap	typeref:typename:void
swap	extern/parallel_hashmap/phmap.h	/^    friend inline void swap(HashtablezInfoHandle& ,$/;"	f	namespace:phmap::priv	typeref:typename:void
swap	extern/parallel_hashmap/phmap.h	/^    friend void swap(parallel_hash_set& a,$/;"	f	namespace:phmap::priv	typeref:typename:void
swap	extern/parallel_hashmap/phmap.h	/^    friend void swap(raw_hash_set& a,$/;"	f	namespace:phmap::priv	typeref:typename:void
swap	extern/parallel_hashmap/phmap.h	/^    void swap(parallel_hash_set<N, RefSet, Mtx2_, Policy, Hash, Eq, Alloc>& that)$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
swap	extern/parallel_hashmap/phmap.h	/^    void swap(raw_hash_set& that) noexcept($/;"	f	class:phmap::priv::raw_hash_set	typeref:typename:void
swap	extern/parallel_hashmap/phmap_base.h	/^        void swap(DoNothing &) {}$/;"	f	struct:phmap::LockableBaseImpl::DoNothing	typeref:typename:void
swap	extern/parallel_hashmap/phmap_base.h	/^        void swap(ReadLock &o) noexcept { $/;"	f	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:void
swap	extern/parallel_hashmap/phmap_base.h	/^        void swap(WriteLock &o) noexcept { $/;"	f	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:void
swap	extern/parallel_hashmap/phmap_base.h	/^    static void swap(Allocator* alloc, slot_type* a, slot_type* b) {$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:void
swap	extern/parallel_hashmap/phmap_base.h	/^    void swap(optional& rhs) noexcept($/;"	f	class:phmap::optional	typeref:typename:void
swap	extern/parallel_hashmap/phmap_base.h	/^void swap(optional<T>& a, optional<T>& b) noexcept(noexcept(a.swap(b))) {$/;"	f	namespace:phmap	typeref:typename:void
swap_internal	extern/parallel_hashmap/btree.h	/^    namespace swap_internal {$/;"	n	namespace:phmap
systemPreference	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static get systemPreference() {$/;"	G	class:DoxygenAwesomeDarkModeToggle
system_error	.vscode/settings.json	/^        "system_error": "cpp",$/;"	s	object:files.associations
t	extern/parallel_hashmap/btree.h	/^            T t;$/;"	m	union:phmap::type_traits_internal::SingleMemberUnion	typeref:typename:T
t_ref	extern/nlohmann_json/json.hpp	/^    using t_ref = typename std::add_lvalue_reference<T>::type;$/;"	t	struct:detail::is_range	typeref:typename:std::add_lvalue_reference<T>::type
table	extern/doxygen-awesome-css/doxygen-awesome.css	/^body, table, div, p, dl, #nav-tree .label, .title,$/;"	s
table	extern/doxygen-awesome-css/doxygen-awesome.css	/^p, div, table, dl, p.reference, p.definition {$/;"	s
table.classindex	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.classindex {$/;"	c
table.classindex table div.ah	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.classindex table div.ah {$/;"	c
table.directory	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory {$/;"	c
table.directory td.desc	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory td.desc {$/;"	c
table.directory td.desc	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory td.entry, table.directory td.desc {$/;"	c
table.directory td.entry	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory td.entry, table.directory td.desc {$/;"	c
table.directory tr.even	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory tr.even {$/;"	c
table.directory tr.even td:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory tr.even td:first-child {$/;"	s
table.directory tr.even td:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory tr.even td:last-child {$/;"	s
table.directory tr.even:last-child td:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory tr.even:last-child td:first-child {$/;"	s
table.directory tr.even:last-child td:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory tr.even:last-child td:last-child {$/;"	s
table.directory tr.odd	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.directory tr.odd {$/;"	c
table.doxtable	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable, table.doxtable, table.fieldtable {$/;"	c
table.doxtable caption	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable caption {$/;"	s
table.doxtable tbody	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable tbody {$/;"	s
table.doxtable td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable td,$/;"	s
table.doxtable td:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable td:first-child,$/;"	s
table.doxtable td:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable td:last-child,$/;"	s
table.doxtable th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable th {$/;"	s
table.doxtable th:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable th:first-child {$/;"	s
table.doxtable th:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable th:last-child {$/;"	s
table.doxtable tr	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable tr, table.doxtable tr {$/;"	s
table.doxtable tr th:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable tr th:first-child {$/;"	s
table.doxtable tr th:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable tr th:last-child {$/;"	s
table.doxtable tr:first-child td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable tr:first-child td,$/;"	s
table.doxtable tr:first-child th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable tr:first-child th {$/;"	s
table.doxtable tr:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable tr:last-child, table.doxtable tr:last-child {$/;"	s
table.doxtable tr:last-child td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable tr:last-child td,$/;"	s
table.doxtable tr:last-child th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.doxtable tr:last-child th {$/;"	s
table.fieldtable	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable {$/;"	c
table.fieldtable	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable,$/;"	c
table.fieldtable	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable, table.doxtable, table.fieldtable {$/;"	c
table.fieldtable td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable td,$/;"	s
table.fieldtable td.fieldtype	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable td.fieldtype, .fieldtable td.fieldname, .fieldtable td.fielddoc, .fieldtable th/;"	c
table.fieldtable td:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable td:first-child,$/;"	s
table.fieldtable td:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable td:last-child,$/;"	s
table.fieldtable th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable th {$/;"	s
table.fieldtable th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable th,$/;"	s
table.fieldtable th:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable th:first-child,$/;"	s
table.fieldtable th:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable th:last-child,$/;"	s
table.fieldtable tr:first-child td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable tr:first-child td,$/;"	s
table.fieldtable tr:first-child th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable tr:first-child th,$/;"	s
table.fieldtable tr:last-child td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable tr:last-child td,$/;"	s
table.fieldtable tr:last-child td:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable tr:last-child td:first-child {$/;"	s
table.fieldtable tr:last-child td:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable tr:last-child td:last-child {$/;"	s
table.fieldtable tr:last-child th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.fieldtable tr:last-child th,$/;"	s
table.markdownTable	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable, table.doxtable, table.fieldtable {$/;"	c
table.markdownTable tbody	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable tbody,$/;"	s
table.markdownTable td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable td,$/;"	s
table.markdownTable td:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable td:first-child,$/;"	s
table.markdownTable td:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable td:last-child,$/;"	s
table.markdownTable th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable th,$/;"	s
table.markdownTable th:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable th:first-child,$/;"	s
table.markdownTable th:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable th:last-child,$/;"	s
table.markdownTable tr	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable tr, table.doxtable tr {$/;"	s
table.markdownTable tr:first-child td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable tr:first-child td,$/;"	s
table.markdownTable tr:first-child th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable tr:first-child th,$/;"	s
table.markdownTable tr:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable tr:last-child, table.doxtable tr:last-child {$/;"	s
table.markdownTable tr:last-child td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable tr:last-child td,$/;"	s
table.markdownTable tr:last-child th	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.markdownTable tr:last-child th,$/;"	s
table.memberdecls	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls {$/;"	c
table.memberdecls .groupheader	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .groupheader {$/;"	c
table.memberdecls .inherit_header td	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .inherit_header td {$/;"	s
table.memberdecls .mdescLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .mdescLeft {$/;"	c
table.memberdecls .mdescLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .mdescLeft,$/;"	c
table.memberdecls .mdescLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .mdescLeft, table.memberdecls .mdescRight {$/;"	c
table.memberdecls .mdescRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .mdescRight {$/;"	c
table.memberdecls .mdescRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .mdescRight,$/;"	c
table.memberdecls .mdescRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .mdescLeft, table.memberdecls .mdescRight {$/;"	c
table.memberdecls .memItemLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .memItemLeft,$/;"	c
table.memberdecls .memItemLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memItemLeft {$/;"	c
table.memberdecls .memItemLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memItemLeft,$/;"	c
table.memberdecls .memItemRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .memItemRight, $/;"	c
table.memberdecls .memItemRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .memItemRight,$/;"	c
table.memberdecls .memItemRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memItemRight  {$/;"	c
table.memberdecls .memItemRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memItemRight,$/;"	c
table.memberdecls .memSeparator	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memSeparator {$/;"	c
table.memberdecls .memTemplItemLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .memTemplItemLeft {$/;"	c
table.memberdecls .memTemplItemLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .memTemplItemLeft,$/;"	c
table.memberdecls .memTemplItemLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memTemplItemLeft {$/;"	c
table.memberdecls .memTemplItemLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memTemplItemLeft,$/;"	c
table.memberdecls .memTemplItemRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .memTemplItemRight {$/;"	c
table.memberdecls .memTemplItemRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .memTemplItemRight,$/;"	c
table.memberdecls .memTemplItemRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memTemplItemRight {$/;"	c
table.memberdecls .memTemplItemRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memTemplItemRight,$/;"	c
table.memberdecls .memTemplParams	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls .memTemplParams {$/;"	c
table.memberdecls .memTemplParams	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls .memTemplParams {$/;"	c
table.memberdecls img	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls img {$/;"	s
table.memberdecls img[src="closed.png"]	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls img[src="closed.png"],$/;"	s
table.memberdecls img[src="open.png"]	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls img[src="open.png"],$/;"	s
table.memberdecls tr.inherit	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls tr.inherit {$/;"	c
table.memberdecls tr[class^='memitem']	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls tr[class^='memitem'] {$/;"	s
table.memberdecls tr[class^='memitem'] .memTemplParams	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.memberdecls tr[class^='memitem'] .memTemplParams {$/;"	c
table.memberdecls tr[class^='memitem'] :not(.inherit)	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls tr[class^='memitem']:not(.inherit) {$/;"	c
table.memberdecls tr[style="display: table-row;"]	extern/doxygen-awesome-css/doxygen-awesome.css	/^    table.memberdecls tr[style="display: table-row;"] {$/;"	s
table.mlabels	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.mlabels, table.mlabels > tbody {$/;"	c
table.mlabels > tbody	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.mlabels, table.mlabels > tbody {$/;"	s
table.mlabels > tbody > tr:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.mlabels > tbody > tr:first-child {$/;"	s
table.params .paramname	extern/doxygen-awesome-css/doxygen-awesome.css	/^table.params .paramname {$/;"	c
tag_t	include/hicr/L0/globalMemorySlot.hpp	/^  typedef uint64_t tag_t;$/;"	t	class:HiCR::L0::GlobalMemorySlot	typeref:typename:uint64_t
task	tests/frontends/tasking/meson.build	/^    test('task',       executable('task',       'task.cpp',       dependencies: HiCRTestBuildDep/;"	B
task	tests/frontends/tasking/meson.build	/^    test('task',       executable('task',       'task.cpp',       dependencies: HiCRTestBuildDep/;"	t
taskEventMap_t	include/frontends/tasking/task.hpp	/^  typedef HiCR::tasking::EventMap<Task, event_t> taskEventMap_t;$/;"	t	class:HiCR::tasking::Task	typeref:typename:HiCR::tasking::EventMap<Task,event_t>
taskFc	examples/machineModel/source/include/worker.hpp	/^void taskFc(const std::string &taskName, HiCR::L1::InstanceManager &instanceManager)$/;"	f	typeref:typename:void
tasking	examples/meson.build	/^subdir('tasking')$/;"	S
tasking	include/frontends/tasking/common.hpp	/^namespace tasking$/;"	n	namespace:HiCR
tasking	include/frontends/tasking/dispatcher.hpp	/^namespace tasking$/;"	n	namespace:HiCR
tasking	include/frontends/tasking/eventMap.hpp	/^namespace tasking$/;"	n	namespace:HiCR
tasking	include/frontends/tasking/task.hpp	/^namespace tasking$/;"	n	namespace:HiCR
tasking	include/frontends/tasking/tasking.hpp	/^namespace tasking$/;"	n	namespace:HiCR
tasking	include/frontends/tasking/worker.hpp	/^namespace tasking$/;"	n	namespace:HiCR
tasking	tests/frontends/meson.build	/^subdir('tasking')$/;"	S
taskr	examples/tasking/runtime.hpp	/^namespace taskr$/;"	n
td.memSeparator	extern/doxygen-awesome-css/doxygen-awesome.css	/^td.memSeparator {$/;"	c
td.mlabels-left	extern/doxygen-awesome-css/doxygen-awesome.css	/^td.mlabels-left {$/;"	c
td.mlabels-right	extern/doxygen-awesome-css/doxygen-awesome.css	/^td.mlabels-right {$/;"	c
telephoneGame	examples/hicr/memcpy/source/include/telephoneGame.hpp	/^void telephoneGame(HiCR::L1::MemoryManager &m, HiCR::L1::CommunicationManager &c, std::shared_pt/;"	f	typeref:typename:void
tensorData_t	include/backends/ascend/computationKernel.hpp	/^  struct tensorData_t$/;"	s	class:HiCR::backend::ascend::ComputationKernel
tensorDescriptor	include/backends/ascend/computationKernel.hpp	/^    const aclTensorDesc *tensorDescriptor;$/;"	m	struct:HiCR::backend::ascend::ComputationKernel::tensorData_t	typeref:typename:const aclTensorDesc *
terminate	include/frontends/tasking/worker.hpp	/^  __USED__ inline void terminate()$/;"	f	class:HiCR::tasking::Worker	typeref:typename:__USED__ void
terminate	include/hicr/L0/processingUnit.hpp	/^  __USED__ inline void terminate()$/;"	f	class:HiCR::L0::ProcessingUnit	typeref:typename:__USED__ void
terminateImpl	include/backends/ascend/L0/processingUnit.hpp	/^  __USED__ inline void terminateImpl() override$/;"	f	class:HiCR::backend::ascend::L0::ProcessingUnit	typeref:typename:__USED__ void
terminateImpl	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ inline void terminateImpl() override$/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ void
terminated	include/frontends/tasking/worker.hpp	/^    terminated$/;"	e	enum:HiCR::tasking::Worker::state_t
terminated	include/hicr/L0/processingUnit.hpp	/^    terminated$/;"	e	enum:HiCR::L0::ProcessingUnit::state_t
terminating	include/frontends/tasking/worker.hpp	/^    terminating,$/;"	e	enum:HiCR::tasking::Worker::state_t
terminating	include/hicr/L0/processingUnit.hpp	/^    terminating,$/;"	e	enum:HiCR::L0::ProcessingUnit::state_t
test	extern/doxygen-awesome-css/package.json	/^    "test": "echo \\"Error: no test specified\\" && exit 1"$/;"	s	object:scripts
test	extern/nlohmann_json/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
test	extern/nlohmann_json/json.hpp	/^    static constexpr bool test(T \/*val*\/)$/;"	f	struct:detail::value_in_range_of_impl1	typeref:typename:bool
test	extern/nlohmann_json/json.hpp	/^    static constexpr bool test(T val)$/;"	f	struct:detail::value_in_range_of_impl1	typeref:typename:bool
test	extern/nlohmann_json/json.hpp	/^    static constexpr bool test(T val)$/;"	f	struct:detail::value_in_range_of_impl2	typeref:typename:bool
testSuite	examples/channels/fixedSize/mpsc/meson.build	/^testSuite = [ 'examples', 'channels', 'mpsc']$/;"	V
testSuite	examples/channels/fixedSize/spsc/meson.build	/^testSuite = [ 'examples', 'channels', 'fixedSize', 'spsc']$/;"	V
testSuite	examples/channels/variableSize/spsc/meson.build	/^testSuite = [ 'examples', 'channels', 'variableSize', 'spsc']$/;"	V
testSuite	examples/hicr/kernel/meson.build	/^testSuite = [ 'examples', 'hicr', 'kernel' ]$/;"	V
testSuite	examples/hicr/memcpy/meson.build	/^testSuite = [ 'examples', 'hicr', 'memcpy' ]$/;"	V
testSuite	examples/hicr/topology/meson.build	/^testSuite = [ 'examples', 'hicr', 'toplogy' ]$/;"	V
testSuite	examples/hicr/topologyRPC/meson.build	/^testSuite = [ 'examples', 'hicr', 'toplogyRPC' ]$/;"	V
testSuite	examples/machineModel/meson.build	/^testSuite = [ 'examples', 'machineModel' ]$/;"	V
testSuite	examples/runtime/meson.build	/^testSuite = [ 'examples', 'runtime' ]$/;"	V
testSuite	examples/tasking/abcTasks/meson.build	/^testSuite = [ 'examples', 'tasking' ]$/;"	V
testSuite	examples/tasking/energySaver/meson.build	/^testSuite = [ 'examples', 'tasking' ]$/;"	V
testSuite	examples/tasking/getCurrentTask/meson.build	/^testSuite = [ 'examples', 'tasking' ]$/;"	V
testSuite	examples/tasking/resourceList/meson.build	/^testSuite = [ 'examples', 'tasking' ]$/;"	V
testSuite	tests/frontends/tasking/meson.build	/^testSuite = [ 'tests', 'frontends', 'tasking' ]$/;"	V
test_timeout	examples/channels/fixedSize/mpsc/meson.build	/^test_timeout = 60$/;"	V
test_timeout	examples/channels/fixedSize/spsc/meson.build	/^test_timeout = 60$/;"	V
test_timeout	examples/channels/variableSize/spsc/meson.build	/^test_timeout = 60$/;"	V
test_timeout	examples/hicr/memcpy/meson.build	/^test_timeout = 60$/;"	V
test_timeout	examples/hicr/topology/meson.build	/^test_timeout = 60$/;"	V
test_timeout	examples/hicr/topologyRPC/meson.build	/^test_timeout = 60$/;"	V
test_timeout	examples/machineModel/meson.build	/^test_timeout = 60$/;"	V
test_timeout	examples/runtime/meson.build	/^test_timeout = 60$/;"	V
testonly_uses_linear_node_search	extern/parallel_hashmap/btree.h	/^        static bool testonly_uses_linear_node_search() {$/;"	f	class:phmap::priv::btree	typeref:typename:bool
testonly_uses_linear_node_search	extern/parallel_hashmap/btree.h	/^        static bool testonly_uses_linear_node_search() {$/;"	f	class:phmap::priv::btree_node	typeref:typename:bool
tests	meson.build	/^  subdir('tests')$/;"	S
th.markdownTableHeadCenter	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadCenter,$/;"	c
th.markdownTableHeadCenter:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadCenter:first-child,$/;"	c
th.markdownTableHeadCenter:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadCenter:last-child,$/;"	c
th.markdownTableHeadLeft	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadLeft,$/;"	c
th.markdownTableHeadLeft:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadLeft:first-child,$/;"	c
th.markdownTableHeadLeft:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadLeft:last-child,$/;"	c
th.markdownTableHeadNone	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadNone,$/;"	c
th.markdownTableHeadNone:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadNone:first-child,$/;"	c
th.markdownTableHeadNone:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadNone:last-child,$/;"	c
th.markdownTableHeadRight	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadRight,$/;"	c
th.markdownTableHeadRight:first-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadRight:first-child,$/;"	c
th.markdownTableHeadRight:last-child	extern/doxygen-awesome-css/doxygen-awesome.css	/^th.markdownTableHeadRight:last-child,$/;"	c
thousands_sep	extern/nlohmann_json/json.hpp	/^    const char thousands_sep = '\\0';$/;"	m	class:detail::serializer	typeref:typename:const char
thread	.vscode/settings.json	/^        "thread": "cpp",$/;"	s	object:files.associations
threadFc	tests/backends/host/coroutine.cpp	/^void *threadFc(void *arg)$/;"	f	typeref:typename:void *
thread_safety_analysis	extern/parallel_hashmap/phmap_base.h	/^namespace thread_safety_analysis {$/;"	n	namespace:phmap
throwException	include/hicr/exceptions.hpp	/^__USED__ inline void throwException [[noreturn]] (const exceptions::exception_t type, const char/;"	f	namespace:HiCR	typeref:typename:__USED__ void
title	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static title = "Toggle Light\/Dark Mode"$/;"	M	class:DoxygenAwesomeDarkModeToggle
title	extern/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js	/^    static title = "Copy to clipboard"$/;"	M	class:DoxygenAwesomeFragmentCopyButton
title	extern/doxygen-awesome-css/doxygen-awesome-paragraph-link.js	/^    static title = "Permanent Link"$/;"	M	class:DoxygenAwesomeParagraphLink
titlearea	extern/doxygen-awesome-css/doxygen-custom/header.html	/^<div id="titlearea">$/;"	I
to_bjdata	extern/nlohmann_json/json.hpp	/^    static std::vector<std::uint8_t> to_bjdata(const basic_json& j,$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_bjdata	extern/nlohmann_json/json.hpp	/^    static void to_bjdata(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:basic_json	typeref:typename:void
to_bjdata	extern/nlohmann_json/json.hpp	/^    static void to_bjdata(const basic_json& j, detail::output_adapter<std::uint8_t> o,$/;"	f	class:basic_json	typeref:typename:void
to_bson	extern/nlohmann_json/json.hpp	/^    static std::vector<std::uint8_t> to_bson(const basic_json& j)$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_bson	extern/nlohmann_json/json.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:basic_json	typeref:typename:void
to_bson	extern/nlohmann_json/json.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:basic_json	typeref:typename:void
to_cbor	extern/nlohmann_json/json.hpp	/^    static std::vector<std::uint8_t> to_cbor(const basic_json& j)$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_cbor	extern/nlohmann_json/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:basic_json	typeref:typename:void
to_cbor	extern/nlohmann_json/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:basic_json	typeref:typename:void
to_char_type	extern/nlohmann_json/json.hpp	/^    static CharType to_char_type(std::uint8_t x) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
to_char_type	extern/nlohmann_json/json.hpp	/^    static constexpr CharType to_char_type(InputCharType x) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
to_char_type	extern/nlohmann_json/json.hpp	/^    static constexpr CharType to_char_type(std::uint8_t x) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
to_chars	extern/nlohmann_json/json.hpp	/^char* to_chars(char* first, const char* last, FloatType value)$/;"	f	namespace:detail
to_json	extern/nlohmann_json/json.hpp	/^    static auto to_json(BasicJsonType& j, TargetType && val) noexcept($/;"	f	struct:adl_serializer	typeref:typename:auto
to_json	extern/nlohmann_json/json.hpp	/^JSON_INLINE_VARIABLE constexpr const auto& to_json = \/\/ NOLINT(misc-definitions-in-headers)$/;"	v	namespace:__anon7c8093bd0911	typeref:typename:JSON_INLINE_VARIABLE const auto &
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, CompatibleNumberIntegerType val) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, CompatibleNumberUnsignedType val) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, EnumType e) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, FloatType val) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, T b) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const BoolRef& b) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const CompatibleString& s)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const T& b)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const T& t)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const T(&arr)[N]) \/\/ NOLINT(cppcoreguidelines-avoid-c-ar/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const std::pair<T1, T2>& p)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const std::vector<bool>& e)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const std_fs::path& p)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, const typename BasicJsonType::binary_t& bin)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/nlohmann_json/json.hpp	/^inline void to_json(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	namespace:detail	typeref:typename:void
to_json_fn	extern/nlohmann_json/json.hpp	/^struct to_json_fn$/;"	s	namespace:detail
to_json_function	extern/nlohmann_json/json.hpp	/^using to_json_function = decltype(T::to_json(std::declval<Args>()...));$/;"	t	namespace:detail
to_json_tuple_impl	extern/nlohmann_json/json.hpp	/^inline void to_json_tuple_impl(BasicJsonType& j, const Tuple& t, index_sequence<Idx...> \/*unuse/;"	f	namespace:detail	typeref:typename:void
to_msgpack	extern/nlohmann_json/json.hpp	/^    static std::vector<std::uint8_t> to_msgpack(const basic_json& j)$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_msgpack	extern/nlohmann_json/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:basic_json	typeref:typename:void
to_msgpack	extern/nlohmann_json/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:basic_json	typeref:typename:void
to_string	extern/nlohmann_json/json.hpp	/^    JSON_HEDLEY_DEPRECATED_FOR(3.11.0, to_string())$/;"	f	class:json_pointer	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,)operator string_t ()const
to_string	extern/nlohmann_json/json.hpp	/^    string_t to_string() const$/;"	f	class:json_pointer	typeref:typename:string_t
to_string	extern/nlohmann_json/json.hpp	/^std::string to_string(const NLOHMANN_BASIC_JSON_TPL& j)$/;"	f	typeref:typename:NLOHMANN_BASIC_JSON_TPL_DECLARATION std::string
to_ubjson	extern/nlohmann_json/json.hpp	/^    static std::vector<std::uint8_t> to_ubjson(const basic_json& j,$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_ubjson	extern/nlohmann_json/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:basic_json	typeref:typename:void
to_ubjson	extern/nlohmann_json/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<std::uint8_t> o,$/;"	f	class:basic_json	typeref:typename:void
toggleDarkMode	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    toggleDarkMode() {$/;"	m	class:DoxygenAwesomeDarkModeToggle
toggle_alternative_theme	extern/doxygen-awesome-css/doxygen-custom/toggle-alternative-theme.js	/^function toggle_alternative_theme() {$/;"	f
token_buffer	extern/nlohmann_json/json.hpp	/^    string_t token_buffer {};$/;"	m	class:detail::lexer	typeref:typename:string_t
token_string	extern/nlohmann_json/json.hpp	/^    std::vector<char_type> token_string {};$/;"	m	class:detail::lexer	typeref:typename:std::vector<char_type>
token_type	extern/nlohmann_json/json.hpp	/^        using token_type = typename detail::lexer_base<BasicJsonType>::token_type;$/;"	t	function:detail::binary_reader::get_ubjson_high_precision_number	typeref:typename:detail::lexer_base<BasicJsonType>::token_type
token_type	extern/nlohmann_json/json.hpp	/^    enum class token_type$/;"	g	class:detail::lexer_base
token_type	extern/nlohmann_json/json.hpp	/^    using token_type = typename lexer_base<BasicJsonType>::token_type;$/;"	t	class:detail::lexer	typeref:typename:lexer_base<BasicJsonType>::token_type
token_type	extern/nlohmann_json/json.hpp	/^    using token_type = typename lexer_t::token_type;$/;"	t	class:detail::parser	typeref:typename:lexer_t::token_type
token_type_name	extern/nlohmann_json/json.hpp	/^    static const char* token_type_name(const token_type t) noexcept$/;"	f	class:detail::lexer_base	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL JSON_HEDLEY_CONST const char *
top	extern/doxygen-awesome-css/doxygen-custom/header.html	/^<div id="top"><!-- do not remove this div, it is closed by doxygen! -->$/;"	I
topOffset	extern/doxygen-awesome-css/doxygen-awesome-interactive-toc.js	/^    static topOffset = 38$/;"	M	class:DoxygenAwesomeInteractiveToc
topology	examples/hicr/meson.build	/^subdir('topology')$/;"	S
topology	include/frontends/machineModel/machineModel.hpp	/^    HiCR::L0::Topology topology;$/;"	m	struct:HiCR::MachineModel::detectedInstance_t	typeref:typename:HiCR::L0::Topology
topology	include/frontends/machineModel/machineModel.hpp	/^    HiCR::L0::Topology topology;$/;"	m	struct:HiCR::MachineModel::request_t	typeref:typename:HiCR::L0::Topology
topologyAcceptanceCriteriaFc_t	include/frontends/machineModel/machineModel.hpp	/^  typedef std::function<bool(const HiCR::L0::Topology &, const HiCR::L0::Topology &)> topologyAc/;"	t	class:HiCR::MachineModel
topologyFc	examples/hicr/topology/source/include/topology.hpp	/^void topologyFc(HiCR::L1::TopologyManager &topologyManager)$/;"	f	typeref:typename:void
topologyRPC	examples/hicr/meson.build	/^subdir('topologyRPC')$/;"	S
total_order_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool total_order_ = TOTAL_ORDER;$/;"	m	class:atomic_queue::AtomicQueue	typeref:typename:bool
total_order_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool total_order_ = TOTAL_ORDER;$/;"	m	class:atomic_queue::AtomicQueue2	typeref:typename:bool
total_order_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool total_order_ = TOTAL_ORDER;$/;"	m	class:atomic_queue::AtomicQueueB	typeref:typename:bool
total_order_	extern/atomic_queue/atomic_queue.h	/^    static constexpr bool total_order_ = TOTAL_ORDER;$/;"	m	class:atomic_queue::AtomicQueueB2	typeref:typename:bool
traits	extern/nlohmann_json/json.hpp	/^    using traits = iterator_traits<T>;$/;"	t	struct:detail::is_iterator_traits	typeref:typename:iterator_traits<T>
transfer	extern/parallel_hashmap/btree.h	/^        static void transfer(Alloc *alloc, slot_type *new_slot, slot_type *old_slot) {$/;"	f	struct:phmap::priv::common_params	typeref:typename:void
transfer	extern/parallel_hashmap/phmap.h	/^    static void transfer(Alloc*, slot_type* new_slot, slot_type* old_slot) {$/;"	f	struct:phmap::priv::node_hash_policy	typeref:typename:void
transfer	extern/parallel_hashmap/phmap.h	/^    static void transfer(Allocator* alloc, slot_type* new_slot,$/;"	f	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:void
transfer	extern/parallel_hashmap/phmap.h	/^    static void transfer(Allocator* alloc, slot_type* new_slot,$/;"	f	struct:phmap::priv::FlatHashSetPolicy	typeref:typename:void
transfer	extern/parallel_hashmap/phmap_base.h	/^    static void transfer(Alloc* alloc, slot_type* new_slot, slot_type* old_slot) {$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:void
transfer	extern/parallel_hashmap/phmap_base.h	/^    static void transfer(Allocator* alloc, slot_type* new_slot,$/;"	f	struct:phmap::priv::map_slot_policy	typeref:typename:void
transfer_impl	extern/parallel_hashmap/phmap_base.h	/^    static auto transfer_impl(Alloc* alloc, slot_type* new_slot,$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:decltype((void)P::transfer (alloc,new_slot,old_slot))
transfer_impl	extern/parallel_hashmap/phmap_base.h	/^    static void transfer_impl(Alloc* alloc, slot_type* new_slot,$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:void
transfer_tag_t	extern/parallel_hashmap/phmap_base.h	/^    struct transfer_tag_t {};$/;"	s	class:phmap::priv::node_handle_base
tree_	extern/parallel_hashmap/btree.h	/^        Tree tree_;$/;"	m	class:phmap::priv::btree_container	typeref:typename:Tree
trigger	include/frontends/tasking/eventMap.hpp	/^  __USED__ inline void trigger(T *arg, const E event) const$/;"	f	class:HiCR::tasking::EventMap	typeref:typename:__USED__ void
try_emplace	extern/parallel_hashmap/btree.h	/^        iterator try_emplace(const_iterator hint, const key_type &k,$/;"	f	class:phmap::priv::btree_map_container	typeref:typename:iterator
try_emplace	extern/parallel_hashmap/btree.h	/^        iterator try_emplace(const_iterator hint, key_type &&k, Args &&... args) {$/;"	f	class:phmap::priv::btree_map_container	typeref:typename:iterator
try_emplace	extern/parallel_hashmap/btree.h	/^        std::pair<iterator, bool> try_emplace(const key_type &k, Args &&... args) {$/;"	f	class:phmap::priv::btree_map_container	typeref:typename:std::pair<iterator,bool>
try_emplace	extern/parallel_hashmap/btree.h	/^        std::pair<iterator, bool> try_emplace(key_type &&k, Args &&... args) {$/;"	f	class:phmap::priv::btree_map_container	typeref:typename:std::pair<iterator,bool>
try_emplace	extern/parallel_hashmap/phmap.h	/^    iterator try_emplace(const_iterator, const key_arg<K>& k, Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:iterator
try_emplace	extern/parallel_hashmap/phmap.h	/^    iterator try_emplace(const_iterator, const key_arg<K>& k, Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:iterator
try_emplace	extern/parallel_hashmap/phmap.h	/^    iterator try_emplace(const_iterator, key_arg<K>&& k, Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:iterator
try_emplace	extern/parallel_hashmap/phmap.h	/^    iterator try_emplace(const_iterator, key_arg<K>&& k, Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:iterator
try_emplace	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> try_emplace(const key_arg<K>& k, Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
try_emplace	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> try_emplace(const key_arg<K>& k, Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:std::pair<iterator,bool>
try_emplace	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> try_emplace(key_arg<K>&& k, Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
try_emplace	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> try_emplace(key_arg<K>&& k, Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:std::pair<iterator,bool>
try_emplace_impl	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> try_emplace_impl(K&& k, Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
try_emplace_impl	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> try_emplace_impl(K&& k, Args&&... args) {$/;"	f	class:phmap::priv::raw_hash_map	typeref:typename:std::pair<iterator,bool>
try_emplace_impl_with_hash	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> try_emplace_impl_with_hash(size_t hashval, K&& k, Args&&... args) /;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
try_emplace_l	extern/parallel_hashmap/phmap.h	/^    bool try_emplace_l(K&& k, F&& f, Args&&... args) {$/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:bool
try_emplace_with_hash	extern/parallel_hashmap/phmap.h	/^    iterator try_emplace_with_hash(size_t hashval, const_iterator, const key_arg<K>& k, Args&&../;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:iterator
try_emplace_with_hash	extern/parallel_hashmap/phmap.h	/^    iterator try_emplace_with_hash(size_t hashval, const_iterator, key_arg<K>&& k, Args&&... arg/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:iterator
try_emplace_with_hash	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> try_emplace_with_hash(size_t hashval, const key_arg<K>& k, Args&&./;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
try_emplace_with_hash	extern/parallel_hashmap/phmap.h	/^    std::pair<iterator, bool> try_emplace_with_hash(size_t hashval, key_arg<K>&& k, Args&&... ar/;"	f	class:phmap::priv::parallel_hash_map	typeref:typename:std::pair<iterator,bool>
try_lock	extern/parallel_hashmap/phmap_base.h	/^        bool try_lock() { $/;"	f	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:bool
try_lock	extern/parallel_hashmap/phmap_base.h	/^        bool try_lock() { $/;"	f	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:bool
try_lock	extern/parallel_hashmap/phmap_base.h	/^        void try_lock()        { this->TryLock(); }$/;"	f	struct:phmap::AbslMutex	typeref:typename:void
try_lock	extern/parallel_hashmap/phmap_base.h	/^    bool try_lock() { return true; }$/;"	f	class:phmap::NullMutex	typeref:typename:bool
try_lock_shared	extern/parallel_hashmap/phmap_base.h	/^        void try_lock_shared() { this->ReaderTryLock(); }$/;"	f	struct:phmap::AbslMutex	typeref:typename:void
try_lock_shared	extern/parallel_hashmap/phmap_base.h	/^    bool try_lock_shared() { return true; }$/;"	f	class:phmap::NullMutex	typeref:typename:bool
try_merge_or_rebalance	extern/parallel_hashmap/btree.h	/^    bool btree<P>::try_merge_or_rebalance(iterator *iter) {$/;"	f	class:phmap::priv::btree	typeref:typename:bool
try_pop	extern/atomic_queue/atomic_queue.h	/^    bool try_pop(T& element) noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:bool
try_push	extern/atomic_queue/atomic_queue.h	/^    bool try_push(T&& element) noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:bool
try_shrink	extern/parallel_hashmap/btree.h	/^    void btree<P>::try_shrink() {$/;"	f	class:phmap::priv::btree	typeref:typename:void
try_to_lock_t	extern/parallel_hashmap/phmap_base.h	/^    using try_to_lock_t = boost::try_to_lock_t;$/;"	t	namespace:phmap	typeref:typename:boost::try_to_lock_t
trylock	include/backends/host/L0/globalMemorySlot.hpp	/^  __USED__ inline bool trylock() { return _mutex.try_lock(); }$/;"	f	class:HiCR::backend::host::L0::GlobalMemorySlot	typeref:typename:__USED__ bool
ts_unchecked_read	extern/parallel_hashmap/phmap_base.h	/^inline T& ts_unchecked_read(T& v) PHMAP_NO_THREAD_SAFETY_ANALYSIS {$/;"	f	namespace:phmap::thread_safety_analysis	typeref:typename:T &
ts_unchecked_read	extern/parallel_hashmap/phmap_base.h	/^inline const T& ts_unchecked_read(const T& v) PHMAP_NO_THREAD_SAFETY_ANALYSIS {$/;"	f	namespace:phmap::thread_safety_analysis	typeref:typename:const T &
tuple	.vscode/settings.json	/^        "tuple": "cpp",$/;"	s	object:files.associations
tuple_element	extern/nlohmann_json/json.hpp	/^class tuple_element<N, ::nlohmann::detail::iteration_proxy_value<IteratorType >>$/;"	c	namespace:std
tuple_size	extern/nlohmann_json/json.hpp	/^class tuple_size<::nlohmann::detail::iteration_proxy_value<IteratorType>>$/;"	c	namespace:std
two	extern/nlohmann_json/json.hpp	/^    struct two$/;"	s	struct:detail::is_ordered_map
type	extern/doxygen-awesome-css/package.json	/^    "type": "git",$/;"	s	object:repository
type	extern/nlohmann_json/json.hpp	/^        using type = StringType;$/;"	t	struct:json_pointer::string_t_helper	typeref:typename:StringType
type	extern/nlohmann_json/json.hpp	/^        using type = T;$/;"	t	struct:json_pointer::string_t_helper	typeref:typename:T
type	extern/nlohmann_json/json.hpp	/^    constexpr value_t type() const noexcept$/;"	f	class:basic_json	typeref:typename:value_t
type	extern/nlohmann_json/json.hpp	/^    using type = Default;$/;"	t	struct:detail::detector	typeref:typename:Default
type	extern/nlohmann_json/json.hpp	/^    using type = Op<Args...>;$/;"	t	struct:detail::detector	typeref:typename:Op<Args...>
type	extern/nlohmann_json/json.hpp	/^    using type = decltype($/;"	t	class:std::tuple_element
type	extern/nlohmann_json/json.hpp	/^    using type = integer_sequence < T, Ints..., (Ints + SeqSize)... >;$/;"	t	struct:detail::utility_internal::Extend
type	extern/nlohmann_json/json.hpp	/^    using type = integer_sequence < T, Ints..., (Ints + SeqSize)..., 2 * SeqSize >;$/;"	t	struct:detail::utility_internal::Extend
type	extern/nlohmann_json/json.hpp	/^    using type = integer_sequence<T>;$/;"	t	struct:detail::utility_internal::Gen	typeref:typename:integer_sequence<T>
type	extern/nlohmann_json/json.hpp	/^    using type = typename std::conditional < has_key_compare<object_t>::value,$/;"	t	struct:detail::actual_object_comparator	typeref:typename:std::conditional<has_key_compare<object_t>::value,typename object_t::key_compare,object_comparator_t>::type
type	extern/nlohmann_json/json.hpp	/^    using type = void;$/;"	t	struct:detail::make_void	typeref:typename:void
type	extern/nlohmann_json/json.hpp	/^    using type =$/;"	t	struct:detail::utility_internal::Gen	typeref:typename:Extend<typename Gen<T,N/2>::type,N/2,N%2>::type
type	extern/parallel_hashmap/btree.h	/^        using type = Compare;$/;"	t	struct:phmap::priv::key_compare_to_adapter	typeref:typename:Compare
type	extern/parallel_hashmap/btree.h	/^        using type = StringBtreeDefaultGreater;$/;"	t	struct:phmap::priv::key_compare_to_adapter	typeref:typename:StringBtreeDefaultGreater
type	extern/parallel_hashmap/btree.h	/^        using type = StringBtreeDefaultLess;$/;"	t	struct:phmap::priv::key_compare_to_adapter	typeref:typename:StringBtreeDefaultLess
type	extern/parallel_hashmap/phmap_base.h	/^        type>::type type;$/;"	t	struct:phmap::base_internal::Invoker
type	extern/parallel_hashmap/phmap_base.h	/^    struct type {$/;"	s	struct:phmap::aligned_storage
type	extern/parallel_hashmap/phmap_base.h	/^    typedef T type;$/;"	t	struct:phmap::internal::identity	typeref:typename:T
type	extern/parallel_hashmap/phmap_base.h	/^    using type = Default;$/;"	t	struct:phmap::memory_internal::ExtractOr	typeref:typename:Default
type	extern/parallel_hashmap/phmap_base.h	/^    using type = Extract<Obj>;$/;"	t	struct:phmap::memory_internal::ExtractOr	typeref:typename:Extract<Obj>
type	extern/parallel_hashmap/phmap_base.h	/^    using type = K;$/;"	t	struct:phmap::priv::KeyArg	typeref:typename:K
type	extern/parallel_hashmap/phmap_base.h	/^    using type = T;$/;"	t	struct:phmap::priv::internal_layout::Type	typeref:typename:T
type	extern/parallel_hashmap/phmap_base.h	/^    using type = key_type;$/;"	t	struct:phmap::priv::KeyArg	typeref:typename:key_type
type	extern/parallel_hashmap/phmap_base.h	/^    using type = typename std::allocator_traits<A>::template rebind_alloc<U>;$/;"	t	struct:phmap::memory_internal::RebindAlloc	typeref:typename:std::allocator_traits<A>::template rebind_alloc<U>
type	extern/parallel_hashmap/phmap_base.h	/^  using type = Class<U, Args...>;$/;"	t	struct:phmap::memory_internal::RebindFirstArg	typeref:typename:Class<U,Args...>
type	extern/parallel_hashmap/phmap_base.h	/^  using type = T;$/;"	t	struct:phmap::memory_internal::GetFirstArg	typeref:typename:T
type	extern/parallel_hashmap/phmap_base.h	/^  using type = T;$/;"	t	struct:phmap::span_internal::ElementType	typeref:typename:T
type	extern/parallel_hashmap/phmap_base.h	/^  using type = decltype(testval(std::declval<From>()));$/;"	t	struct:phmap::span_internal::IsConvertibleHelper
type	extern/parallel_hashmap/phmap_base.h	/^  using type = integer_sequence<T, Ints..., (Ints + SeqSize)..., 2 * SeqSize>;$/;"	t	struct:phmap::utility_internal::Extend
type	extern/parallel_hashmap/phmap_base.h	/^  using type = integer_sequence<T, Ints..., (Ints + SeqSize)...>;$/;"	t	struct:phmap::utility_internal::Extend
type	extern/parallel_hashmap/phmap_base.h	/^  using type = integer_sequence<T>;$/;"	t	struct:phmap::utility_internal::Gen	typeref:typename:integer_sequence<T>
type	extern/parallel_hashmap/phmap_base.h	/^  using type = std::false_type;$/;"	t	struct:phmap::type_traits_internal::is_detected_convertible_impl	typeref:typename:std::false_type
type	extern/parallel_hashmap/phmap_base.h	/^  using type = std::false_type;$/;"	t	struct:phmap::type_traits_internal::is_detected_impl	typeref:typename:std::false_type
type	extern/parallel_hashmap/phmap_base.h	/^  using type = std::true_type;$/;"	t	struct:phmap::type_traits_internal::is_detected_convertible_impl	typeref:typename:std::true_type
type	extern/parallel_hashmap/phmap_base.h	/^  using type = std::true_type;$/;"	t	struct:phmap::type_traits_internal::is_detected_impl	typeref:typename:std::true_type
type	extern/parallel_hashmap/phmap_base.h	/^  using type = typename GetFirstArg<Ptr>::type;$/;"	t	struct:phmap::memory_internal::ElementType	typeref:typename:GetFirstArg<Ptr>::type
type	extern/parallel_hashmap/phmap_base.h	/^  using type = typename RebindFirstArg<T, U>::type;$/;"	t	struct:phmap::memory_internal::RebindAlloc	typeref:typename:RebindFirstArg<T,U>::type
type	extern/parallel_hashmap/phmap_base.h	/^  using type = typename RebindFirstArg<T, U>::type;$/;"	t	struct:phmap::memory_internal::RebindPtr	typeref:typename:RebindFirstArg<T,U>::type
type	extern/parallel_hashmap/phmap_base.h	/^  using type = typename T::element_type;$/;"	t	struct:phmap::memory_internal::ElementType	typeref:typename:T::element_type
type	extern/parallel_hashmap/phmap_base.h	/^  using type = typename T::template rebind<U>;$/;"	t	struct:phmap::memory_internal::RebindPtr	typeref:typename:T::template rebind<U>
type	extern/parallel_hashmap/phmap_base.h	/^  using type = typename phmap::remove_reference_t<C>::value_type;$/;"	t	struct:phmap::span_internal::ElementType	typeref:typename:phmap::remove_reference_t<C>::value_type
type	extern/parallel_hashmap/phmap_base.h	/^  using type = void;$/;"	t	struct:phmap::type_traits_internal::VoidTImpl	typeref:typename:void
type	extern/parallel_hashmap/phmap_base.h	/^  using type =$/;"	t	struct:phmap::utility_internal::Gen	typeref:typename:Extend<typename Gen<T,N/2>::type,N/2,N%2>::type
type_error	extern/nlohmann_json/json.hpp	/^    type_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:detail::type_error
type_error	extern/nlohmann_json/json.hpp	/^    using type_error = detail::type_error;$/;"	t	class:basic_json	typeref:typename:detail::type_error
type_error	extern/nlohmann_json/json.hpp	/^class type_error : public exception$/;"	c	namespace:detail
type_name	extern/nlohmann_json/json.hpp	/^    const char* type_name() const noexcept$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL const char *
type_traits	.vscode/settings.json	/^        "type_traits": "cpp",$/;"	s	object:files.associations
type_traits_internal	extern/parallel_hashmap/btree.h	/^    namespace type_traits_internal {$/;"	n	namespace:phmap
type_traits_internal	extern/parallel_hashmap/phmap_base.h	/^namespace type_traits_internal {$/;"	n	namespace:phmap
type_traits_internal	extern/parallel_hashmap/phmap_dump.h	/^namespace type_traits_internal {$/;"	n	namespace:phmap
typeindex	.vscode/settings.json	/^        "typeindex": "cpp",$/;"	s	object:files.associations
typeinfo	.vscode/settings.json	/^        "typeinfo": "cpp",$/;"	s	object:files.associations
ubjson	extern/nlohmann_json/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
ubjson_prefix	extern/nlohmann_json/json.hpp	/^    CharType ubjson_prefix(const BasicJsonType& j, const bool use_bjdata) const noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
umul128	extern/parallel_hashmap/phmap_bits.h	/^        inline uint64_t umul128(uint64_t a, uint64_t b, uint64_t* high) $/;"	f	typeref:typename:uint64_t
umul128	extern/parallel_hashmap/phmap_bits.h	/^    inline uint64_t umul128(uint64_t a, uint64_t b, uint64_t* high) $/;"	f	typeref:typename:uint64_t
uncvref_t	extern/nlohmann_json/json.hpp	/^using uncvref_t = typename std::remove_cv<typename std::remove_reference<T>::type>::type;$/;"	t	namespace:detail	typeref:typename:std::remove_cv<typename std::remove_reference<T>::type>::type
underlying_type	extern/nlohmann_json/json.hpp	/^    using underlying_type = typename std::underlying_type<EnumType>::type;$/;"	t	function:detail::to_json	typeref:typename:std::underlying_type<EnumType>::type
underlying_type_t	extern/parallel_hashmap/phmap_base.h	/^using underlying_type_t = typename std::underlying_type<T>::type;$/;"	t	namespace:phmap	typeref:typename:std::underlying_type<T>::type
undumped_chars	extern/nlohmann_json/json.hpp	/^        std::size_t undumped_chars = 0;$/;"	m	class:detail::serializer	typeref:typename:std::size_t
unescape	extern/nlohmann_json/json.hpp	/^static void unescape(StringType& s)$/;"	f	namespace:detail	typeref:typename:void
unexpect_eof	extern/nlohmann_json/json.hpp	/^    bool unexpect_eof(const input_format_t format, const char* context) const$/;"	f	class:detail::binary_reader	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
unflatten	extern/nlohmann_json/json.hpp	/^    basic_json unflatten() const$/;"	f	class:basic_json	typeref:typename:basic_json
unflatten	extern/nlohmann_json/json.hpp	/^    unflatten(const BasicJsonType& value)$/;"	f	class:json_pointer	typeref:typename:BasicJsonType
unget	extern/nlohmann_json/json.hpp	/^    void unget()$/;"	f	class:detail::lexer	typeref:typename:void
uninitialized	extern/nlohmann_json/json.hpp	/^        uninitialized,    \/\/\/< indicating the scanner is uninitialized$/;"	e	enum:detail::lexer_base::token_type
uninitialized	include/frontends/tasking/worker.hpp	/^    uninitialized,$/;"	e	enum:HiCR::tasking::Worker::state_t
uninitialized	include/hicr/L0/executionState.hpp	/^    uninitialized,$/;"	e	enum:HiCR::L0::ExecutionState::state_t
uninitialized	include/hicr/L0/processingUnit.hpp	/^    uninitialized,$/;"	e	enum:HiCR::L0::ProcessingUnit::state_t
uninitialized_move_n	extern/parallel_hashmap/btree.h	/^        void uninitialized_move_n(const size_type n, const size_type i,$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
uninstall	extern/doxygen-awesome-css/Makefile	/^uninstall:$/;"	t
unlock	extern/parallel_hashmap/phmap_base.h	/^        void unlock()          { this->Unlock(); }$/;"	f	struct:phmap::AbslMutex	typeref:typename:void
unlock	extern/parallel_hashmap/phmap_base.h	/^        void unlock() { $/;"	f	class:phmap::LockableBaseImpl::ReadLock	typeref:typename:void
unlock	extern/parallel_hashmap/phmap_base.h	/^        void unlock() { $/;"	f	class:phmap::LockableBaseImpl::WriteLock	typeref:typename:void
unlock	extern/parallel_hashmap/phmap_base.h	/^    void unlock() {}$/;"	f	class:phmap::NullMutex	typeref:typename:void
unlock	include/backends/host/L0/globalMemorySlot.hpp	/^  __USED__ inline void unlock() { _mutex.unlock(); }$/;"	f	class:HiCR::backend::host::L0::GlobalMemorySlot	typeref:typename:__USED__ void
unlock	include/backends/host/pthreads/L1/communicationManager.hpp	/^  __USED__ inline void unlock() override$/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager	typeref:typename:__USED__ void
unlock	include/hicr/L1/communicationManager.hpp	/^  virtual void unlock(){};$/;"	f	class:HiCR::L1::CommunicationManager	typeref:typename:void
unlockMPIWindow	include/backends/mpi/L1/communicationManager.hpp	/^  __USED__ inline void unlockMPIWindow(const int rank, MPI_Win *window)$/;"	f	class:HiCR::backend::mpi::L1::CommunicationManager	typeref:typename:__USED__ void
unlock_shared	extern/parallel_hashmap/phmap_base.h	/^        void unlock_shared()   { this->ReaderUnlock(); }$/;"	f	struct:phmap::AbslMutex	typeref:typename:void
unlock_shared	extern/parallel_hashmap/phmap_base.h	/^    void unlock_shared() {}$/;"	f	class:phmap::NullMutex	typeref:typename:void
unordered	extern/parallel_hashmap/btree.h	/^        enum class ncmp : value_type { unordered = -127 };$/;"	e	enum:phmap::compare_internal::ncmp
unordered_map	.vscode/settings.json	/^        "unordered_map": "cpp",$/;"	s	object:files.associations
unordered_set	.vscode/settings.json	/^        "unordered_set": "cpp",$/;"	s	object:files.associations
update	extern/doxygen-awesome-css/doxygen-awesome-interactive-toc.js	/^    static update() {$/;"	m	class:DoxygenAwesomeInteractiveToc
update	extern/nlohmann_json/json.hpp	/^    void update(const_iterator first, const_iterator last, bool merge_objects = false)$/;"	f	class:basic_json	typeref:typename:void
update	extern/nlohmann_json/json.hpp	/^    void update(const_reference j, bool merge_objects = false)$/;"	f	class:basic_json	typeref:typename:void
updateAffinity	include/backends/host/pthreads/L0/processingUnit.hpp	/^  __USED__ static void updateAffinity(const std::set<int> &affinity)$/;"	f	class:HiCR::backend::host::pthreads::L0::ProcessingUnit	typeref:typename:__USED__ void
updateDepth	include/frontends/channel/fixedSize/spsc/consumer.hpp	/^  __USED__ inline void updateDepth()$/;"	f	class:HiCR::channel::fixedSize::SPSC::Consumer	typeref:typename:__USED__ void
updateDepth	include/frontends/channel/fixedSize/spsc/producer.hpp	/^  __USED__ inline void updateDepth()$/;"	f	class:HiCR::channel::fixedSize::SPSC::Producer	typeref:typename:__USED__ void
updateDepth	include/frontends/channel/variableSize/spsc/consumer.hpp	/^  __USED__ inline void updateDepth()$/;"	f	class:HiCR::channel::variableSize::SPSC::Consumer	typeref:typename:__USED__ void
updateDepth	include/frontends/channel/variableSize/spsc/producer.hpp	/^  __USED__ inline void updateDepth()$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer	typeref:typename:__USED__ void
updateIcon	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    updateIcon() {$/;"	m	class:DoxygenAwesomeDarkModeToggle
updateMessagesRecv	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void updateMessagesRecv(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memorySlot/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
updateMessagesSent	include/backends/lpf/L1/communicationManager.hpp	/^  __USED__ inline void updateMessagesSent(std::shared_ptr<HiCR::L0::GlobalMemorySlot> memorySlot/;"	f	class:HiCR::backend::lpf::L1::CommunicationManager	typeref:typename:__USED__ void
upper_bound	extern/parallel_hashmap/btree.h	/^        const_iterator upper_bound(const K &key) const {$/;"	f	class:phmap::priv::btree	typeref:typename:const_iterator
upper_bound	extern/parallel_hashmap/btree.h	/^        const_iterator upper_bound(const key_arg<K> &key) const { return tree_.upper_bound(key);/;"	f	class:phmap::priv::btree_container	typeref:typename:const_iterator
upper_bound	extern/parallel_hashmap/btree.h	/^        int upper_bound(const K &k, const key_compare &comp) const {$/;"	f	class:phmap::priv::btree_node	typeref:typename:int
upper_bound	extern/parallel_hashmap/btree.h	/^        iterator upper_bound(const K &key) {$/;"	f	class:phmap::priv::btree	typeref:typename:iterator
upper_bound	extern/parallel_hashmap/btree.h	/^        iterator upper_bound(const key_arg<K> &key) { return tree_.upper_bound(key); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:iterator
upper_bound_adapter	extern/parallel_hashmap/btree.h	/^        explicit upper_bound_adapter(const Compare &c) : comp(c) {}$/;"	f	struct:phmap::priv::upper_bound_adapter
upper_bound_adapter	extern/parallel_hashmap/btree.h	/^    struct upper_bound_adapter {$/;"	s	namespace:phmap::priv
url	extern/doxygen-awesome-css/package.json	/^    "url": "https:\/\/github.com\/jothepro",$/;"	s	object:author
url	extern/doxygen-awesome-css/package.json	/^    "url": "https:\/\/github.com\/jothepro\/doxygen-awesome-css.git"$/;"	s	object:repository
url	extern/doxygen-awesome-css/package.json	/^    "url": "https:\/\/github.com\/jothepro\/doxygen-awesome-css\/issues"$/;"	s	object:bugs
use_linear_search	extern/parallel_hashmap/btree.h	/^        using use_linear_search = std::integral_constant<$/;"	t	class:phmap::priv::btree_node
userPreference	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static get userPreference() {$/;"	G	class:DoxygenAwesomeDarkModeToggle
userPreference	extern/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js	/^    static set userPreference(userPreference) {$/;"	S	class:DoxygenAwesomeDarkModeToggle
utf8_bytes	extern/nlohmann_json/json.hpp	/^    std::array<std::char_traits<char>::int_type, 4> utf8_bytes = {{0, 0, 0, 0}};$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:std::array<std::char_traits<char>::int_type,4>
utf8_bytes_filled	extern/nlohmann_json/json.hpp	/^    std::size_t utf8_bytes_filled = 0;$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:std::size_t
utf8_bytes_index	extern/nlohmann_json/json.hpp	/^    std::size_t utf8_bytes_index = 0;$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:std::size_t
utility	.vscode/settings.json	/^        "utility": "cpp",$/;"	s	object:files.associations
utility_internal	extern/nlohmann_json/json.hpp	/^namespace utility_internal$/;"	n	namespace:detail
utility_internal	extern/parallel_hashmap/phmap_base.h	/^namespace utility_internal {$/;"	n	namespace:phmap
v	extern/nlohmann_json/json.hpp	/^    std::vector<CharType, AllocatorType>& v;$/;"	m	class:detail::output_vector_adapter	typeref:typename:std::vector<CharType,AllocatorType> &
valarray	.vscode/settings.json	/^        "valarray": "cpp",$/;"	s	object:files.associations
value	extern/atomic_queue/atomic_queue.h	/^    static int constexpr value = 0;$/;"	m	struct:atomic_queue::details::GetIndexShuffleBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^    static int constexpr value = array_size < min_size ? 0 : bits;$/;"	m	struct:atomic_queue::details::GetIndexShuffleBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<  2> { static int constexpr value = 1; };$/;"	m	struct:atomic_queue::details::GetCacheLineIndexBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<  4> { static int constexpr value = 2; };$/;"	m	struct:atomic_queue::details::GetCacheLineIndexBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<  8> { static int constexpr value = 3; };$/;"	m	struct:atomic_queue::details::GetCacheLineIndexBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits< 16> { static int constexpr value = 4; };$/;"	m	struct:atomic_queue::details::GetCacheLineIndexBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits< 32> { static int constexpr value = 5; };$/;"	m	struct:atomic_queue::details::GetCacheLineIndexBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits< 64> { static int constexpr value = 6; };$/;"	m	struct:atomic_queue::details::GetCacheLineIndexBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<128> { static int constexpr value = 7; };$/;"	m	struct:atomic_queue::details::GetCacheLineIndexBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^template<> struct GetCacheLineIndexBits<256> { static int constexpr value = 8; };$/;"	m	struct:atomic_queue::details::GetCacheLineIndexBits	typeref:typename:int 
value	extern/atomic_queue/atomic_queue.h	/^template<size_t elements_per_cache_line> struct GetCacheLineIndexBits { static int constexpr val/;"	m	struct:atomic_queue::details::GetCacheLineIndexBits	typeref:typename:int 
value	extern/nlohmann_json/json.hpp	/^        value = sizeof(value_type) > 1$/;"	e	enum:detail::is_iterator_of_multibyte::__anon7c8093bd0a03
value	extern/nlohmann_json/json.hpp	/^    ReturnType value(const ::nlohmann::json_pointer<BasicJsonType>& ptr, ValueType && default_va/;"	f	class:basic_json
value	extern/nlohmann_json/json.hpp	/^    ValueType value(const ::nlohmann::json_pointer<BasicJsonType>& ptr, const ValueType& default/;"	f	class:basic_json
value	extern/nlohmann_json/json.hpp	/^    constexpr T static_const<T>::value;$/;"	m	class:detail::static_const<T>	typeref:typename:T
value	extern/nlohmann_json/json.hpp	/^    enum { value = sizeof(test<T>(nullptr)) == sizeof(char) }; \/\/ NOLINT(cppcoreguidelines-pro/;"	e	enum:detail::is_ordered_map::__anon7c8093bd0103
value	extern/nlohmann_json/json.hpp	/^    reference value() const$/;"	f	class:detail::iter_impl	typeref:typename:reference
value	extern/nlohmann_json/json.hpp	/^    reference value() const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:reference
value	extern/nlohmann_json/json.hpp	/^    static JSON_INLINE_VARIABLE constexpr T value{};$/;"	m	struct:detail::static_const	typeref:typename:JSON_INLINE_VARIABLE T
value	extern/nlohmann_json/json.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_compatible_integer_type_impl	typeref:typename:auto
value	extern/nlohmann_json/json.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_compatible_string_type	typeref:typename:auto
value	extern/nlohmann_json/json.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_constructible_string_type	typeref:typename:auto
value	extern/nlohmann_json/json.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_iterator_traits	typeref:typename:auto
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value = !std::is_same<iterator, nonesuch>::value && !std::is_same<sent/;"	m	struct:detail::is_range	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value = is_detected<get_template_function, const BasicJsonType&, T>::v/;"	m	struct:detail::is_getable	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::has_from_json	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::has_non_default_from_json	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::has_to_json	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_compatible_array_type_impl	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_compatible_object_type_impl	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_compatible_type_impl	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_constructible_array_type_impl	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_constructible_object_type_impl	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_sax	typeref:typename:bool
value	extern/nlohmann_json/json.hpp	/^    typename IteratorType::reference value() const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:IteratorType::reference
value	extern/nlohmann_json/json.hpp	/^    value$/;"	e	enum:detail::parse_event_t
value	extern/parallel_hashmap/btree.h	/^        V value;$/;"	m	struct:phmap::priv::SearchResult	typeref:typename:V
value	extern/parallel_hashmap/btree.h	/^        const_reference value(size_type i) const { return params_type::element(slot(i)); }$/;"	f	class:phmap::priv::btree_node	typeref:typename:const_reference
value	extern/parallel_hashmap/btree.h	/^        reference value(size_type i) { return params_type::element(slot(i)); }$/;"	f	class:phmap::priv::btree_node	typeref:typename:reference
value	extern/parallel_hashmap/btree.h	/^        static mapped_type &value(value_type *value) { return value->second; }$/;"	f	struct:phmap::priv::map_params	typeref:typename:mapped_type &
value	extern/parallel_hashmap/phmap.h	/^        static constexpr bool value = std::is_same<decltype(test<T>(0)), yes>::value;$/;"	m	struct:phmap::priv::raw_hash_set::has_difference_operator	typeref:typename:bool
value	extern/parallel_hashmap/phmap.h	/^    static V& value(std::pair<const K, V>* kv) { return kv->second; }$/;"	f	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:V &
value	extern/parallel_hashmap/phmap.h	/^    static Value& value(value_type* elem) { return elem->second; }$/;"	f	class:phmap::priv::NodeHashMapPolicy	typeref:typename:Value &
value	extern/parallel_hashmap/phmap.h	/^    static auto value(T* elem) -> decltype(P::value(elem)) {$/;"	f	struct:phmap::priv::node_hash_policy	typeref:typename:decltype(P::value (elem))
value	extern/parallel_hashmap/phmap.h	/^    static const V& value(const std::pair<const K, V>* kv) { return kv->second; }$/;"	f	struct:phmap::priv::FlatHashMapPolicy	typeref:typename:const V &
value	extern/parallel_hashmap/phmap.h	/^    static const Value& value(const value_type* elem) { return elem->second; }$/;"	f	class:phmap::priv::NodeHashMapPolicy	typeref:typename:const Value &
value	extern/parallel_hashmap/phmap_base.h	/^    T value;$/;"	m	struct:phmap::priv::internal_compressed_tuple::Storage	typeref:typename:T
value	extern/parallel_hashmap/phmap_base.h	/^    T& value() & {$/;"	f	class:phmap::optional	typeref:typename:T &
value	extern/parallel_hashmap/phmap_base.h	/^    T&& value() && {  \/\/ NOLINT(build\/c++11)$/;"	f	class:phmap::optional	typeref:typename:T &&
value	extern/parallel_hashmap/phmap_base.h	/^    constexpr const T& value() const & {$/;"	f	class:phmap::optional	typeref:typename:const T &
value	extern/parallel_hashmap/phmap_base.h	/^    constexpr const T&& value() const && {  \/\/ NOLINT(build\/c++11)$/;"	f	class:phmap::optional	typeref:typename:const T &&
value	extern/parallel_hashmap/phmap_base.h	/^    static auto value(T* elem) -> decltype(P::value(elem)) {$/;"	f	struct:phmap::priv::hash_policy_traits	typeref:typename:decltype(P::value (elem))
value	extern/parallel_hashmap/phmap_base.h	/^    static constexpr bool value = std::is_standard_layout<K>() &&$/;"	m	struct:phmap::priv::memory_internal::IsLayoutCompatible	typeref:typename:bool
value	extern/parallel_hashmap/phmap_base.h	/^    static constexpr size_t value = N;$/;"	m	struct:phmap::priv::internal_layout::AlignOf	typeref:typename:size_t
value	extern/parallel_hashmap/phmap_base.h	/^    static constexpr size_t value = alignof(T);$/;"	m	struct:phmap::priv::internal_layout::AlignOf	typeref:typename:size_t
value	extern/parallel_hashmap/phmap_base.h	/^    value_type value;$/;"	m	union:phmap::priv::map_slot_type	typeref:typename:value_type
value	extern/parallel_hashmap/phmap_base.h	/^    value_type& value() const { return PolicyTraits::element(this->slot()); }$/;"	f	class:phmap::priv::node_handle	typeref:typename:value_type &
value	extern/parallel_hashmap/phmap_dump.h	/^    static constexpr bool value = IsTriviallyCopyable<T1>::value && IsTriviallyCopyable<T2>::val/;"	m	struct:phmap::type_traits_internal::IsTriviallyCopyable	typeref:typename:bool
value	extern/parallel_hashmap/phmap_utils.h	/^    static constexpr bool value = std::is_same<decltype(test<T>(0)), yes>::value;$/;"	m	struct:phmap::has_hash_value	typeref:typename:bool
value_	extern/parallel_hashmap/btree.h	/^        compare_internal::value_type value_;$/;"	m	class:phmap::partial_ordering	typeref:typename:compare_internal::value_type
value_	extern/parallel_hashmap/btree.h	/^        compare_internal::value_type value_;$/;"	m	class:phmap::strong_equality	typeref:typename:compare_internal::value_type
value_	extern/parallel_hashmap/btree.h	/^        compare_internal::value_type value_;$/;"	m	class:phmap::strong_ordering	typeref:typename:compare_internal::value_type
value_	extern/parallel_hashmap/btree.h	/^        compare_internal::value_type value_;$/;"	m	class:phmap::weak_equality	typeref:typename:compare_internal::value_type
value_	extern/parallel_hashmap/btree.h	/^        compare_internal::value_type value_;$/;"	m	class:phmap::weak_ordering	typeref:typename:compare_internal::value_type
value_comp	extern/parallel_hashmap/btree.h	/^        value_compare value_comp() const { return tree_.value_comp(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:value_compare
value_comp	extern/parallel_hashmap/btree.h	/^        value_compare value_comp() const { return value_compare(key_comp()); }$/;"	f	class:phmap::priv::btree	typeref:typename:value_compare
value_compare	extern/parallel_hashmap/btree.h	/^            explicit value_compare(const key_compare &cmp) : key_compare(cmp) {}$/;"	f	struct:phmap::priv::map_params::value_compare
value_compare	extern/parallel_hashmap/btree.h	/^        struct value_compare : private key_compare {$/;"	s	struct:phmap::priv::map_params
value_compare	extern/parallel_hashmap/btree.h	/^        using value_compare = typename Params::value_compare;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::value_compare
value_compare	extern/parallel_hashmap/btree.h	/^        using value_compare = typename Tree::value_compare;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::value_compare
value_compare	extern/parallel_hashmap/btree.h	/^        using value_compare = typename set_params::common_params::key_compare;$/;"	t	struct:phmap::priv::set_params	typeref:typename:set_params::common_params::key_compare
value_destroy	extern/parallel_hashmap/btree.h	/^        void value_destroy(const size_type i, allocator_type *alloc) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
value_destroy_n	extern/parallel_hashmap/btree.h	/^        void value_destroy_n(const size_type i, const size_type n,$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
value_float	extern/nlohmann_json/json.hpp	/^        value_float,      \/\/\/< an floating point number -- use get_number_float() for actual /;"	e	enum:detail::lexer_base::token_type
value_float	extern/nlohmann_json/json.hpp	/^    number_float_t value_float = 0;$/;"	m	class:detail::lexer	typeref:typename:number_float_t
value_in_range_of	extern/nlohmann_json/json.hpp	/^inline constexpr bool value_in_range_of(T val)$/;"	f	namespace:detail	typeref:typename:bool
value_in_range_of_impl1	extern/nlohmann_json/json.hpp	/^struct value_in_range_of_impl1<OfType, T, false>$/;"	s	namespace:detail
value_in_range_of_impl1	extern/nlohmann_json/json.hpp	/^struct value_in_range_of_impl1<OfType, T, true>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/nlohmann_json/json.hpp	/^struct value_in_range_of_impl2<OfType, T, false, false>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/nlohmann_json/json.hpp	/^struct value_in_range_of_impl2<OfType, T, false, true>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/nlohmann_json/json.hpp	/^struct value_in_range_of_impl2<OfType, T, true, false>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/nlohmann_json/json.hpp	/^struct value_in_range_of_impl2<OfType, T, true, true>$/;"	s	namespace:detail
value_init	extern/parallel_hashmap/btree.h	/^        void value_init(const size_type i, allocator_type *alloc, Args &&... args) {$/;"	f	class:phmap::priv::btree_node	typeref:typename:void
value_integer	extern/nlohmann_json/json.hpp	/^        value_integer,    \/\/\/< a signed integer -- use get_number_integer() for actual value$/;"	e	enum:detail::lexer_base::token_type
value_integer	extern/nlohmann_json/json.hpp	/^    number_integer_t value_integer = 0;$/;"	m	class:detail::lexer	typeref:typename:number_integer_t
value_or	extern/parallel_hashmap/phmap_base.h	/^    T value_or(U&& v) && {  \/\/ NOLINT(build\/c++11)$/;"	f	class:phmap::optional	typeref:typename:T
value_or	extern/parallel_hashmap/phmap_base.h	/^    constexpr T value_or(U&& v) const& {$/;"	f	class:phmap::optional	typeref:typename:T
value_ref	extern/nlohmann_json/json.hpp	/^    value_type const* value_ref = nullptr;$/;"	m	class:detail::json_ref	typeref:typename:value_type const *
value_return_type	extern/nlohmann_json/json.hpp	/^    using value_return_type = std::conditional <$/;"	t	class:basic_json	typeref:typename:std::conditional<detail::is_c_string_uncvref<ValueType>::value,string_t,typename std::decay<ValueType>::type>
value_separator	extern/nlohmann_json/json.hpp	/^        value_separator,  \/\/\/< the value separator `,`$/;"	e	enum:detail::lexer_base::token_type
value_string	extern/nlohmann_json/json.hpp	/^        value_string,     \/\/\/< a string -- use get_string() for actual value$/;"	e	enum:detail::lexer_base::token_type
value_t	extern/nlohmann_json/json.hpp	/^    using value_t = detail::value_t;$/;"	t	class:basic_json	typeref:typename:detail::value_t
value_t	extern/nlohmann_json/json.hpp	/^    using value_t = std::false_type;$/;"	t	struct:detail::detector	typeref:typename:std::false_type
value_t	extern/nlohmann_json/json.hpp	/^    using value_t = std::true_type;$/;"	t	struct:detail::detector	typeref:typename:std::true_type
value_t	extern/nlohmann_json/json.hpp	/^enum class value_t : std::uint8_t$/;"	g	namespace:detail	typeref:typename:std::uint8_t
value_type	extern/atomic_queue/atomic_queue.h	/^    using value_type = T;$/;"	t	class:atomic_queue::AtomicQueue	typeref:typename:T
value_type	extern/atomic_queue/atomic_queue.h	/^    using value_type = T;$/;"	t	class:atomic_queue::AtomicQueue2	typeref:typename:T
value_type	extern/atomic_queue/atomic_queue.h	/^    using value_type = T;$/;"	t	class:atomic_queue::AtomicQueueB	typeref:typename:T
value_type	extern/atomic_queue/atomic_queue.h	/^    using value_type = T;$/;"	t	class:atomic_queue::AtomicQueueB2	typeref:typename:T
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = BasicJsonType;$/;"	t	class:detail::json_ref	typeref:typename:BasicJsonType
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = T;$/;"	t	struct:detail::integer_sequence	typeref:typename:T
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = T;$/;"	t	struct:detail::iterator_traits	typeref:typename:T
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = basic_json;$/;"	t	class:basic_json	typeref:typename:basic_json
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = iteration_proxy_value;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:iteration_proxy_value
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = range_value_t<ConstructibleArrayType>;$/;"	t	struct:detail::is_constructible_array_type_impl	typeref:typename:range_value_t<ConstructibleArrayType>
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = typename BasicJsonType::value_type;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::value_type
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = typename ConstructibleObjectType::value_type;$/;"	t	function:detail::from_json	typeref:typename:ConstructibleObjectType::value_type
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = typename Container::value_type;$/;"	t	struct:ordered_map	typeref:typename:Container::value_type
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = typename It::value_type;$/;"	t	struct:detail::iterator_types	typeref:typename:It::value_type
value_type	extern/nlohmann_json/json.hpp	/^    using value_type = typename std::iterator_traits<T>::value_type;$/;"	t	struct:detail::is_iterator_of_multibyte	typeref:typename:std::iterator_traits<T>::value_type
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = Key;$/;"	t	struct:phmap::priv::set_params	typeref:typename:Key
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = Key;$/;"	t	struct:phmap::priv::set_slot_policy	typeref:typename:Key
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = int8_t;$/;"	t	namespace:phmap::compare_internal	typeref:typename:int8_t
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = typename Params::value_type;$/;"	t	class:phmap::priv::btree	typeref:typename:Params::value_type
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = typename Params::value_type;$/;"	t	class:phmap::priv::btree_node	typeref:typename:Params::value_type
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = typename Tree::value_type;$/;"	t	class:phmap::priv::btree_container	typeref:typename:Tree::value_type
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = typename Tree::value_type;$/;"	t	class:phmap::priv::btree_map_container	typeref:typename:Tree::value_type
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = typename Tree::value_type;$/;"	t	class:phmap::priv::btree_multiset_container	typeref:typename:Tree::value_type
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = typename Tree::value_type;$/;"	t	class:phmap::priv::btree_set_container	typeref:typename:Tree::value_type
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = typename params_type::value_type;$/;"	t	struct:phmap::priv::btree_iterator	typeref:typename:params_type::value_type
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = typename slot_policy::value_type;$/;"	t	struct:phmap::priv::common_params	typeref:typename:slot_policy::value_type
value_type	extern/parallel_hashmap/btree.h	/^        using value_type = typename super_type::value_type;$/;"	t	struct:phmap::priv::map_params	typeref:typename:super_type::value_type
value_type	extern/parallel_hashmap/phmap.h	/^        using value_type        = typename parallel_hash_set::value_type;$/;"	t	class:phmap::priv::parallel_hash_set::const_iterator	typeref:typename:parallel_hash_set::value_type
value_type	extern/parallel_hashmap/phmap.h	/^        using value_type        = typename parallel_hash_set::value_type;$/;"	t	class:phmap::priv::parallel_hash_set::iterator	typeref:typename:parallel_hash_set::value_type
value_type	extern/parallel_hashmap/phmap.h	/^        using value_type = typename raw_hash_set::value_type;$/;"	t	class:phmap::priv::raw_hash_set::const_iterator	typeref:typename:raw_hash_set::value_type
value_type	extern/parallel_hashmap/phmap.h	/^        using value_type = typename raw_hash_set::value_type;$/;"	t	class:phmap::priv::raw_hash_set::iterator	typeref:typename:raw_hash_set::value_type
value_type	extern/parallel_hashmap/phmap.h	/^    using value_type      = typename PolicyTraits::value_type;$/;"	t	class:phmap::priv::parallel_hash_set	typeref:typename:PolicyTraits::value_type
value_type	extern/parallel_hashmap/phmap.h	/^    using value_type  = typename Base::value_type;$/;"	t	class:phmap::priv::parallel_hash_map	typeref:typename:Base::value_type
value_type	extern/parallel_hashmap/phmap.h	/^    using value_type = int;$/;"	t	class:phmap::priv::BitMask	typeref:typename:int
value_type	extern/parallel_hashmap/phmap.h	/^    using value_type = std::pair<const Key, Value>;$/;"	t	class:phmap::priv::NodeHashMapPolicy	typeref:typename:std::pair<const Key,Value>
value_type	extern/parallel_hashmap/phmap.h	/^    using value_type = typename PolicyTraits::value_type;$/;"	t	class:phmap::priv::raw_hash_set	typeref:typename:PolicyTraits::value_type
value_type	extern/parallel_hashmap/phmap_base.h	/^    typedef T value_type;$/;"	t	class:phmap::optional	typeref:typename:T
value_type	extern/parallel_hashmap/phmap_base.h	/^    using value_type = T;$/;"	t	struct:phmap::integer_sequence	typeref:typename:T
value_type	extern/parallel_hashmap/phmap_base.h	/^    using value_type = phmap::remove_cv_t<T>;$/;"	t	class:phmap::Span	typeref:typename:phmap::remove_cv_t<T>
value_type	extern/parallel_hashmap/phmap_base.h	/^    using value_type = std::pair<const K, V>;$/;"	t	struct:phmap::priv::map_slot_policy	typeref:typename:std::pair<const K,V>
value_type	extern/parallel_hashmap/phmap_base.h	/^    using value_type = std::pair<const K, V>;$/;"	t	union:phmap::priv::map_slot_type	typeref:typename:std::pair<const K,V>
value_type	extern/parallel_hashmap/phmap_base.h	/^    using value_type = typename Alloc::value_type;$/;"	t	struct:phmap::allocator_traits	typeref:typename:Alloc::value_type
value_type	extern/parallel_hashmap/phmap_base.h	/^    using value_type = typename PolicyTraits::value_type;$/;"	t	class:phmap::priv::node_handle	typeref:typename:PolicyTraits::value_type
value_type	extern/parallel_hashmap/phmap_base.h	/^    using value_type = typename std::remove_reference<reference>::type;$/;"	t	struct:phmap::priv::hash_policy_traits	typeref:typename:std::remove_reference<reference>::type
value_type_t	extern/nlohmann_json/json.hpp	/^using value_type_t = typename T::value_type;$/;"	t	namespace:detail	typeref:typename:T::value_type
value_unsigned	extern/nlohmann_json/json.hpp	/^        value_unsigned,   \/\/\/< an unsigned integer -- use get_number_unsigned() for actual va/;"	e	enum:detail::lexer_base::token_type
value_unsigned	extern/nlohmann_json/json.hpp	/^    number_unsigned_t value_unsigned = 0;$/;"	m	class:detail::lexer	typeref:typename:number_unsigned_t
variableSize	examples/channels/meson.build	/^subdir('variableSize')$/;"	S
variableSize	include/frontends/channel/variableSize/base.hpp	/^namespace variableSize$/;"	n	namespace:HiCR::channel
variableSize	include/frontends/channel/variableSize/spsc/consumer.hpp	/^namespace variableSize$/;"	n	namespace:HiCR::channel
variableSize	include/frontends/channel/variableSize/spsc/producer.hpp	/^namespace variableSize$/;"	n	namespace:HiCR::channel
variant	.vscode/settings.json	/^        "variant": "cpp"$/;"	s	object:files.associations
vector	.vscode/settings.json	/^        "vector": "cpp",$/;"	s	object:files.associations
verify	extern/parallel_hashmap/btree.h	/^        void verify() const { tree_.verify(); }$/;"	f	class:phmap::priv::btree_container	typeref:typename:void
verify	extern/parallel_hashmap/btree.h	/^    void btree<P>::verify() const {$/;"	f	class:phmap::priv::btree	typeref:typename:void
verify	include/hicr/L0/topology.hpp	/^  __USED__ static inline void verify(const nlohmann::json &input)$/;"	f	class:HiCR::L0::Topology	typeref:typename:__USED__ void
version	.vscode/c_cpp_properties.json	/^    "version": 4$/;"	n
version	extern/doxygen-awesome-css/package.json	/^  "version": "2.2.1",$/;"	s
void_pointer	extern/parallel_hashmap/phmap_base.h	/^    using void_pointer = memory_internal::ExtractOrT<$/;"	t	struct:phmap::allocator_traits	typeref:typename:memory_internal::ExtractOrT<memory_internal::GetVoidPointer,Alloc,typename phmap::pointer_traits<pointer>::template rebind<void>>
void_t	extern/nlohmann_json/json.hpp	/^template<typename ...Ts> using void_t = typename make_void<Ts...>::type;$/;"	t	namespace:detail	typeref:typename:make_void<Ts...>::type
void_t	extern/parallel_hashmap/btree.h	/^    using void_t = typename type_traits_internal::VoidTImpl<Ts...>::type;$/;"	t	namespace:phmap	typeref:typename:type_traits_internal::VoidTImpl<Ts...>::type
void_t	extern/parallel_hashmap/phmap_base.h	/^using void_t = typename type_traits_internal::VoidTImpl<Ts...>::type;$/;"	t	namespace:phmap	typeref:typename:type_traits_internal::VoidTImpl<Ts...>::type
w	extern/nlohmann_json/json.hpp	/^    diyfp w;$/;"	m	struct:detail::dtoa_impl::boundaries	typeref:typename:diyfp
waitFc	examples/tasking/energySaver/source/main.cpp	/^void waitFc(taskr::Runtime *taskr, size_t secondsDelay)$/;"	f	typeref:typename:void
warningAsErrorFlags	include/hicr/meson.build	/^  warningAsErrorFlags=[ '-Werror' ]$/;"	V
warningAsErrorFlags	include/hicr/meson.build	/^warningAsErrorFlags=[]$/;"	V
was_empty	extern/atomic_queue/atomic_queue.h	/^    bool was_empty() const noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:bool
was_full	extern/atomic_queue/atomic_queue.h	/^    bool was_full() const noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:bool
was_size	extern/atomic_queue/atomic_queue.h	/^    unsigned was_size() const noexcept {$/;"	f	class:atomic_queue::AtomicQueueCommon	typeref:typename:unsigned
weak_equality	extern/parallel_hashmap/btree.h	/^        explicit constexpr weak_equality(compare_internal::eq v) noexcept$/;"	f	class:phmap::weak_equality
weak_equality	extern/parallel_hashmap/btree.h	/^    class weak_equality$/;"	c	namespace:phmap
weak_equality_base	extern/parallel_hashmap/btree.h	/^        struct weak_equality_base {$/;"	s	namespace:phmap::compare_internal
weak_ordering	extern/parallel_hashmap/btree.h	/^        explicit constexpr weak_ordering(compare_internal::eq v) noexcept$/;"	f	class:phmap::weak_ordering
weak_ordering	extern/parallel_hashmap/btree.h	/^        explicit constexpr weak_ordering(compare_internal::ord v) noexcept$/;"	f	class:phmap::weak_ordering
weak_ordering	extern/parallel_hashmap/btree.h	/^    class weak_ordering$/;"	c	namespace:phmap
weak_ordering_base	extern/parallel_hashmap/btree.h	/^        struct weak_ordering_base {$/;"	s	namespace:phmap::compare_internal
what	extern/nlohmann_json/json.hpp	/^    const char* what() const noexcept override$/;"	f	class:detail::exception	typeref:typename:const char *
wide_string_input_adapter	extern/nlohmann_json/json.hpp	/^    wide_string_input_adapter(BaseInputAdapter base)$/;"	f	class:detail::wide_string_input_adapter
wide_string_input_adapter	extern/nlohmann_json/json.hpp	/^class wide_string_input_adapter$/;"	c	namespace:detail
wide_string_input_helper	extern/nlohmann_json/json.hpp	/^struct wide_string_input_helper<BaseInputAdapter, 2>$/;"	s	namespace:detail
wide_string_input_helper	extern/nlohmann_json/json.hpp	/^struct wide_string_input_helper<BaseInputAdapter, 4>$/;"	s	namespace:detail
with_submap	extern/parallel_hashmap/phmap.h	/^    void with_submap(size_t idx, F&& fCallback) const {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
with_submap_m	extern/parallel_hashmap/phmap.h	/^    void with_submap_m(size_t idx, F&& fCallback) {$/;"	f	class:phmap::priv::parallel_hash_set	typeref:typename:void
work	examples/tasking/resourceList/source/workTask.hpp	/^void work(const size_t iterations)$/;"	f	typeref:typename:void
workFc	examples/tasking/energySaver/source/main.cpp	/^void workFc(const size_t iterations)$/;"	f	typeref:typename:void
worker	tests/frontends/tasking/meson.build	/^    test('worker',     executable('worker',     'worker.cpp',     dependencies: HiCRTestBuildDep/;"	B
worker	tests/frontends/tasking/meson.build	/^    test('worker',     executable('worker',     'worker.cpp',     dependencies: HiCRTestBuildDep/;"	t
workerFc	examples/hicr/instances/source/include/worker.hpp	/^void workerFc(HiCR::L1::InstanceManager &instanceManager, std::shared_ptr<HiCR::L0::MemorySpace>/;"	f	typeref:typename:void
workerFc	examples/hicr/topologyRPC/source/include/worker.hpp	/^void workerFc(HiCR::L1::InstanceManager &instanceManager)$/;"	f	typeref:typename:void
workerFc	examples/machineModel/source/include/worker.hpp	/^void workerFc(HiCR::L1::InstanceManager &instanceManager, std::vector<HiCR::L1::TopologyManager /;"	f	typeref:typename:void
worker_t	include/frontends/runtime/coordinator.hpp	/^  struct worker_t$/;"	s	class:HiCR::runtime::Coordinator
write_bjdata_ndarray	extern/nlohmann_json/json.hpp	/^    bool write_bjdata_ndarray(const typename BasicJsonType::object_t& value, const bool use_coun/;"	f	class:detail::binary_writer	typeref:typename:bool
write_bson	extern/nlohmann_json/json.hpp	/^    void write_bson(const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_array	extern/nlohmann_json/json.hpp	/^    void write_bson_array(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_binary	extern/nlohmann_json/json.hpp	/^    void write_bson_binary(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_boolean	extern/nlohmann_json/json.hpp	/^    void write_bson_boolean(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_double	extern/nlohmann_json/json.hpp	/^    void write_bson_double(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_element	extern/nlohmann_json/json.hpp	/^    void write_bson_element(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_entry_header	extern/nlohmann_json/json.hpp	/^    void write_bson_entry_header(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_integer	extern/nlohmann_json/json.hpp	/^    void write_bson_integer(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_null	extern/nlohmann_json/json.hpp	/^    void write_bson_null(const string_t& name)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_object	extern/nlohmann_json/json.hpp	/^    void write_bson_object(const typename BasicJsonType::object_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_object_entry	extern/nlohmann_json/json.hpp	/^    void write_bson_object_entry(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_string	extern/nlohmann_json/json.hpp	/^    void write_bson_string(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_unsigned	extern/nlohmann_json/json.hpp	/^    void write_bson_unsigned(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_cbor	extern/nlohmann_json/json.hpp	/^    void write_cbor(const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_character	extern/nlohmann_json/json.hpp	/^    void write_character(CharType c) override$/;"	f	class:detail::output_stream_adapter	typeref:typename:void
write_character	extern/nlohmann_json/json.hpp	/^    void write_character(CharType c) override$/;"	f	class:detail::output_string_adapter	typeref:typename:void
write_character	extern/nlohmann_json/json.hpp	/^    void write_character(CharType c) override$/;"	f	class:detail::output_vector_adapter	typeref:typename:void
write_characters	extern/nlohmann_json/json.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:detail::output_stream_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/nlohmann_json/json.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:detail::output_string_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/nlohmann_json/json.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:detail::output_vector_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_compact_float	extern/nlohmann_json/json.hpp	/^    void write_compact_float(const number_float_t n, detail::input_format_t format)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_msgpack	extern/nlohmann_json/json.hpp	/^    void write_msgpack(const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_number	extern/nlohmann_json/json.hpp	/^    void write_number(const NumberType n, const bool OutputIsLittleEndian = false)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_number_with_ubjson_prefix	extern/nlohmann_json/json.hpp	/^    void write_number_with_ubjson_prefix(const NumberType n,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_ubjson	extern/nlohmann_json/json.hpp	/^    void write_ubjson(const BasicJsonType& j, const bool use_count,$/;"	f	class:detail::binary_writer	typeref:typename:void
x	extern/nlohmann_json/json.hpp	/^        char x[2]; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-a/;"	m	struct:detail::is_ordered_map::two	typeref:typename:char[2]
xlink	extern/doxygen-awesome-css/img/theme-variants.drawio.svg	/^<svg host="65bd71144e" xmlns="http:\/\/www.w3.org\/2000\/svg" xmlns:xlink="http:\/\/www.w3.org\//;"	n	uri:http://www.w3.org/1999/xlink
xlink	extern/doxygen-awesome-css/logo.drawio.svg	/^<svg xmlns="http:\/\/www.w3.org\/2000\/svg" xmlns:xlink="http:\/\/www.w3.org\/1999\/xlink" versi/;"	n	uri:http://www.w3.org/1999/xlink
xpack	extern/doxygen-awesome-css/package.json	/^  "xpack": {}$/;"	o
yes	extern/parallel_hashmap/phmap.h	/^        using yes = std::true_type;$/;"	t	struct:phmap::priv::raw_hash_set::has_difference_operator	typeref:typename:std::true_type
yes	extern/parallel_hashmap/phmap_utils.h	/^    typedef std::true_type yes;$/;"	t	struct:phmap::has_hash_value	typeref:typename:std::true_type
yield	include/backends/host/coroutine.hpp	/^  __USED__ inline void yield()$/;"	f	class:HiCR::backend::host::Coroutine	typeref:typename:__USED__ void
~AtomicQueueB	extern/atomic_queue/atomic_queue.h	/^    ~AtomicQueueB() noexcept {$/;"	f	class:atomic_queue::AtomicQueueB
~AtomicQueueB2	extern/atomic_queue/atomic_queue.h	/^    ~AtomicQueueB2() noexcept {$/;"	f	class:atomic_queue::AtomicQueueB2
~CommunicationManager	include/backends/host/pthreads/L1/communicationManager.hpp	/^  ~CommunicationManager()$/;"	f	class:HiCR::backend::host::pthreads::L1::CommunicationManager
~Device	include/backends/ascend/L0/device.hpp	/^  ~Device()$/;"	f	class:HiCR::backend::ascend::L0::Device
~MemoryKernel	include/backends/ascend/memoryKernel.hpp	/^  ~MemoryKernel() {}$/;"	f	class:HiCR::backend::ascend::MemoryKernel
~NullMutex	extern/parallel_hashmap/phmap_base.h	/^    ~NullMutex() {}$/;"	f	class:phmap::NullMutex
~Producer	include/frontends/channel/variableSize/spsc/producer.hpp	/^  ~Producer() {}$/;"	f	class:HiCR::channel::variableSize::SPSC::Producer
~ReadLock	extern/parallel_hashmap/phmap_base.h	/^        ~ReadLock() {$/;"	f	class:phmap::LockableBaseImpl::ReadLock
~ReadLocks	extern/parallel_hashmap/phmap_base.h	/^        ~ReadLocks()$/;"	f	class:phmap::LockableBaseImpl::ReadLocks
~WriteLock	extern/parallel_hashmap/phmap_base.h	/^        ~WriteLock() {$/;"	f	class:phmap::LockableBaseImpl::WriteLock
~WriteLocks	extern/parallel_hashmap/phmap_base.h	/^        ~WriteLocks()$/;"	f	class:phmap::LockableBaseImpl::WriteLocks
~basic_json	extern/nlohmann_json/json.hpp	/^    ~basic_json() noexcept$/;"	f	class:basic_json
~btree	extern/parallel_hashmap/btree.h	/^        ~btree() {$/;"	f	class:phmap::priv::btree
~input_stream_adapter	extern/nlohmann_json/json.hpp	/^    ~input_stream_adapter()$/;"	f	class:detail::input_stream_adapter
~node_handle_base	extern/parallel_hashmap/phmap_base.h	/^    ~node_handle_base() { destroy(); }$/;"	f	class:phmap::priv::node_handle_base
~optional_data_dtor_base	extern/parallel_hashmap/phmap_base.h	/^    ~optional_data_dtor_base() { destruct(); }$/;"	f	class:phmap::optional_internal::optional_data_dtor_base
~parallel_hash_set	extern/parallel_hashmap/phmap.h	/^    ~parallel_hash_set() {}$/;"	f	class:phmap::priv::parallel_hash_set
~raw_hash_set	extern/parallel_hashmap/phmap.h	/^    ~raw_hash_set() { destroy_slots(); }$/;"	f	class:phmap::priv::raw_hash_set
